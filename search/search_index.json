{"config":{"lang":["en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\u6765\u5230\u6211\u7684\u4e2a\u4eba\u535a\u5ba2","text":"<p>\u8fd9\u662fUnicornZhen\u7684\u4e2a\u4eba\u535a\u5ba2https://unicornZhen.github.io</p> <ul> <li>\u901a\u8fc7\u4e3b\u9898\u548c\u76ee\u5f55\u4ee5\u6253\u5f00\u6587\u7ae0<ul> <li>PC\u7aef \u5728\u4e0a\u65b9\u6807\u7b7e\u680f\u9009\u62e9\u4e3b\u9898 \u5728\u5de6\u4fa7\u76ee\u5f55\u9009\u62e9\u6587\u7ae0</li> <li>\u79fb\u52a8\u7aef \u70b9\u51fb\u5de6\u4e0a\u89d2\u56fe\u6807\u9009\u62e9\u4e3b\u9898\u548c\u6587\u7ae0</li> </ul> </li> <li>\u641c\u7d22\u5173\u952e\u8bcd\u4ee5\u6253\u5f00\u6587\u7ae0</li> </ul>"},{"location":"ALGORITHM/","title":"\u7b80\u4ecb","text":"<ul> <li>\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u7b97\u6cd5\u7684\u535a\u5ba2\u8bb0\u5f55\uff0c\u76ee\u524d\u5305\u542b\u672c\u4eba\u5728\u4ee3\u7801\u968f\u60f3\u5f55\u4e0a\u7684\u4e00\u4e9b\u5237\u9898\u8bb0\u5f55\uff0c\u76ee\u524d\u5904\u4e8e\u66f4\u65b0\u4e2d</li> <li>\u8be6\u60c5\u53ef\u89c1\u4fa7\u8fb9\u680f</li> </ul>"},{"location":"ALGORITHM/#_2","title":"\u5173\u4e8e\u4ee3\u7801\u8bad\u7ec3\u8425\u7684\u77e5\u8bc6","text":"<p>\u6570\u636e\u53ef\u89c6\u5316</p> <ul> <li>\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u53ef\u89c6\u5316</li> <li>\u6570\u636e\u7ed3\u6784\u7684\u767e\u79d1\u5168\u4e66</li> </ul>"},{"location":"ALGORITHM/#_3","title":"\u9898\u76ee\u7b14\u8bb0\u7684\u6a21\u677f","text":""},{"location":"ALGORITHM/#_4","title":"\u9898\u76ee","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/#_5","title":"\u601d\u8def","text":""},{"location":"ALGORITHM/#_6","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":""},{"location":"ALGORITHM/#_7","title":"\u6e90\u7801","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day10_StackAndQueue_part01/","title":"day10 \u6808\u548c\u961f\u5217part01","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day10_StackAndQueue_part01/#232","title":"232.\u7528\u6808\u5b9e\u73b0\u961f\u5217","text":"<p>232. \u7528\u6808\u5b9e\u73b0\u961f\u5217 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day10_StackAndQueue_part01/#_1","title":"\u601d\u8def","text":"<p>\u4e24\u4e2a\u6808s1,s2\u5b9e\u73b0\u961f\u5217\uff0cs1\u5012\u5165\u5230s2\u4e2d\u518d\u5f39\u51fa\uff0c\u4ece\u800c\u6ee1\u8db3\u961f\u5217\u7684\u5148\u8fdb\u5148\u51fa\u3002\u6ce8\u610f\u4e00\u4e9b\u4f18\u5316\u7684\u5c0f\u6280\u5de7\uff0cpop\u4e4b\u540e\u4e0d\u7acb\u9a6c\u628as2\u4e2d\u7684\u5185\u5bb9\u5012\u5165s1\u4e2d\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day10_StackAndQueue_part01/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u5206\u6790\u5404\u9879\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4e3a\u7b80\u5355\uff0c\u5728\u6b64\u4e0d\u8d58\u8ff0\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day10_StackAndQueue_part01/#_3","title":"\u6e90\u7801","text":"<pre><code>class MyQueue {  \npublic:  \n    MyQueue() {  \n\n    }  \n\n    void push(int x) {  \n        while (!s2.empty()){  \n            s1.push(s2.top());  \n            s2.pop();  \n        }  \n        s1.push(x);  \n    }  \n\n    int pop() {  \n        if (s1.empty()&amp;&amp;s2.empty())return -1;  \n        while (!s1.empty()){  \n            s2.push(s1.top());  \n            s1.pop();  \n        }  \n        int value=s2.top();  \n        s2.pop();  \n        return value;  \n    }  \n\n    int peek() {  \n        if(s1.empty()&amp;&amp;s2.empty())return -1;  \n        if(!s2.empty()){  \n            return s2.top();  \n        }  \n        while (!s1.empty()){  \n            s2.push(s1.top());  \n            s1.pop();  \n        }  \n        return s2.top();  \n    }  \n\n    bool empty() {  \n        return s1.empty()&amp;&amp;s2.empty();  \n    }  \n\nprivate:  \n    stack&lt;int&gt; s1, s2;  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day10_StackAndQueue_part01/#225","title":"225.\u7528\u961f\u5217\u5b9e\u73b0\u6808","text":"<p>225. \u7528\u961f\u5217\u5b9e\u73b0\u6808 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day10_StackAndQueue_part01/#_4","title":"\u601d\u8def","text":"<p>\u9898\u89e3\u4e2d\u65b9\u6cd5\uff1a\u672c\u8d28\u4e0a\u4f7f\u5f97\u961f\u5217\u4e2d\u7684\u5143\u7d20\u7684\u987a\u5e8f\u662f\u4e00\u4e2a\u6808\uff0c\u6240\u4ee5\u9700\u8981\u505a\u5165\u6808\u65f6\u7684\u7ef4\u62a4\u64cd\u4f5c\uff0c\u5176\u4ed6\u64cd\u4f5c\u90fd\u662fO(1)\uff0c\u65b9\u6cd5\u4e0a\u6bd4\u6211\u7684\u65b9\u6cd5\u8981\u597d\u4e00\u4e9b\u3002 \u9898\u89e3\u7528\u4e00\u4e2a\u961f\u5217\u5b9e\u73b0\u6808\u7684\u6e90\u7801</p> <pre><code>class MyStack {  \npublic:  \n    queue&lt;int&gt; q;  \n\n    /** Initialize your data structure here. */  \n    MyStack() {  \n\n    }  \n\n    /** Push element x onto stack. */  \n    void push(int x) {  \n        int n = q.size();  \n        q.push(x);  \n        for (int i = 0; i &lt; n; i++) {  \n            q.push(q.front());  \n            q.pop();  \n        }  \n    }  \n\n    /** Removes the element on top of the stack and returns that element. */  \n    int pop() {  \n        int r = q.front();  \n        q.pop();  \n        return r;  \n    }  \n\n    /** Get the top element. */  \n    int top() {  \n        int r = q.front();  \n        return r;  \n    }  \n\n    /** Returns whether the stack is empty. */  \n    bool empty() {  \n        return q.empty();  \n    }  \n};\n</code></pre> <p>\u6211\u91c7\u7528\u7684\u65b9\u6cd5\u662fpop\u65f6\u548ctop\u65f6\u53d6\u5f97\u961f\u5217\u7684\u9996\u4e2a\u5143\u7d20\uff0c\u9700\u8981\u5bf9pop\u548ctop\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0cpush\u590d\u6742\u5ea6\u4e3aO(1)\uff0cpop\u548ctop\u590d\u6742\u5ea6\u4e3aO(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day10_StackAndQueue_part01/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1apush\u590d\u6742\u5ea6\u4e3aO(1)\uff0cpop\u548ctop\u590d\u6742\u5ea6\u4e3aO(n) S(n)\uff1a\u4f7f\u7528\u4e00\u4e2a\u961f\u5217</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day10_StackAndQueue_part01/#_6","title":"\u6e90\u7801","text":"<pre><code>class MyStack {  \npublic:  \n    MyStack() {  \n\n    }  \n\n    void push(int x) {  \n        que.push(x);  \n    }  \n\n    int pop() {  \n        if(que.empty())return -1;  \n\n        int size=que.size();  \n        for(int i=0;i&lt;size-1;i++){  \n            que.push(que.front());  \n            que.pop();  \n        }  \n        int value=que.front();  \n        que.pop();  \n        size--;  \n        return value;  \n    }  \n\n    int top() {  \n        if(que.empty())return -1;  \n\n        int value=0;  \n        int size=que.size();  \n        for(int i=0;i&lt;size;i++){  \n            if(i==size-1){  \n                value=que.front();  \n            }  \n            que.push(que.front());  \n            que.pop();  \n        }  \n        return value;  \n    }  \n\n    bool empty() {  \n        return que.empty();  \n    }  \nprivate:  \n    queue&lt;int&gt; que;  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/","title":"day11 \u6808\u548c\u961f\u5217part02","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#20","title":"20.\u6709\u6548\u7684\u62ec\u53f7","text":"<p>20. \u6709\u6548\u7684\u62ec\u53f7 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#_1","title":"\u601d\u8def","text":"<p>\u6808\u7684\u5178\u578b\u5e94\u7528</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>n\u4e3a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 O(n) S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    bool isValid(string s) {  \n        stack&lt;char&gt; brackets;  \n        for(auto it:s){  \n            switch (it) {  \n                case '(':  \n                    brackets.push(it);  \n                    break;  \n                case '{':  \n                    brackets.push(it);  \n                    break;  \n                case '[':  \n                    brackets.push(it);  \n                    break;  \n                case ')':  \n                    if(brackets.empty()||brackets.top()!='('){  \n                        return false;  \n                    }  \n                    brackets.pop();  \n                    break;  \n                case '}':  \n                    if(brackets.empty()||brackets.top()!='{'){  \n                        return false;  \n                    }  \n                    brackets.pop();  \n                    break;  \n                case ']':  \n                    if(brackets.empty()||brackets.top()!='['){  \n                        return false;  \n                    }  \n                    brackets.pop();  \n                    break;  \n                default:  \n                    return false;  \n\n            }  \n        }  \n        if(!brackets.empty()){  \n            return false;  \n        }  \n        return true;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#1047","title":"1047.\u79fb\u9664\u6240\u6709\u76f8\u90bb\u7684\u91cd\u590d\u5b57\u7b26","text":"<p>1047. \u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u76f8\u90bb\u91cd\u590d\u9879 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#_4","title":"\u601d\u8def","text":"<p>\u672c\u8d28\u4e0a\u4e0e20.\u6709\u6548\u7684\u62ec\u53f7\u7684\u89e3\u9898\u601d\u8def\u4e00\u81f4\uff0c\u6309\u7167\u9898\u76ee\u8981\u6c42\u6a21\u62df\u505a\u7684\u8bdd\u4f1a\u53d1\u73b0\u4e0e20\u4e2d\u5f02\u66f2\u540c\u5de5\uff0c\u4e5f\u662f\u6808\u7684\u5e94\u7528\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>n\u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6 O(n)\uff1a\u626b\u63cf\u3001\u6808\u5012\u5165\u7ed3\u679c\u3001\u7ed3\u679c\u4e2d\u7684\u5b57\u7b26\u53cd\u8f6c S(n)\uff1a\u6808\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u7ed3\u679c\u590d\u6742\u5ea6\u4e3aO(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    string removeDuplicates(string s) {  \n        stack&lt;char&gt; st;  \n        string result;  \n        for(auto it:s){  \n            if (!st.empty()&amp;&amp;st.top()==it){  \n                st.pop();  \n            }else{  \n                st.push(it);  \n            }  \n        }  \n        while (!st.empty()){  \n            result.push_back(st.top());  \n            st.pop();  \n        }  \n        reverse(result.begin(), result.end());  \n        return result;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#150","title":"150.\u8ba1\u7b97\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f","text":"<p>150. \u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#_7","title":"\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f","text":"<p>\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\uff08Reverse Polish Notation\uff0cRPN\uff09\uff0c\u4e5f\u79f0\u4e3a\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u662f\u4e00\u79cd\u6570\u5b66\u8868\u8fbe\u5f0f\u7684\u8868\u793a\u65b9\u5f0f\uff0c\u5176\u4e2d\u8fd0\u7b97\u7b26\u5728\u64cd\u4f5c\u6570\u4e4b\u540e\u3002\u8fd9\u79cd\u8868\u793a\u6cd5\u6d88\u9664\u4e86\u62ec\u53f7\u7684\u9700\u6c42\uff0c\u540c\u65f6\u786e\u4fdd\u4e86\u8868\u8fbe\u5f0f\u7684\u552f\u4e00\u89e3\u91ca\u3002</p> <p>\u4f8b\u5982\uff0c\u4e2d\u7f00\u8868\u8fbe\u5f0f \"3 + 4 * 5\" \u53ef\u4ee5\u8f6c\u6362\u4e3a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f \"3 4 5 * +\"\u3002\u5728\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u4e2d\uff0c\u64cd\u4f5c\u6570\u76f4\u63a5\u8ddf\u5728\u64cd\u4f5c\u7b26\u540e\u9762\uff0c\u800c\u4e0d\u9700\u8981\u62ec\u53f7\u6765\u6307\u5b9a\u8fd0\u7b97\u6b21\u5e8f\u3002</p> <p>\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u901a\u5e38\u4f7f\u7528\u6808\u6765\u5b9e\u73b0\u3002\u904d\u5386\u8868\u8fbe\u5f0f\uff0c\u5f53\u9047\u5230\u64cd\u4f5c\u6570\u65f6\uff0c\u5c06\u5176\u5165\u6808\uff1b\u5f53\u9047\u5230\u64cd\u4f5c\u7b26\u65f6\uff0c\u5f39\u51fa\u6808\u9876\u7684\u4e24\u4e2a\u64cd\u4f5c\u6570\u8fdb\u884c\u8ba1\u7b97\uff0c\u5e76\u5c06\u7ed3\u679c\u91cd\u65b0\u5165\u6808\u3002\u8fd9\u6837\uff0c\u904d\u5386\u5b8c\u6574\u4e2a\u8868\u8fbe\u5f0f\u540e\uff0c\u6808\u4e2d\u7684\u5143\u7d20\u5c31\u662f\u6700\u7ec8\u7684\u8ba1\u7b97\u7ed3\u679c\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#_8","title":"\u601d\u8def","text":"<p>\u7528\u6808\u5b9e\u73b0\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\uff0c\u601d\u8def\u6bd4\u8f83\u7b80\u5355\uff0c\u89c1\u4e0a\u8ff0\u7684\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u7b80\u4ecb\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662fswitch\u4e2d\u6761\u4ef6\u7684\u8bbe\u7f6e\uff0c\u5f53\u65f6\u5199\u7684\u65f6\u5019\u5ffd\u7565\u4e86\"-12\"\u548c\"-\"</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#_9","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n) S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#_10","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    int evalRPN(vector&lt;string&gt; &amp;tokens) {  \n        stack&lt;int&gt; operands;  \n        int op1=0;  \n        int op2=0;  \n        // convert an integer of type string to an integer of type int  \n        for (auto &amp;it: tokens) {  \n            switch (it[0]) {  \n                case '+':  \n                    // handle the number like\uff1a+12  \n                    if(it.size()==1) {  \n                        op2 = operands.top();  \n                        operands.pop();  \n                        op1 = operands.top();  \n                        operands.pop();  \n                        operands.push(op1 + op2);  \n                    }else{  \n                        operands.push(stoi(it));  \n                    }  \n                    break;  \n                case '-':  \n                    // handle negative number:-12  \n                    if(it.size()==1){  \n                        op2=operands.top();  \n                        operands.pop();  \n                        op1=operands.top();  \n                        operands.pop();  \n                        operands.push(op1-op2);  \n                    }else{  \n                        operands.push(stoi(it));  \n                    }  \n                    break;  \n                case '*':  \n                    op2=operands.top();  \n                    operands.pop();  \n                    op1=operands.top();  \n                    operands.pop();  \n                    operands.push(op1*op2);  \n                    break;  \n                case '/':  \n                    op2=operands.top();  \n                    operands.pop();  \n                    op1=operands.top();  \n                    operands.pop();  \n                    operands.push(op1/op2);  \n                    break;  \n\n                    // handle the digits  \n                default:  \n                    operands.push(stoi(it));  \n                    break;  \n            }  \n        }  \n        return operands.top();  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day11_StackAndQueue_part02/#_11","title":"\u603b\u7ed3","text":"<ul> <li>\u6808\u7684\u5178\u578b\u5e94\u7528\uff08\u62ec\u53f7\u5339\u914d\uff09\uff0c\u8fd8\u6709\u6808\u7684\u6269\u5c55\u5e94\u7528\uff0c\u603b\u4e4b\u6808\u662f\u5341\u5206\u5f3a\u5927\u7684</li> <li>\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u8ba1\u7b97\u4e0e\u5982\u4f55\u4ece\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u6362\u5f97\u5230\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\uff08\u540e\u7f00\u8868\u8fbe\u5f0f\uff09</li> <li>\u5bf9\u4e8eC++\u7684string\uff0ca+=b\u7684\u6548\u7387\u6bd4a=a+b\u7684\u6548\u7387\u8981\u9ad8\uff0c\u56e0\u4e3aa+=b\u53ef\u4ee5\u76f4\u63a5\u5728a\u7684\u672b\u5c3e\u8ffd\u52a0b\uff0c\u800c\u4e0d\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684string\u5bf9\u8c61\u6765\u5b58\u50a8a\u548cb\u7684\u548c\u3002\u800ca=a+b\u5219\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u7684string\u5bf9\u8c61\u6765\u4fdd\u5b58a\u548cb\u7684\u548c\uff0c\u7136\u540e\u518d\u8d4b\u503c\u7ed9a\u3002\u8fd9\u6837\u5c31\u4f1a\u589e\u52a0\u5185\u5b58\u5206\u914d\u548c\u62f7\u8d1d\u7684\u5f00\u9500\u3002\u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\u667a\u80fd\u6307\u9488\u7684\u4f5c\u7528</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day13_StackAndQueue_part03/","title":"day13 \u6808\u548c\u961f\u5217part03","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day13_StackAndQueue_part03/#239","title":"239.\u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5927\u503c","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day13_StackAndQueue_part03/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u4f18\u5148\u961f\u5217\u3002\u9700\u8981\u6ce8\u610f\u4f18\u5148\u961f\u5217\u7684\u5b9e\u73b0\uff0cpriority_queue&gt;\u7684\u6bd4\u8f83\u51fd\u6570\u4f1a\u9ed8\u8ba4\u6bd4\u8f83\u7b2c\u4e00\u4e2a\uff0c\u4e5f\u53ef\u4ee5priority_queue\u6309\u7167priority_queue\u7684\u6a21\u677f\u58f0\u660e\u6765\u7528\u3002 <p>\u65b9\u6cd5\u4e8c\uff1a\u5355\u8c03\u961f\u5217\u3002\u4e0e\u5355\u8c03\u6808\u7c7b\u4f3c\uff0c\u7531\u4e8e\u6211\u4eec\u9700\u8981\u6c42\u51fa\u7684\u662f\u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5927\u503c\uff0c\u5982\u679c\u5f53\u524d\u7684\u6ed1\u52a8\u7a97\u53e3\u4e2d\u6709\u4e24\u4e2a\u4e0b\u6807 i\u548c j\uff0c\u5176\u4e2d i\u5728 j \u7684\u5de6\u4fa7\uff08i&lt;&lt;j\uff09\uff0c\u5e76\u4e14 i\u5bf9\u5e94\u7684\u5143\u7d20\u4e0d\u5927\u4e8e j \u5bf9\u5e94\u7684\u5143\u7d20\uff08nums[i]\u2264nums[j]\uff09\uff0c\u90a3\u4e48\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1fnums[i] \u4e00\u5b9a\u4e0d\u4f1a\u662f\u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 nums[i]\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u961f\u5217\u5b58\u50a8\u6240\u6709\u8fd8\u6ca1\u6709\u88ab\u79fb\u9664\u7684\u4e0b\u6807\u3002\u5728\u961f\u5217\u4e2d\uff0c\u8fd9\u4e9b\u4e0b\u6807\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u88ab\u5b58\u50a8\uff0c\u5e76\u4e14\u5b83\u4eec\u5728\u6570\u7ec4 nums \u4e2d\u5bf9\u5e94\u7684\u503c\u662f\u4e25\u683c\u5355\u8c03\u9012\u51cf\u7684\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day13_StackAndQueue_part03/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u65b9\u6cd5\u4e00:O(nlogn),S(n) \u65b9\u6cd5\u4e8c\uff1aO(n),S(k)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day13_StackAndQueue_part03/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    vector&lt;int&gt; maxSlidingWindow(vector&lt;int&gt;&amp; nums, int k) {  \n        int n = nums.size();  \n        priority_queue&lt;pair&lt;int, int&gt;&gt; q;  \n        for (int i = 0; i &lt; k; ++i) {  \n            q.emplace(nums[i], i);  \n        }  \n        vector&lt;int&gt; ans = {q.top().first};  \n        for (int i = k; i &lt; n; ++i) {  \n            q.emplace(nums[i], i);  \n            while (q.top().second &lt;= i - k) {  \n                q.pop();  \n            }  \n            ans.push_back(q.top().first);  \n        }  \n        return ans;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day13_StackAndQueue_part03/#347top-k-frequent-elements","title":"347.Top K Frequent Elements","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day13_StackAndQueue_part03/#_4","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u5148\u5229\u7528unordered_map\uff08\u54c8\u5e0c\u8868)\u7edf\u8ba1nums\u4e2d\u5404\u4e2a\u5143\u7d20\u7684\u9891\u7387\uff0c\u5229\u7528\u5c0f\u6839\u5806\u5b9e\u73b0\u627e\u5230\u8fd9\u4e2aunorderd_map\u4e2d\u7684\u524dk\u4e2a\u5143\u7d20\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662fcompare\u51fd\u6570\u7684\u7f16\u5199\u3002 \u65b9\u6cd5\u4e8c\uff1a\u5feb\u6392\u627e\u524dk\u4e2a\u6700\u5927\u5143\u7d20\u3002 \u672c\u9898\u91c7\u7528\u65b9\u6cd5\u4e00</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day13_StackAndQueue_part03/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(nlogk)\u3001S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day13_StackAndQueue_part03/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    vector&lt;int&gt; topKFrequent(vector&lt;int&gt;&amp; nums, int k) {  \n        // \u65b9\u6cd5\uff1a\u5148\u7edf\u8ba1\u51fa\u5404\u4e2a\u5143\u7d20\u7684\u9891\u7387,\u7136\u540e\u518d\u4f7f\u7528\u5927\u6839\u5806\u5f97\u5230\u6700\u5927\u503c  \n        struct Compare {  \n            bool operator()(const pair&lt;int, int&gt;&amp; a, const pair&lt;int, int&gt;&amp; b) {  \n                return a.first &gt; b.first;  \n            }  \n        };  \n\n        vector&lt;int&gt; result;  \n        priority_queue&lt;pair&lt;int,int&gt;,vector&lt;pair&lt;int,int&gt;&gt;,Compare&gt; priorityQueue;//pair&lt;the frequency of the element,the value of the element&gt;  \n        unordered_map&lt;int,int&gt; frequency;//&lt;the value of the element,the frequency of the element&gt;  \n        for(auto num:nums){  \n            frequency[num]++;  \n        }  \n\n        for(auto it:frequency){  \n            priorityQueue.push({it.second,it.first});  \n            if(priorityQueue.size()&gt;=k+1){  \n                priorityQueue.pop();  \n            }  \n        }  \n\n        while (!priorityQueue.empty()){  \n            result.push_back(priorityQueue.top().second);  \n            priorityQueue.pop();  \n        }  \n        return result;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day13_StackAndQueue_part03/#_7","title":"\u603b\u7ed3","text":"<ul> <li>\u5355\u8c03\u6808\u548c\u5355\u8c03\u961f\u5217\u7684\u601d\u60f3\u5341\u5206\u5de7\u5999\uff0c\u5176\u5e94\u7528\u8981\u5c3d\u91cf\u628a\u63e1\u3002</li> <li>\u4f18\u5148\u7ea7\u961f\u5217\u7684\u4f7f\u7528\uff1a\u6ed1\u52a8\u7a97\u53e3\u3001\u524dk\u4e2a\u5143\u7d20\uff0c\u8fd8\u6709compare\u3001pair\u7684\u4f7f\u7528\u548c\u7f16\u5199\u3002"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day14_BinaryTree_part01/","title":"\u4e8c\u53c9\u6811\u7684\u57fa\u672c\u77e5\u8bc6","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day14_BinaryTree_part01/#_2","title":"\u4e8c\u53c9\u6811\u7684\u9012\u5f52\u904d\u5386","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day14_BinaryTree_part01/#_3","title":"\u4e8c\u53c9\u6811\u7684\u8fed\u4ee3\u904d\u5386","text":"<p>\u5176\u4e2d\u503c\u5f97\u6ce8\u610f\u7684\u662f\u4e8c\u53c9\u6811\u7684\u7edf\u4e00\u8fed\u4ee3\u904d\u5386\uff08\u6216\u8bb8\u901a\u8fc7\u6a21\u4eff\u9012\u5f52\u904d\u5386\u7684\u4e2d\u6808\u5e27\u7684\u884c\u4e3a\u5e76\u540c\u65f6\u505a\u4e00\u4e9b\u4f18\u5316\u64cd\u4f5c\u4e5f\u80fd\u5b9e\u73b0\u53e6\u5916\u4e00\u79cd\u7edf\u4e00\u8fed\u4ee3\u904d\u5386\uff09\uff0c\u8fd9\u91cc\u7684\u7edf\u4e00\u8fed\u4ee3\u904d\u5386\u91c7\u7528\u6807\u8bb0\u6cd5\u7684\u65b9\u5f0f\u3002 \u4e2d\u5e8f\u7684\u7edf\u4e00\u8fed\u4ee3\u904d\u5386\u6e90\u7801\uff1a <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; inorderTraversal(TreeNode* root) {\n        vector&lt;int&gt; result;\n        stack&lt;TreeNode*&gt; st;\n        if (root != NULL) st.push(root);\n        while (!st.empty()) {\n            TreeNode* node = st.top();\n            if (node != NULL) {\n                st.pop(); // \u5c06\u8be5\u8282\u70b9\u5f39\u51fa\uff0c\u907f\u514d\u91cd\u590d\u64cd\u4f5c\uff0c\u4e0b\u9762\u518d\u5c06\u53f3\u4e2d\u5de6\u8282\u70b9\u6dfb\u52a0\u5230\u6808\u4e2d\n                if (node-&gt;right) st.push(node-&gt;right);  // \u6dfb\u52a0\u53f3\u8282\u70b9\uff08\u7a7a\u8282\u70b9\u4e0d\u5165\u6808\uff09\n\n                st.push(node);                          // \u6dfb\u52a0\u4e2d\u8282\u70b9\n                st.push(NULL); // \u4e2d\u8282\u70b9\u8bbf\u95ee\u8fc7\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u5904\u7406\uff0c\u52a0\u5165\u7a7a\u8282\u70b9\u505a\u4e3a\u6807\u8bb0\u3002\n\n                if (node-&gt;left) st.push(node-&gt;left);    // \u6dfb\u52a0\u5de6\u8282\u70b9\uff08\u7a7a\u8282\u70b9\u4e0d\u5165\u6808\uff09\n            } else { // \u53ea\u6709\u9047\u5230\u7a7a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u624d\u5c06\u4e0b\u4e00\u4e2a\u8282\u70b9\u653e\u8fdb\u7ed3\u679c\u96c6\n                st.pop();           // \u5c06\u7a7a\u8282\u70b9\u5f39\u51fa\n                node = st.top();    // \u91cd\u65b0\u53d6\u51fa\u6808\u4e2d\u5143\u7d20\n                st.pop();\n                result.push_back(node-&gt;val); // \u52a0\u5165\u5230\u7ed3\u679c\u96c6\n            }\n        }\n        return result;\n    }\n};\n</code></pre></p> <p>\u524d\u5e8f\u7684\u7edf\u4e00\u8fed\u4ee3\u904d\u5386\uff1a <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; preorderTraversal(TreeNode* root) {\n        vector&lt;int&gt; result;\n        stack&lt;TreeNode*&gt; st;\n        if (root != NULL) st.push(root);\n        while (!st.empty()) {\n            TreeNode* node = st.top();\n            if (node != NULL) {\n                st.pop();\n                if (node-&gt;right) st.push(node-&gt;right);  // \u53f3\n                if (node-&gt;left) st.push(node-&gt;left);    // \u5de6\n                st.push(node);                          // \u4e2d\n                st.push(NULL);\n            } else {\n                st.pop();\n                node = st.top();\n                st.pop();\n                result.push_back(node-&gt;val);\n            }\n        }\n        return result;\n    }\n};\n</code></pre></p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day15_BinaryTree_part02/","title":"day15 \u4e8c\u53c9\u6811part02","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day15_BinaryTree_part02/#102429637","title":"\u5c42\u5e8f\u904d\u5386\uff1a102\u3001429\u3001637","text":"<p>102\u9898\u76ee\u94fe\u63a5\u3001429\u9898\u76ee\u94fe\u63a5\u3001637\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day15_BinaryTree_part02/#_1","title":"\u601d\u8def","text":"<p>\u4e8c\u53c9\u6811\u5c42\u5e8f\u904d\u5386\u7684\u57fa\u672c\u601d\u8def\u548c\u6269\u5c55\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u4e8c\u53c9\u6811\u7684\u5404\u5c42\u5212\u5206\u7684\u65b9\u6cd5\uff0c\u5229\u7528\u4e00\u4e9b\u53d8\u91cf\u5728\u5165\u961f\u65f6\u8bb0\u4f4f\u6bcf\u5c42\u7684\u5927\u5c0f\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day15_BinaryTree_part02/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\u3001S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day15_BinaryTree_part02/#_3","title":"\u6e90\u7801","text":"<p>637\u7684\u6e90\u7801</p> <pre><code>struct TreeNode {  \n    int val;  \n    TreeNode *left;  \n    TreeNode *right;  \n\n    TreeNode() : val(0), left(nullptr), right(nullptr) {}  \n\n    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}  \n\n    TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}  \n};  \n\nclass Solution {  \npublic:  \n    vector&lt;double&gt; averageOfLevels(TreeNode *root) {  \n        vector&lt;double&gt; result;  \n\n        int level_left_nodes=1;  \n        int level_next_nodes=0;  \n        int level_cur_nodes=1;  \n        double sum=0;  \n        queue&lt;TreeNode *&gt; que;  \n        TreeNode *p;  \n\n        que.push(root);  \n        while(!que.empty()){  \n            p=que.front();  \n            que.pop();  \n            sum+=p-&gt;val;  \n            if(p-&gt;left){  \n                que.push(p-&gt;left);  \n                level_next_nodes++;  \n            }  \n            if(p-&gt;right){  \n                que.push(p-&gt;right);  \n                level_next_nodes++;  \n            }  \n            level_left_nodes--;  \n            if(level_left_nodes&lt;=0){  \n                level_left_nodes=level_next_nodes;  \n                level_cur_nodes=level_next_nodes;  \n                level_next_nodes=0;  \n                sum=0;  \n                // \u6309\u7167\u89c4\u5b9a\u683c\u5f0f\u8ba1\u7b97\u51fa\u8fd9\u5c42\u8282\u70b9\u7684\u5e73\u5747\u503c  \n                result.push_back(sum/level_cur_nodes);  \n            }  \n        }  \n        return result;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day15_BinaryTree_part02/#226101","title":"226.\u53cd\u8f6c\u4e8c\u53c9\u6811\u3001101.\u5bf9\u79f0\u4e8c\u53c9\u6811","text":"<p>226\u9898\u76ee\u94fe\u63a5\u3001101\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day15_BinaryTree_part02/#_4","title":"\u601d\u8def","text":"<p>\u5c31\u5f88\u7b80\u5355\u7684\u9012\u5f52</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day15_BinaryTree_part02/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\u3001S(logn)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day15_BinaryTree_part02/#_6","title":"\u6e90\u7801","text":"<p>226\u6e90\u7801</p> <pre><code>/**  \n * Definition for a binary tree node. * struct TreeNode { \n *     int val; \n *     TreeNode *left; \n *     TreeNode *right; \n *     TreeNode() : val(0), left(nullptr), right(nullptr) {} \n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} \n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} \n * };\n */\nclass Solution {  \npublic:  \n    TreeNode* invertTree(TreeNode* root) {  \n        if(root==nullptr){  \n            return nullptr;  \n        }  \n        swap(root-&gt;left,root-&gt;right);  \n        invertTree(root-&gt;left);  \n        invertTree(root-&gt;right);  \n        return root;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/","title":"day16 \u4e8c\u53c9\u6811part03","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/#104","title":"104.\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52\u6cd5\uff0c\u601d\u60f3\u7b80\u5355\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002 \u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3\u6cd5\uff0c\u4f7f\u7528\u961f\u5217\u904d\u5386\u7684\u65b9\u5f0f\u5f97\u5230\u6df1\u5ea6\u3002\uff08\u8fd9\u79cd\u5173\u4e8e\u4e8c\u53c9\u6811\u9898\u76ee\u4f7f\u7528\u8fed\u4ee3\u7684\u65b9\u6cd5\u662f\u8003\u8651\u4ece\u4e8c\u53c9\u6811\u7684\u4e09\u79cd\u8fed\u4ee3\u904d\u5386\u65b9\u5f0f\u3001\u5c42\u5e8f\u904d\u5386\u7684\u4e2d\u5bfb\u627e\u7a81\u7834\u53e3\uff09\u3002\u5e94\u8be5\u91c7\u7528\u540e\u5e8f\u904d\u5386\u7684\u8fed\u4ee3\u904d\u5386\u65b9\u5f0f\uff0c\u8fd9\u6837\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(h)\u3002 \u672c\u9898\u76ee\u91c7\u7528\u8fed\u4ee3\u6cd5\u89e3\u7b54\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n) S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    int maxDepth(TreeNode* root) {  \n        if(root==nullptr){  \n            return 0;  \n        }  \n        int result=0;  \n        int cur_left_nodes=1;  \n        int next_level_nodes=0;  \n        queue&lt;TreeNode *&gt; que;  \n        TreeNode *p;  \n\n        que.push(root);  \n        while(!que.empty()){  \n            p=que.front();  \n            que.pop();  \n            cur_left_nodes--;  \n            if(p-&gt;left!=nullptr){  \n                que.push(p-&gt;left);  \n                next_level_nodes++;  \n            }  \n            if(p-&gt;right!=nullptr){  \n                que.push(p-&gt;right);  \n                next_level_nodes++;  \n            }  \n            if(cur_left_nodes&lt;=0){  \n                cur_left_nodes=next_level_nodes;  \n                next_level_nodes=0;  \n                result++;  \n            }  \n        }  \n        return result;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/#111","title":"111. \u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/#_4","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52\u6cd5\u3002\u6ce8\u610f\u6709\u4e2a\u5751\uff0c\u5e76\u4e0d\u662f\u6700\u7b80\u5355\u7684\u8fd4\u56de\u6700\u5c0f\u503c\u3002 \u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3\u6cd5\u3002\u4e0e104\u4e2d\u7684\u8fed\u4ee3\u6cd5\u57fa\u672c\u65e0\u5dee\u522b</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\u3001S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    int minDepth(TreeNode* root) {  \n        if(root==nullptr){  \n            return 0;  \n        }  \n        int result=0;  \n        int cur_left_nodes=1;  \n        int next_level_nodes=0;  \n        queue&lt;TreeNode *&gt; que;  \n        TreeNode *p=root;  \n\n        que.push(root);  \n        while(!que.empty()){  \n            p=que.front();  \n            que.pop();  \n            cur_left_nodes--;  \n            if(p-&gt;left!=nullptr){  \n                que.push(p-&gt;left);  \n                next_level_nodes++;  \n            }  \n            if(p-&gt;right!=nullptr){  \n                que.push(p-&gt;right);  \n                next_level_nodes++;  \n            }  \n            if(p-&gt;right==nullptr&amp;&amp;p-&gt;left==nullptr){  \n                return result+1;  \n            }  \n            if(cur_left_nodes&lt;=0){  \n                cur_left_nodes=next_level_nodes;  \n                next_level_nodes=0;  \n                result++;  \n            }  \n        }  \n        return result;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/#222","title":"222.\u8ba1\u7b97\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/#_7","title":"\u601d\u8def","text":"<p>\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u5f97\u5230\u6700\u540e\u4e00\u5c42\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u5229\u7528\u4ee5\u4e0b\u7684\u5173\u7cfb\uff1a \u8bbek\u4e3a\u6700\u540e\u4e00\u5c42\u8282\u70b9\u7684\u4e2a\u6570\uff0ck-1\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u53ef\u4ee5\uff081\u4e3a\u5411\u53f3\uff0c0\u5411\u5de6\uff0c\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u4f9d\u6b21\u6620\u5c04\uff09\u6620\u5c04\u4e3a\u4ece\u6839\u8282\u70b9\u5230\u6700\u540e\u4e00\u5c42\u6700\u540e\u8282\u70b9\u7684\u8def\u5f84</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\\(\\((logn)^2\\)\\)\uff1a\u6700\u540e\u4e00\u5c42\u7684\u4e8c\u5206\u67e5\u627e\u7684\u6b21\u6570\u4e3alogn\uff0c\u6bcf\u6b21\u4e8c\u5206\u67e5\u627e\u9700\u8981\u7684\u64cd\u4f5c\u6b21\u6570\u4e3alogn S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/#_9","title":"\u6e90\u7801","text":"<pre><code>public:  \n    int countNodes(TreeNode* root) {  \n        if(root==nullptr){  \n            return 0;  \n        }  \n        // get the height of the tree  \n        int height=-1;  \n        TreeNode *p=root;  \n        while (p!= nullptr){  \n            height++;  \n            p=p-&gt;left;  \n        }  \n        int result=(int)pow(2,height)-1;  \n        // \u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u5f97\u5230\u6700\u540e\u4e00\u5c42\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u5229\u7528\u4ee5\u4e0b\u7684\u5173\u7cfb\uff1a  \n        // \u8bbek\u4e3a\u6700\u540e\u4e00\u5c42\u8282\u70b9\u7684\u4e2a\u6570\uff0ck-1\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u53ef\u4ee5\uff081\u4e3a\u5411\u53f3\uff0c0\u5411\u5de6\uff0c\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u4f9d\u6b21\u6620\u5c04\uff09\u6620\u5c04\u4e3a\u4ece\u6839\u8282\u70b9\u5230\u6700\u540e\u4e00\u5c42\u6700\u540e\u8282\u70b9\u7684\u8def\u5f84  \n        int start=0;  \n        int end=(int)pow(2,height)-1;  \n        int middle=0;  \n        while (end&gt;=start){  \n            middle=start+(end-start)/2;  \n            if(isExistNode(root,height,middle)){  \n                if(!isExistNode(root,height,middle+1)){  \n                    return result+middle+1;  \n                }else{  \n                    start=middle+1;  \n                }  \n            }else{  \n                end=middle-1;  \n            }  \n        }  \n        return result;  \n    }  \nprivate:  \n    bool isExistNode(TreeNode *root,int height,int path){  \n        if(path&gt;=pow(2,height)||root==nullptr){  \n            return false;  \n        }  \n        TreeNode *p=root;  \n        for(int i=0;i&lt;height;i++){  \n            if((path&gt;&gt;(height-i-1))&amp;1){  \n                p=p-&gt;right;  \n            }else{  \n                p=p-&gt;left;  \n            }  \n        }  \n        return p!= nullptr;  \n    }\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day16_BinaryTree_part03/#_10","title":"\u603b\u7ed3","text":"<ul> <li>\u9488\u5bf9\u4e8c\u53c9\u6811\uff08\u66f4\u751a\u81f3\u4e8e\u56fe\uff09\u8fd9\u4e9b\u7531\u9012\u5f52\u65b9\u6cd5\u8f6c\u4e3a\u8fed\u4ee3\u65b9\u6cd5\u89e3\u51b3\uff0c\u4e00\u822c\u501f\u9274\u548c\u5206\u6790\u4e8c\u53c9\u6811\u7684\u8fed\u4ee3\u904d\u5386\u548c\u5c42\u5e8f\u904d\u5386\u6765\u89e3\u51b3\u95ee\u9898</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u8ba1\u7b97\u7684\u6bd4\u8f83\u5178\u578b\u7684\u601d\u60f3\u3001\u8fd8\u6709\u5229\u7528BFS\u8ba1\u7b97\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u3002</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day17_BinaryTree_part04/","title":"day17 \u4e8c\u53c9\u6811part04","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day17_BinaryTree_part04/#110","title":"110.\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u5224\u5b9a","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day17_BinaryTree_part04/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52\u904d\u5386\u3002\u5199\u4e00\u4e2a\u65e2\u53ef\u4ee5\u8ba1\u7b97\u9ad8\u5ea6\u548c\u662f\u5426\u662f\u5e73\u8861\u6811\u7684\u51fd\u6570\uff0c\u5c06\u86ee\u529b\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4eceO(n<sup>2</sup>)\u964d\u4e3aO(n)</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3\u904d\u5386\u3002\u6539\u5199\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386\uff0c\u81ea\u5e95\u5411\u4e0a\u5c42\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u8bb0\u5f55\u5f53\u524d\u5c42\u7684\u9ad8\u5ea6\uff0c\u6bd4\u8f83\u9ebb\u70e6\u3002</p> <p>\u672c\u9898\u91c7\u7528\u7684\u662f\u65b9\u6cd5\u4e00\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day17_BinaryTree_part04/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\u3001S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day17_BinaryTree_part04/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    bool isBalanced(TreeNode* root) {\n        if(myIsBalanced(root)&gt;=0){\n            return true;\n        }\n        return false;\n    }\nprivate:\n    // -1\u4ee3\u8868\u4e0d\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u5176\u4ed6\u975e\u8d1f\u6570\u4ee3\u8868\u6811\u7684\u9ad8\u5ea6\u4e14\u662f\u5e73\u8861\u4e8c\u53c9\u6811\n    int myIsBalanced(TreeNode *root){\n        if(root==nullptr){\n            return 0;\n        }\n        int l_height=myIsBalanced(root-&gt;left);\n        int r_height=myIsBalanced(root-&gt;right);\n        if(r_height&lt;0||l_height&lt;0||fabs(r_height-l_height)&gt;1){\n            return -1;\n        }\n        return max(r_height,l_height)+1;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day17_BinaryTree_part04/#257","title":"257.\u4e8c\u53c9\u6811\u8def\u5f84","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day17_BinaryTree_part04/#_4","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52\u6cd5\u3002\u5728dfs\u7684\u57fa\u7840\u4e0a\u627e\u8def\u5f84\uff0c\u6bd4\u8f83\u7b80\u5355</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3\u6cd5\u3002\u5229\u7528\u4e8c\u53c9\u6811\u7684\u8fed\u4ee3\u540e\u5e8f\u904d\u5386\u4e2d\u5f53\u524d\u6808\u662f\u5f53\u524d\u8bbf\u95ee\u8282\u70b9\u7684\u4ece\u6839\u5230\u5f53\u524d\u8bbf\u95ee\u8282\u70b9\u7684\u8def\u5f84\u8fd9\u4e2a\u7279\u70b9\u3002</p> <p>\u672c\u9898\u91c7\u7528\u65b9\u6cd5\u4e00\uff0c\u9274\u4e8e\u65f6\u95f4\u56e0\u7d20\u6ca1\u6709\u5b9e\u73b0\u65b9\u6cd5\u4e8c\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day17_BinaryTree_part04/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\u3001S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day17_BinaryTree_part04/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;string&gt; binaryTreePaths(TreeNode* root) {\n        string path=to_string(root-&gt;val);\n        if(root-&gt;left==nullptr&amp;&amp;root-&gt;right==nullptr){\n            result.push_back(path);\n            return result;\n        }\n        getTreePaths(root-&gt;left,path);\n        getTreePaths(root-&gt;right,path);\n        return result;\n    }\nprivate:\n    vector&lt;string&gt; result;\n    void getTreePaths(TreeNode *root,string path){\n        if(root==nullptr){\n            return;\n        }\n        path=path+\"-&gt;\"+to_string(root-&gt;val);\n        if(root-&gt;left==nullptr&amp;&amp;root-&gt;right==nullptr){\n            result.push_back(path);\n        }\n        getTreePaths(root-&gt;left,path);\n        getTreePaths(root-&gt;right,path);\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day17_BinaryTree_part04/#404","title":"404.\u5de6\u53f6\u5b50\u7684\u548c","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day17_BinaryTree_part04/#_7","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52\u6cd5\u3002\u5728dfs\u7684\u57fa\u7840\u4e0a\u505a\uff0c\u4f20\u9012\u4e00\u4e2a\u53c2\u6570\u7528\u6765\u6807\u8bb0\u5f53\u524d\u8282\u70b9\u662f\u5426\u662f\u5176\u7236\u8282\u70b9\u7684\u5de6\u8282\u70b9\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3\u6cd5\u3002\u4e0e257\u4e2d\u7684\u8fed\u4ee3\u6cd5\u601d\u8def\u57fa\u672c\u4e00\u81f4\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day17_BinaryTree_part04/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day17_BinaryTree_part04/#_9","title":"\u6e90\u7801","text":"<p>\u65b9\u6cd5\u4e00\u6e90\u7801\uff1a</p> <pre><code>class Solution {\npublic:\n    int sumOfLeftLeaves(TreeNode* root) {\n        int sum=0;\n        mySumOfLeftLeaves(root-&gt;left,sum,true);\n        mySumOfLeftLeaves(root-&gt;right,sum,false);\n        return sum;\n    }\nprivate:\n    void mySumOfLeftLeaves(TreeNode *root,int &amp;sum,bool isLeft){\n        if(root==nullptr){\n            return;\n        }\n        if(isLeft&amp;&amp;root-&gt;left==nullptr&amp;&amp;root-&gt;right==nullptr){\n            sum+=root-&gt;val;\n        }\n        mySumOfLeftLeaves(root-&gt;left,sum,true);\n        mySumOfLeftLeaves(root-&gt;right,sum,false);\n    }\n};\n</code></pre> <p>\u65b9\u6cd5\u4e8c\u6e90\u7801\uff1a</p> <pre><code>class Solution {\npublic:\n    int sumOfLeftLeaves(TreeNode *root) {\n        int result = 0;\n\n        std::stack&lt;TreeNode *&gt; nodeStack;\n        TreeNode *lastVisited = nullptr;\n        TreeNode *p = root;\n\n        while (p || !nodeStack.empty()) {\n            if (p) {\n                nodeStack.push(p);\n                p = p-&gt;left;\n            } else {\n                TreeNode *peekNode = nodeStack.top();\n                if (peekNode-&gt;right &amp;&amp; lastVisited != peekNode-&gt;right) {\n                    // \u5982\u679c\u53f3\u5b50\u6811\u5b58\u5728\u4e14\u672a\u8bbf\u95ee\u8fc7\uff0c\u904d\u5386\u53f3\u5b50\u6811\n                    p = peekNode-&gt;right;\n                } else {\n                    // \u5426\u5219\uff0c\u8bbf\u95ee\u5f53\u524d\u8282\u70b9\n                    lastVisited = nodeStack.top();\n                    nodeStack.pop();\n                    if (!nodeStack.empty() &amp;&amp; nodeStack.top()-&gt;left == peekNode &amp;&amp; peekNode-&gt;left == nullptr &amp;&amp;\n                        peekNode-&gt;right ==\n                        nullptr) {\n                        result += peekNode-&gt;val;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day18_BinaryTree_part05/","title":"day18 \u4e8c\u53c9\u6811part05","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day18_BinaryTree_part05/#513","title":"513.\u627e\u5230\u4e8c\u53c9\u6811\u5e95\u90e8\u6700\u5de6\u8fb9\u7684\u8282\u70b9\u7684\u503c","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day18_BinaryTree_part05/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u8fed\u4ee3\u6cd5\u3002\u5229\u7528\u5c42\u5e8f\u904d\u5386\u505a\uff0c\u8ba1\u7b97\u6bcf\u5c42\u7684\u5f00\u59cb\uff0c\u6bd4\u8f83\u7b80\u5355\uff0c\u4e0eday16\u4e2d\u7684\u4e00\u4e9b\u9898\u76ee\u7c7b\u4f3c\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u9012\u5f52\u6cd5\u3002\u8bbe\u6bcf\u9897\u6811\u8981\u627e\u7684\u503c\u4e3ax\u3002</p> <p>i \u9012\u5f52\u3002\u6839\u7684x=\uff08\u5de6\u5b50\u6811\u7684\u9ad8\u5ea6&gt;=\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\uff09\uff1f\u5de6\u5b50\u6811\u7684x\uff1a\u53f3\u5b50\u6811\u7684x\u3002</p> <p>ii \u8fb9\u754c\u6761\u4ef6\u3002\u82e5\u6839\u7684\u5de6\u53f3\u5b50\u6811\u5747\u4e3a\u7a7a\uff0c\u5219\u6839\u7684x=\u6839\u7684\u503c\u3002</p> <p>\u5177\u4f53\u89c1\u4ee3\u7801</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day18_BinaryTree_part05/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\u3001S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day18_BinaryTree_part05/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int findBottomLeftValue(TreeNode* root) {\n        int result=0;\n        myFindBottomLeftValue(root,result);\n        return result;\n    }\nprivate:\n    int myFindBottomLeftValue(TreeNode* root,int &amp;value){\n        if(root==nullptr){\n            value=INT_MAX;\n            return 0;\n        }\n        if(root-&gt;left==nullptr&amp;&amp;root-&gt;right==nullptr){\n            value=root-&gt;val;\n            return 1;\n        }\n        int r_value=0;\n        int l_value=0;\n        int l_height=myFindBottomLeftValue(root-&gt;left,l_value);\n        int r_height=myFindBottomLeftValue(root-&gt;right,r_value);\n        value=(l_height&gt;=r_height)?l_value:r_value;\n        return max(l_height,r_height)+1;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day18_BinaryTree_part05/#113ii112","title":"113.\u8def\u5f84\u548cII\uff08\u7c7b\u4f3c\u6709112.\u8def\u5f84\u548c\uff09","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day18_BinaryTree_part05/#_4","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u8fed\u4ee3\u6cd5\u3002\u4e8c\u53c9\u6811\u7684\u8fed\u4ee3\u540e\u5e8f\u904d\u5386\uff0c\u4e0eday17\u4e2d\u7684\u4e00\u4e9b\u9898\u76ee\u7684\u89e3\u9898\u601d\u8def\u4e00\u6837\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u9012\u5f52\u6cd5\u3002</p> <p>\u672c\u9898\u91c7\u7528\u65b9\u6cd5\u4e8c\u89e3\u7b54\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day18_BinaryTree_part05/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\u3001S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day18_BinaryTree_part05/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; pathSum(TreeNode* root, int targetSum) {\n        vector&lt;vector&lt;int&gt;&gt; result;\n        if(root==nullptr){\n            return result;\n        }\n\n        vector&lt;int&gt; path;\n        findPath(root,result,targetSum,path);\n        return result;\n    }\nprivate:\n    void findPath(TreeNode *root,vector&lt;vector&lt;int&gt;&gt; &amp;result,int sum,vector&lt;int&gt; &amp;path){\n        if(root==nullptr){\n            return;\n        }\n\n        path.push_back(root-&gt;val);\n        if(root-&gt;left==nullptr&amp;&amp;root-&gt;right==nullptr&amp;&amp;sum==root-&gt;val){\n            result.push_back(path);\n        }\n        findPath(root-&gt;left,result,sum-root-&gt;val,path);\n        findPath(root-&gt;right,result,sum-root-&gt;val,path);\n        path.pop_back();\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day18_BinaryTree_part05/#106105","title":"106.\u6839\u636e\u540e\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u6811\uff08\u540c\u7c7b\u7684\u6709\uff1a105.\u6839\u636e\u524d\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u6811\uff09","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day18_BinaryTree_part05/#_7","title":"\u601d\u8def","text":"<p>\u9012\u5f52\u6cd5\uff0c\u6839\u636e\u4e2d\u5e8f\u904d\u5386\u5de6\u6839\u53f3\uff0c\u540e\u5e8f\u904d\u5386\u5de6\u53f3\u6839\uff0c\u9012\u5f52\u5730\u81ea\u9876\u5411\u4e0b\u6784\u9020\u4e8c\u53c9\u6811</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day18_BinaryTree_part05/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\u3001S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day18_BinaryTree_part05/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    TreeNode *buildTree(vector&lt;int&gt; &amp;inorder, vector&lt;int&gt; &amp;postorder) {\n        return myBuildTree(inorder, postorder, postorder.size() - 1, 0, inorder.size() - 1);\n    }\n\nprivate:\n    TreeNode *myBuildTree(vector&lt;int&gt; &amp;inorder, vector&lt;int&gt; &amp;postorder, int root_pos, int i_start, int i_end) {\n        if (i_start &gt; i_end) {\n            return nullptr;\n        }\n        int root_pos_i = i_start;\n        while (inorder[root_pos_i] != postorder[root_pos] &amp;&amp; root_pos_i &lt;= i_end) {\n            root_pos_i++;\n        }\n        TreeNode *node = new TreeNode(postorder[root_pos]);\n        node-&gt;left = myBuildTree(inorder, postorder, root_pos - i_end + root_pos_i - 1, i_start, root_pos_i - 1);\n        node-&gt;right = myBuildTree(inorder, postorder, root_pos - 1, root_pos_i + 1, i_end);\n        return node;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day1_Array_part01/","title":"704.\u4e8c\u5206\u67e5\u627e","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day1_Array_part01/#_1","title":"\u601d\u8def","text":"<p>\u5f88\u7b80\u5355\uff0c\u5c31\u6700\u57fa\u672c\u7684\u4e8c\u5206\u67e5\u627e</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day1_Array_part01/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(log n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day1_Array_part01/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int search(vector&lt;int&gt;&amp; nums, int target) {\n        int start=0;\n        int end=nums.size()-1;\n        int middle;\n        while(start&lt;=end){\n            middle=(start+end)/2;\n            if(nums[middle]&lt;target){\n                start=middle+1;\n            }else if(nums[middle]==target){\n                return middle;\n            }else{\n                end=middle-1;\n            }\n        }\n        return -1;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day1_Array_part01/#27","title":"27.\u79fb\u9664\u5143\u7d20","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day1_Array_part01/#_4","title":"\u601d\u8def","text":"<p>\u53cc\u6307\u9488\u6cd5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day1_Array_part01/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day1_Array_part01/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int removeElement(vector&lt;int&gt;&amp; nums, int val) {\n        int p_start=0;\n        int p_end=nums.size()-1;\n        int total=0;\n        while(p_start&lt;=p_end){\n            if(nums[p_start]==val){\n            // find the elements in nums not equal to val with p_end\n                if(nums[p_end]!=val){\n                    nums[p_start]=nums[p_end];\n                }\n                p_end--;\n            }else{\n                total++;\n                p_start++;\n            }\n        }\n        return total;\n    }\n\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/","title":"day20 \u4e8c\u53c9\u6811part06","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#654","title":"654.\u6700\u5927\u4e8c\u53c9\u6811","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u6309\u7167\u9898\u76ee\u6240\u8bf4\u7684\u91c7\u7528\u9012\u5f52\u65b9\u6cd5\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u5355\u8c03\u6808\u3002\u6ce8\u610f\u5230\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u8282\u70b9\u5bf9\u5e94\u4e8e\u5de6\u8981\u6784\u5efa\u4e24\u4e2a\u5206\u522b\u7528\u4e8e\u6784\u5efa\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u5355\u8c03\u6808\u3002</p> <p>\u672c\u4eba\u867d\u7136\u4f7f\u7528\u7684\u65b9\u6cd5\u4e00\u89e3\u7b54\u9898\u76ee\uff0c\u4f46\u7531\u4e8e\u65b9\u6cd5\u4e00\u8fc7\u4e8e\u7b80\u5355\uff0c\u5927\u81f4\u4f7f\u7528\u5355\u8c03\u6808\u7684\u601d\u60f3\u662f\u61c2\u4e86\uff0c\u8fd8\u662f\u4e0d\u592a\u61c2\u65b9\u6cd5\u4e8c\u7684\u505a\u6cd5\uff0c\u6682\u65f6\u5c31\u8fd9\u6837\u5427\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\u3001S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    TreeNode* constructMaximumBinaryTree(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        vector&lt;int&gt; stk;\n        vector&lt;int&gt; left(n, -1), right(n, -1);\n        vector&lt;TreeNode*&gt; tree(n);\n        for (int i = 0; i &lt; n; ++i) {\n            tree[i] = new TreeNode(nums[i]);\n            while (!stk.empty() &amp;&amp; nums[i] &gt; nums[stk.back()]) {\n                right[stk.back()] = i;\n                stk.pop_back();\n            }\n            if (!stk.empty()) {\n                left[i] = stk.back();\n            }\n            stk.push_back(i);\n        }\n\n        TreeNode* root = nullptr;\n        for (int i = 0; i &lt; n; ++i) {\n            if (left[i] == -1 &amp;&amp; right[i] == -1) {\n                root = tree[i];\n            }\n            else if (right[i] == -1 || (left[i] != -1 &amp;&amp; nums[left[i]] &lt; nums[right[i]])) {\n                tree[left[i]]-&gt;right = tree[i];\n            }\n            else {\n                tree[right[i]]-&gt;left = tree[i];\n            }\n        }\n        return root;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#617","title":"617.\u5408\u5e76\u4e8c\u53c9\u6811","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#_4","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52\u3002\u6309\u7167\u9898\u76ee\u91c7\u7528dfs\uff0c\u4ece\u4e0a\u5230\u4e0b\u5408\u5e76\u4e8c\u53c9\u6811\u5404\u4e2a\u8282\u70b9\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u5c42\u5e8f\u904d\u5386\u3002\u4e5f\u662f\u4ece\u4e0a\u5230\u4e0b\u5408\u5e76\u5404\u4e2a\u4e8c\u53c9\u6811\u8282\u70b9\u3002</p> <p>\u672c\u9898\u91c7\u7528\u65b9\u6cd5\u4e00\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u4e24\u79cd\u65b9\u6cd5\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u4e3aO(n),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {\n        if(root1==nullptr){\n            return root2;\n        }\n        if(root2==nullptr){\n            return root1;\n        }\n        TreeNode* left=root2-&gt;left;\n        TreeNode* right=root2-&gt;right;\n        root1-&gt;val+=root2-&gt;val;\n        root1-&gt;left=mergeTrees(root1-&gt;left,root2-&gt;left);\n        root1-&gt;right=mergeTrees(root1-&gt;right,root2-&gt;right);\n        delete root2;\n        return root1;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#700bst","title":"700.\u5728BST\u4e2d\u641c\u7d22","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#_7","title":"\u601d\u8def","text":"<p>\u5f88\u7b80\u5355\uff0c\u5c31BST\u7684\u4e8c\u5206\u641c\u7d22\u65b9\u6cd5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>logn</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        TreeNode* p=root;\n        while(p!=nullptr){\n            if(p-&gt;val==val){\n                return p;\n            }else if(p-&gt;val&lt;val){\n                p=p-&gt;right;\n            }else{\n                p=p-&gt;left;\n            }\n        }\n        return nullptr;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#98bst","title":"98.BST\u7684\u5224\u5b9a","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#_10","title":"\u601d\u8def","text":"<p>\u91c7\u7528\u4e8c\u53c9\u6811\u7684\u8fed\u4ee3\u4e2d\u5e8f\u904d\u5386\u65b9\u5f0f\uff0c\u8bb0\u5f55\u5f53\u524d\u904d\u5386\u503c\u7684\u524d\u4e00\u4e2a\u503c\u6765\u5224\u5b9a\u5f53\u524d\u8282\u70b9\u662f\u5426\u5408\u6cd5\uff0c\u82e5\u6240\u6709\u8282\u70b9\u90fd\u5408\u6cd5\uff0c\u5219\u6b64\u4e8c\u53c9\u6811\u662fBST</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#_11","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),s(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day20_BinaryTree_part06/#_12","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        stack&lt;TreeNode*&gt; nodeStack;\n        TreeNode *p=root;\n        long long pre_val=INT_MIN;\n        pre_val--;\n        while (p || !nodeStack.empty()) {\n            while (p) {\n                // \u5c06\u5de6\u5b50\u6811\u8282\u70b9\u5165\u6808\n                nodeStack.push(p);\n                p = p-&gt;left;\n            }\n\n            // \u51fa\u6808\u8bbf\u95ee\u8282\u70b9\n            p = nodeStack.top();\n            nodeStack.pop();\n            if(p-&gt;val&lt;=pre_val){\n                return false;\n            }\n            pre_val=p-&gt;val;\n\n            // \u8bbf\u95ee\u53f3\u5b50\u6811\n            p = p-&gt;right;\n        }\n        return true;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day21_BinaryTree_part07/","title":"530.\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u5c0f\u7edd\u5bf9\u503c\u5dee","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day21_BinaryTree_part07/#_1","title":"\u601d\u8def","text":"<p>\u5f88\u7b80\u5355\uff0c\u5229\u7528\u9012\u5f52\u7684\u4e2d\u5e8f\u904d\u5386\u6216\u8005\u8fed\u4ee3\u7684\u4e2d\u5e8f\u904d\u5386\u90fd\u53ef\u4ee5\u505a\uff0c\u672c\u9898\u91c7\u7528\u8fed\u4ee3\u7684\u4e2d\u5e8f\u904d\u5386\u65b9\u6cd5\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day21_BinaryTree_part07/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\u3001S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day21_BinaryTree_part07/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int getMinimumDifference(TreeNode* root) {\n        stack&lt;TreeNode*&gt; nodeStack;\n        const int MAX_VALUE=10e5;\n        TreeNode *p=root;\n        int pre_val=3*10e5;\n        int result=INT_MAX;\n        while (p || !nodeStack.empty()) {\n            while (p) {\n                // \u5c06\u5de6\u5b50\u6811\u8282\u70b9\u5165\u6808\n                nodeStack.push(p);\n                p = p-&gt;left;\n            }\n\n            // \u51fa\u6808\u8bbf\u95ee\u8282\u70b9\n            p = nodeStack.top();\n            nodeStack.pop();\n            if(fabs(p-&gt;val-pre_val)&lt;result){\n                result=fabs(p-&gt;val-pre_val);\n            }\n            pre_val=p-&gt;val;\n\n            // \u8bbf\u95ee\u53f3\u5b50\u6811\n            p = p-&gt;right;\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day21_BinaryTree_part07/#501bst","title":"501.\u5728BST\u4e2d\u627e\u4f17\u6570","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day21_BinaryTree_part07/#_4","title":"\u601d\u8def","text":"<p>\u4e0e530\u7684\u89e3\u9898\u601d\u8def\u7c7b\u4f3c\uff0c\u540c\u6837\u501f\u9274\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\uff0c\u4ee3\u7801\u5199\u5f97\u6709\u4e9b\u4e11\u964b\u548c\u5197\u4f59\uff0c\u61d2\u5f97\u4fee\u6539\u4e86\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day21_BinaryTree_part07/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\u3001S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day21_BinaryTree_part07/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; findMode(TreeNode* root) {\n        vector&lt;int&gt; result;\n        stack&lt;TreeNode*&gt; nodeStack;\n        const int MAX_VALUE=10e5+1;\n        TreeNode *p=root;\n        int pre_val=MAX_VALUE;\n        int max_show_times=0;\n        int show_times=1;\n        while (p || !nodeStack.empty()) {\n            while (p) {\n                nodeStack.push(p);\n                p = p-&gt;left;\n            }\n            p = nodeStack.top();\n            nodeStack.pop();\n\n            if(p-&gt;val==pre_val){\n                show_times++;\n                // \u5904\u7406\u7b2c\u4e00\u4e2a\u8282\u70b9\n            }else if(pre_val==MAX_VALUE){\n                show_times=1;\n            }else{\n                if(show_times&gt;max_show_times){\n                    result.clear();\n                    result.push_back(pre_val);\n                    max_show_times=show_times;\n                }else if(show_times==max_show_times){\n                    result.push_back(pre_val);\n                }\n                show_times=1;\n            }\n            pre_val=p-&gt;val;\n\n            p = p-&gt;right;\n        }\n        // \u5904\u7406\u6700\u540e\u4e00\u4e2a\u8282\u70b9\n        if(show_times&gt;max_show_times){\n            result.clear();\n            result.push_back(pre_val);\n            max_show_times=show_times;\n        }else if(show_times==max_show_times){\n            result.push_back(pre_val);\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day21_BinaryTree_part07/#236","title":"236.\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day21_BinaryTree_part07/#_7","title":"\u601d\u8def","text":"<p>\u8bbe\u8fd9\u4e24\u4e2a\u8282\u70b9\u4e3ap\u548cq</p> <p>\u65b9\u6cd5\u4e00\uff1a\u5148\u5f97\u5230p\u548cq\u7684\u8def\u5f84\uff08dfs\u6216\u8005\u8fed\u4ee3\u7684\u540e\u5e8f\u904d\u5386\uff09\uff0c\u5728\u6839\u636e\u8fd9\u4e24\u6761\u8def\u5f84\u627e\u5230\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u76f4\u63a5\u6839\u636e\u9898\u76ee\u9012\u5f52\u5f97\u51fa\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u76f8\u6bd4\u4e00\u66f4\u5feb\uff0c\u626b\u63cf\u4e00\u904d\u6811\u7684\u8282\u70b9\u5373\u53ef\u5f97\u51fa\u7b54\u6848\u3002</p> <p>\u672c\u9898\u5b9e\u73b0\u91c7\u7528\u65b9\u6cd5\u4e00\uff0c\u65b9\u6cd5\u4e00\u6bd4\u8f83\u7b80\u5355\u4e0d\u518d\u8d58\u8ff0\u3002\u503c\u7684\u6ce8\u610f\u7684\u662f\u65b9\u6cd5\u4e8c\uff0c\u65b9\u6cd5\u4e8c\u7684\u8bbe\u8ba1\u6bd4\u8f83\u5de7\u5999\uff0c\u9012\u5f52\u7684\u81ea\u5e95\u5411\u4e0a\u7684\u56de\u6eaf\u4fdd\u8bc1\u5f97\u5230\u7684\u7b54\u6848\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day21_BinaryTree_part07/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u4e24\u79cd\u65b9\u6cd5\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u662fO(n)\u3001S(n)\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day21_BinaryTree_part07/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if (root == nullptr || root == p || root == q) return root;\n        TreeNode* left = lowestCommonAncestor(root-&gt;left, p, q);\n        TreeNode* right = lowestCommonAncestor(root-&gt;right, p, q);\n        if (left == nullptr) return right;\n        if (right == nullptr) return left;\n        return root;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day22_BinaryTree_part08/","title":"235.BST\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day22_BinaryTree_part08/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u6309\u7167\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u7684\u65b9\u6cd5\u505a</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u5229\u7528BST\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u5206\u522b\u4e24\u4e2a\u8282\u70b9\u5f97\u5230\u4e24\u6761\u8def\u5f84\uff0c\u6839\u636e\u5f97\u5230\u7684\u8def\u5f84\u518d\u627e\u5230\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5f97\u5230\u4f18\u5316\uff0c\u540c\u65f6\u5bfb\u627e\u4e24\u4e2a\u8282\u70b9\uff0c\u5bfb\u627e\u7684\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u5177\u4f53\u89c1\u4e0b\u9762\u7684\u6e90\u7801</p> <p>\u672c\u9898\u91c7\u7528\u65b9\u6cd5\u4e8c\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day22_BinaryTree_part08/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u65b9\u6cd5\u4e00\uff1aO(n),S(n)</p> <p>\u65b9\u6cd5\u4e8c\uff1aO(logn)\uff0c\u4f7f\u7528\u8fed\u4ee3\u6cd5\u89e3\u51b3\u7684\u8bdd\u4e3aS(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day22_BinaryTree_part08/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        TreeNode *result=root;\n        TreeNode *node=root;\n        while(result!=nullptr){\n            if(result-&gt;val&gt;p-&gt;val&amp;&amp;result-&gt;val&gt;q-&gt;val){\n                result=result-&gt;left;\n            }else if(result-&gt;val&lt;p-&gt;val&amp;&amp;result-&gt;val&lt;q-&gt;val){\n                result=result-&gt;right;\n            }else{\n                return  result;\n            }\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day22_BinaryTree_part08/#701bst","title":"701.BST\u7684\u63d2\u5165","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day22_BinaryTree_part08/#_4","title":"\u601d\u8def","text":"<p>\u5f88\u7b80\u5355\u7684BST\u7684\u8282\u70b9\u63d2\u5165</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day22_BinaryTree_part08/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(logn),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day22_BinaryTree_part08/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        TreeNode *node=new TreeNode(val);\n        if(root==nullptr)return node;\n\n        TreeNode *pre=root;\n        TreeNode *p=root;\n        while(p!=nullptr){\n            pre=p;\n            if(p-&gt;val&lt;val){\n                p=p-&gt;right;\n            }else {\n                p=p-&gt;left;\n            }\n        }\n\n        if(pre-&gt;val&lt;val){\n            pre-&gt;right=node;\n        }else{\n            pre-&gt;left=node;\n        }\n        return root;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day22_BinaryTree_part08/#450bst","title":"450.BST\u4e2d\u8282\u70b9\u7684\u5220\u9664","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day22_BinaryTree_part08/#_7","title":"\u601d\u8def","text":"<p>\u4f7f\u7528chatgpt\u89e3\u7b54\uff0c\u7b97\u4f5c\u57fa\u7840\u77e5\u8bc6\uff0c\u4e0d\u9700\u8981\u81ea\u5df1\u8bb0\uff0c\u53ea\u9700\u8981\u4f1a\u5e94\u7528\u5c31\u884c\uff0c\u7406\u89e3\u5927\u81f4\u7684\u601d\u60f3\u548c\u6ce8\u610f\u9012\u5f52\u8bbe\u8ba1\u7684\u5de7\u5999</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day22_BinaryTree_part08/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(logn),S(logn)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day22_BinaryTree_part08/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    TreeNode* deleteNode(TreeNode* root, int key) {\n        // \u5206\u6790:\u5220\u9664\u6839\uff1b\u5220\u9664\u53f6\u5b50\u8282\u70b9\uff1b\u5220\u9664\u6709\u5de6\u5b69\u5b50\u7684\u8282\u70b9\uff1b\u5220\u9664\u6709\u53f3\u5b69\u5b50\u7684\u8282\u70b9\n        if (root == nullptr) {\n            return root;\n        }\n\n        if (key &lt; root-&gt;val) {\n            root-&gt;left = deleteNode(root-&gt;left, key);\n        } else if (key &gt; root-&gt;val) {\n            root-&gt;right = deleteNode(root-&gt;right, key);\n        } else {\n            // \u5f53\u524d\u8282\u70b9\u5c31\u662f\u8981\u5220\u9664\u7684\u8282\u70b9\n            // \u60c5\u51b51: \u6ca1\u6709\u5b50\u8282\u70b9\u6216\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\n            if (root-&gt;left == nullptr) {\n                TreeNode* temp = root-&gt;right;\n                delete root;\n                return temp;\n            } else if (root-&gt;right == nullptr) {\n                TreeNode* temp = root-&gt;left;\n                delete root;\n                return temp;\n            }\n\n            // \u60c5\u51b52: \u6709\u4e24\u4e2a\u5b50\u8282\u70b9\n            TreeNode* temp = findMin(root-&gt;right); // \u627e\u5230\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u8282\u70b9\n            root-&gt;val = temp-&gt;val; // \u5c06\u5f53\u524d\u8282\u70b9\u7684\u503c\u66ff\u6362\u4e3a\u53f3\u5b50\u6811\u6700\u5c0f\u8282\u70b9\u7684\u503c\n            root-&gt;right = deleteNode(root-&gt;right, temp-&gt;val); // \u5220\u9664\u53f3\u5b50\u6811\u6700\u5c0f\u8282\u70b9\n        }\n\n        return root;\n    }\nprivate:\n    TreeNode* findMin(TreeNode* node) {\n        while (node-&gt;left != nullptr) {\n            node = node-&gt;left;\n        }\n        return node;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day23_BinaryTree_part09/","title":"669.\u4fee\u526a\u4e8c\u53c9\u641c\u7d22\u6811","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day23_BinaryTree_part09/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52\u6cd5\u3002\u5229\u7528BST\u672c\u8eab\u7684\u6027\u8d28\u4fee\u526aBST\uff0c\u8be6\u60c5\u89c1\u6e90\u7801</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3\u6cd5\u3002\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\uff0c\u4f7f\u7528\u8fed\u4ee3\u6cd5\u53ef\u4ee5\u4f7f\u5f97\u7a7a\u95f4\u590d\u6742\u5ea6\u964d\u4e3aO(1)\uff0c\u601d\u8def\u4e0e\u65b9\u6cd5\u4e00\u4e2d\u7684\u9012\u5f52\u7c7b\u4f3c </p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day23_BinaryTree_part09/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day23_BinaryTree_part09/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    TreeNode* trimBST(TreeNode* root, int low, int high) {\n        if(root==nullptr)return nullptr;\n        if(root-&gt;val&lt;low){\n            return trimBST(root-&gt;right,low,high);\n        }else if(root-&gt;val&gt;high){\n            return trimBST(root-&gt;left,low,high);\n        }else{\n            root-&gt;left=trimBST(root-&gt;left,low,high);\n            root-&gt;right=trimBST(root-&gt;right,low,high);\n            return root;\n        }\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day23_BinaryTree_part09/#108avl","title":"108.\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u4e3aAVL\u6811","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day23_BinaryTree_part09/#_4","title":"\u601d\u8def","text":"<p>\u9012\u5f52\u6cd5\u3002\u6bcf\u6b21\u9009\u53d6\u6570\u7ec4\u7684\u4e2d\u95f4\u5143\u7d20\u4f5c\u4e3a\u6839\uff0c\u4ee5\u4e2d\u95f4\u5143\u7d20\u4e3a\u5212\u5206\uff0c\u5206\u522b\u5efa\u7acb\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day23_BinaryTree_part09/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"\\[O(n),S(logn)\\]"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day23_BinaryTree_part09/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    TreeNode* sortedArrayToBST(vector&lt;int&gt;&amp; nums) {\n        return mySortedArrayToBST(nums,0,nums.size()-1);\n    }\nprivate:\n    TreeNode* mySortedArrayToBST(vector&lt;int&gt;&amp; nums,int start,int end){\n        if(start&gt;end){\n            return nullptr;\n        }\n\n        int middle=start+(end-start)/2;\n        TreeNode* node=new TreeNode(nums[middle]);\n        node-&gt;left=mySortedArrayToBST(nums,start,middle-1);\n        node-&gt;right=mySortedArrayToBST(nums,middle+1,end);\n        return node;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day23_BinaryTree_part09/#538bst","title":"538.\u5c06BST\u8f6c\u4e3a\u7d2f\u52a0\u6811","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day23_BinaryTree_part09/#_7","title":"\u601d\u8def","text":"<p>\u9012\u5f52\u6cd5\u3002\u521d\u6b65\u60f3\u6cd5\u4e2d\u5e8f\u904d\u5386BST\uff0c\u4f7f\u7528\u6570\u7ec4\u6309\u7167\u5347\u5e8f\u50a8\u5b58BST\u4e2d\u7684\u5143\u7d20\uff0c\u518d\u4e2d\u5e8f\u904d\u5386\uff0c\u4f7f\u7528\u8fd9\u4e2a\u6570\u7ec4\u5f97\u5230\u5404\u4e2a\u8282\u70b9\u5e94\u8be5\u7d2f\u52a0\u7684\u503c\u3002\u4ed4\u7ec6\u601d\u8003\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u4e00\u904d\u904d\u5386\u5373\u53ef\u5b8c\u6210\uff0c\u53ea\u9700\u8981\u4e2d\u5e8f\u904d\u5386\u65f6\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u7684\u904d\u5386\u987a\u5e8f\u5373\u53ef\u6309\u7167\u964d\u5e8f\u6b21\u5e8f\u8bbf\u95ee\u4e8c\u53c9\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u3002\u5173\u952e\u662f\u5982\u4f55\u5f97\u5230\u4e8c\u53c9\u6811\u7684\u964d\u5e8f\u904d\u5386\u987a\u5e8f\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day23_BinaryTree_part09/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day23_BinaryTree_part09/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    TreeNode* convertBST(TreeNode* root) {\n        int sum=0;\n        myConverBST(root,sum);\n        return root;\n    }\nprivate:\n    void myConverBST(TreeNode* root,int &amp;sum){\n        if(root==nullptr){\n            return;\n        }\n\n        myConverBST(root-&gt;right,sum);\n        sum+=root-&gt;val;\n        root-&gt;val=sum;\n        myConverBST(root-&gt;left,sum);\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day23_BinaryTree_part09/#_10","title":"\u603b\u7ed3","text":"<ul> <li>\u901a\u8fc7\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u7684\u904d\u5386\u987a\u5e8f\u5f97\u5230\u964d\u5e8f\u5e8f\u5217\u7684\u4e8c\u53c9\u6811</li> <li>\u4fee\u526aBST\u7684\u9012\u5f52\u8bbe\u8ba1\u9700\u8981\u4ed4\u7ec6\u4f53\u4f1a</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day24_Backtracking_part01/","title":"day24 \u56de\u6eaf\u6cd5part01","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day24_Backtracking_part01/#_1","title":"\u56de\u6eaf\u7684\u6a21\u677f","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c1d\u8bd5\u5c06\u56de\u6eaf\u7684\u201c\u5c1d\u8bd5\u3001\u56de\u9000\u3001\u526a\u679d\u201d\u7684\u4e3b\u4f53\u6846\u67b6\u63d0\u70bc\u51fa\u6765\uff0c\u63d0\u5347\u4ee3\u7801\u7684\u901a\u7528\u6027\u3002 \u5728\u4ee5\u4e0b\u6846\u67b6\u4ee3\u7801\u4e2d\uff0cstate \u8868\u793a\u95ee\u9898\u7684\u5f53\u524d\u72b6\u6001\uff0cchoices \u8868\u793a\u5f53\u524d\u72b6\u6001\u4e0b\u53ef\u4ee5\u505a\u51fa\u7684\u9009\u62e9\uff1a</p> <pre><code>/* \u56de\u6eaf\u7b97\u6cd5\u6846\u67b6 */ \nvoid backtrack(State *state, vector&lt;Choice *&gt; &amp;choices, vector&lt;State *&gt; &amp;res) { \n    // \u5224\u65ad\u662f\u5426\u4e3a\u89e3 \n    if (isSolution(state)) { \n        // \u8bb0\u5f55\u89e3 recordSolution(state, res); \n        // \u4e0d\u518d\u7ee7\u7eed\u641c\u7d22 return; \n    } \n    // \u904d\u5386\u6240\u6709\u9009\u62e9 \n    for (Choice choice : choices) { \n        // \u526a\u679d\uff1a\u5224\u65ad\u9009\u62e9\u662f\u5426\u5408\u6cd5 \n        if (isValid(state, choice)) { \n            // \u5c1d\u8bd5\uff1a\u505a\u51fa\u9009\u62e9\uff0c\u66f4\u65b0\u72b6\u6001 \n            makeChoice(state, choice); \n            backtrack(state, choices, res); \n            // \u56de\u9000\uff1a\u64a4\u9500\u9009\u62e9\uff0c\u6062\u590d\u5230\u4e4b\u524d\u7684\u72b6\u6001 \n            undoChoice(state, choice); \n        } \n    } \n}\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day24_Backtracking_part01/#77","title":"77.\u7ec4\u5408","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day24_Backtracking_part01/#_2","title":"\u601d\u8def","text":"<p>\u7b80\u5355\u800c\u5178\u578b\u7684\u56de\u6eaf\u95ee\u9898\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day24_Backtracking_part01/#_3","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(\\(\\(C_n^k\\)\\)),S(k)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day24_Backtracking_part01/#_4","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; combine(int n, int k) {\n        vector&lt;vector&lt;int&gt;&gt; result;\n        vector&lt;int&gt; path;\n        dfs(n,k,1,path,result);\n        return result; \n    }\nprivate:\n    void dfs(int n,int k,int start,vector&lt;int&gt; &amp;path,vector&lt;vector&lt;int&gt;&gt; &amp;result){\n        if(k&lt;=0){\n            result.push_back(path);\n            return;\n        }\n        k--;\n        for(int i=start;i&lt;=n-k;i++){\n            path.push_back(i);\n            dfs(n,k,i+1,path,result);\n            path.pop_back();\n        }\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day25_Backtracking_part02/","title":"39.\u7ec4\u5408\u603b\u548c","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day25_Backtracking_part02/#_1","title":"\u601d\u8def","text":"<p>\u56de\u6eaf\u6cd5\uff0c\u7b80\u5355\u7684dfs\u3002\u6ce8\u610fpath\u4e2d\u503c\u662f\u6bcf\u4e2acandidate\u7684\u9009\u62e9\u60c5\u51b5\uff0c\u4e3a\u4e86\u51cf\u5c11\u5165\u6808\u548c\u51fa\u6808\u7684\u64cd\u4f5c\u6b21\u6570\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day25_Backtracking_part02/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bben\u4e3acandidate\u7684\u957f\u5ea6</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4fbf\u8ba1\u7b97\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aS(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day25_Backtracking_part02/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n \u00a0 \u00a0vector&lt;vector&lt;int&gt;&gt; combinationSum(vector&lt;int&gt; &amp;candidates, int target) {\n \u00a0 \u00a0 \u00a0 \u00a0vector&lt;vector&lt;int&gt;&gt; result;\n \u00a0 \u00a0 \u00a0 \u00a0vector&lt;int&gt; path(candidates.size(), 0);\n \u00a0 \u00a0 \u00a0 \u00a0dfs(result, candidates, target, path, 0);\n \u00a0 \u00a0 \u00a0 \u00a0return result;\n \u00a0  }\n\u200b\nprivate:\n \u00a0 \u00a0void dfs(vector&lt;vector&lt;int&gt;&gt; &amp;result, const vector&lt;int&gt; &amp;candidates, int target, vector&lt;int&gt; &amp;path, int start) {\n \u00a0 \u00a0 \u00a0 \u00a0if (target == 0) {\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0vector&lt;int&gt; tmp;\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0for (int i = 0; i &lt; path.size(); i++) {\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0int nums=path[i];\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0while (nums &gt; 0) {\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0tmp.push_back(candidates[i]);\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0nums--;\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  }\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  }\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if (!tmp.empty()) {\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0result.push_back(tmp);\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  }\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return;\n \u00a0 \u00a0 \u00a0  }\n \u00a0 \u00a0 \u00a0 \u00a0if (target &lt; 0 || start &lt; 0 || start &gt;= candidates.size()) {\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return;\n \u00a0 \u00a0 \u00a0  }\n\u200b\n \u00a0 \u00a0 \u00a0 \u00a0for (int i = 0; i * candidates[start] &lt;= target; i++) {\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0path[start] = i;\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0dfs(result, candidates, target - i * candidates[start], path, start + 1);\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0path[start] = 0;\n \u00a0 \u00a0 \u00a0  }\n \u00a0  }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day25_Backtracking_part02/#40ii","title":"40.\u7ec4\u5408\u603b\u548cII","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day25_Backtracking_part02/#_4","title":"\u601d\u8def","text":"<p>\u4e0e39\u601d\u8def\u7c7b\u4f3c\uff0c\u572839\u7684\u9898\u76ee\u89e3\u7b54\u4e0a\u8fdb\u884c\u4e00\u4e9b\u8c03\u6574\u5373\u53ef</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day25_Backtracking_part02/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bben\u4e3acandidates\u7684\u957f\u5ea6</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4fbf\u5206\u6790\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day25_Backtracking_part02/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n \u00a0  vector&lt;vector&lt;int&gt;&gt; combinationSum2(vector&lt;int&gt; &amp;candidates, int target) {\n \u00a0 \u00a0 \u00a0  sort(candidates.begin(),candidates.end());\n \u00a0 \u00a0 \u00a0  vector&lt;vector&lt;int&gt;&gt; result;\n \u00a0 \u00a0 \u00a0  vector&lt;int&gt; path;\n \u00a0 \u00a0 \u00a0  dfs(result, candidates, target, path, 0);\n \u00a0 \u00a0 \u00a0  return result;\n \u00a0  }\n\u200b\nprivate:\n \u00a0  void dfs(vector&lt;vector&lt;int&gt;&gt; &amp;result, const vector&lt;int&gt; &amp;candidates, int target, vector&lt;int&gt; &amp;path, int start) {\n \u00a0 \u00a0 \u00a0  // Boundary conditions\n \u00a0 \u00a0 \u00a0  if (target &lt;= 0 || start &lt; 0 || start &gt;= candidates.size()) {\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  if(target==0){\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  result.push_back(path);\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  }\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  return;\n \u00a0 \u00a0 \u00a0  }\n\u200b\n \u00a0 \u00a0 \u00a0  // get the start and end if there is the same elements in candidates in start index\n \u00a0 \u00a0 \u00a0  int end=start;\n \u00a0 \u00a0 \u00a0  while(end&lt;candidates.size()&amp;&amp;candidates[end]== candidates[start]){\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  end++;\n \u00a0 \u00a0 \u00a0  }\n \u00a0 \u00a0 \u00a0  end--;\n\u200b\n \u00a0 \u00a0 \u00a0  // start dfs\n \u00a0 \u00a0 \u00a0  int tmp;\n \u00a0 \u00a0 \u00a0  for(int i=0;i&lt;=end-start+1;i++){\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  tmp=i;\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  while(tmp&gt;0){\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  path.push_back(candidates[start]);\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  tmp--;\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  }\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  dfs(result,candidates,target-i*candidates[start],path,end+1);\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  tmp=i;\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  while (tmp&gt;0){\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  path.pop_back();\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  tmp--;\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  }\n \u00a0 \u00a0 \u00a0  }\n \u00a0  }\n};\nC++\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day25_Backtracking_part02/#131","title":"131.\u5206\u5272\u56de\u6587\u4e32","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day25_Backtracking_part02/#_7","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u56de\u6eaf\u6cd5+\u52a8\u6001\u89c4\u5212\u3002\u6bd4\u8f83\u7b80\u5355\uff0c\u6ce8\u610f\u53ef\u4ee5\u901a\u8fc7\u5bf9s\u7684\u9884\u5904\u7406\u4f7f\u5f97\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u4e32\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u4e32\u964d\u4e3aO(1)\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u56de\u6eaf\u6cd5+\u8bb0\u5fc6\u5316\u641c\u7d22\u3002dp[i]\u4e3as[0,i]\u7684\u6240\u6709\u4e3a\u56de\u6587\u4e32\u7684\u5212\u5206\u65b9\u6cd5\uff0c\u8f6c\u79fb\u65b9\u7a0b\u8f83\u4e3a\u7b80\u5355\uff0c\u4f46\u4f7f\u7528markdown\u7f16\u5199\u8f83\u4e3a\u9ebb\u70e6\uff0c\u5728\u6b64\u7701\u7565\u3002</p> <p>\u672c\u9898\u4ec5\u91c7\u7528\u56de\u6eaf\u6cd5\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day25_Backtracking_part02/#_8","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n \u00a0  vector&lt;vector&lt;string&gt;&gt; partition(string s) {\n \u00a0 \u00a0 \u00a0  vector&lt;vector&lt;string&gt;&gt; result;\n \u00a0 \u00a0 \u00a0  vector&lt;string&gt; path;\n \u00a0 \u00a0 \u00a0  dfs(result,s,0,path);\n \u00a0 \u00a0 \u00a0  return result;\n \u00a0  }\nprivate:\n \u00a0  void dfs(vector&lt;vector&lt;string&gt;&gt;&amp; result,const string &amp;s,int start,vector&lt;string&gt; &amp;path){\n \u00a0 \u00a0 \u00a0  if(start&gt;=s.size()){\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  result.push_back(path);\n \u00a0 \u00a0 \u00a0  }\n\u200b\n \u00a0 \u00a0 \u00a0  for(int i=start;i&lt;s.size();i++){\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  if(isPalindrome(s,start,i)){\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  path.push_back(s.substr(start,i-start+1));\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  dfs(result,s,i+1,path);\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  path.pop_back();\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  }\n \u00a0 \u00a0 \u00a0  }\n \u00a0  }\n \u00a0  bool isPalindrome(const string &amp;s, int start,int end){\n \u00a0 \u00a0 \u00a0  if(start&lt;0||start&gt;end||end&gt;=s.size()){\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  return false;\n \u00a0 \u00a0 \u00a0  }\n \u00a0 \u00a0 \u00a0  for(int i=start;i&lt;start+(end-start+1)/2;i++){\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  if(s[i]!=s[end-i+start]){\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  return false;\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  }\n \u00a0 \u00a0 \u00a0  }\n \u00a0 \u00a0 \u00a0  return true;\n \u00a0  }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day25_Backtracking_part02/#_9","title":"\u603b\u7ed3","text":"<ul> <li>\u56de\u6eaf\u7684\u8fdb\u9636\u4f7f\u7528\uff0c\u4f7f\u7528\u56de\u6eaf\u6846\u67b6\u601d\u8003\u95ee\u9898\u548c\u5199\u4ee3\u7801</li> <li>\u6ce8\u610f\u4f18\u5316\uff0c\u9884\u5904\u7406\u3001dp\u7b49\uff0c\u4f8b\u5982\u5728131\u4e2d\u5bf9s\u8fdb\u884cdp\u7684\u9884\u5904\u7406\u3002</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day27_Backtracking_part03/","title":"39.\u7ec4\u5408\u603b\u548c","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day27_Backtracking_part03/#_1","title":"\u601d\u8def","text":"<p>\u56de\u6eaf\u6cd5\uff0c\u7b80\u5355\u7684dfs\u3002\u6ce8\u610fpath\u4e2d\u503c\u662f\u6bcf\u4e2acandidate\u7684\u9009\u62e9\u60c5\u51b5\uff0c\u4e3a\u4e86\u51cf\u5c11\u5165\u6808\u548c\u51fa\u6808\u7684\u64cd\u4f5c\u6b21\u6570\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day27_Backtracking_part03/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bben\u4e3acandidate\u7684\u957f\u5ea6</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4fbf\u8ba1\u7b97\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aS(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day27_Backtracking_part03/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; combinationSum(vector&lt;int&gt; &amp;candidates, int target) {\n        vector&lt;vector&lt;int&gt;&gt; result;\n        vector&lt;int&gt; path(candidates.size(), 0);\n        dfs(result, candidates, target, path, 0);\n        return result;\n    }\n\nprivate:\n    void dfs(vector&lt;vector&lt;int&gt;&gt; &amp;result, const vector&lt;int&gt; &amp;candidates, int target, vector&lt;int&gt; &amp;path, int start) {\n        if (target == 0) {\n            vector&lt;int&gt; tmp;\n            for (int i = 0; i &lt; path.size(); i++) {\n                int nums=path[i];\n                while (nums &gt; 0) {\n                    tmp.push_back(candidates[i]);\n                    nums--;\n                }\n            }\n            if (!tmp.empty()) {\n                result.push_back(tmp);\n            }\n            return;\n        }\n        if (target &lt; 0 || start &lt; 0 || start &gt;= candidates.size()) {\n            return;\n        }\n\n        for (int i = 0; i * candidates[start] &lt;= target; i++) {\n            path[start] = i;\n            dfs(result, candidates, target - i * candidates[start], path, start + 1);\n            path[start] = 0;\n        }\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day27_Backtracking_part03/#40ii","title":"40.\u7ec4\u5408\u603b\u548cII","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day27_Backtracking_part03/#_4","title":"\u601d\u8def","text":"<p>\u4e0e39\u601d\u8def\u7c7b\u4f3c\uff0c\u572839\u7684\u9898\u76ee\u89e3\u7b54\u4e0a\u8fdb\u884c\u4e00\u4e9b\u8c03\u6574\u5373\u53ef</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day27_Backtracking_part03/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bben\u4e3acandidates\u7684\u957f\u5ea6</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4fbf\u5206\u6790\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day27_Backtracking_part03/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; combinationSum2(vector&lt;int&gt; &amp;candidates, int target) {\n        sort(candidates.begin(),candidates.end());\n        vector&lt;vector&lt;int&gt;&gt; result;\n        vector&lt;int&gt; path;\n        dfs(result, candidates, target, path, 0);\n        return result;\n    }\n\nprivate:\n    void dfs(vector&lt;vector&lt;int&gt;&gt; &amp;result, const vector&lt;int&gt; &amp;candidates, int target, vector&lt;int&gt; &amp;path, int start) {\n        // Boundary conditions\n        if (target &lt;= 0 || start &lt; 0 || start &gt;= candidates.size()) {\n            if(target==0){\n                result.push_back(path);\n            }\n            return;\n        }\n\n        // get the start and end if there is the same elements in candidates in start index\n        int end=start;\n        while(end&lt;candidates.size()&amp;&amp;candidates[end]== candidates[start]){\n            end++;\n        }\n        end--;\n\n        // start dfs\n        int tmp;\n        for(int i=0;i&lt;=end-start+1;i++){\n            tmp=i;\n            while(tmp&gt;0){\n                path.push_back(candidates[start]);\n                tmp--;\n            }\n            dfs(result,candidates,target-i*candidates[start],path,end+1);\n            tmp=i;\n            while (tmp&gt;0){\n                path.pop_back();\n                tmp--;\n            }\n        }\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day27_Backtracking_part03/#131","title":"131.\u5206\u5272\u56de\u6587\u4e32","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day27_Backtracking_part03/#_7","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u56de\u6eaf\u6cd5\u3002\u6bd4\u8f83\u7b80\u5355\uff0c\u6ce8\u610f\u53ef\u4ee5\u901a\u8fc7\u5bf9s\u7684\u9884\u5904\u7406\u4f7f\u5f97\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u4e32\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u4e32\u964d\u4e3aO(1)\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1adp\u6cd5\u3002dp[i]\u4e3as[0,i]\u7684\u6240\u6709\u4e3a\u56de\u6587\u4e32\u7684\u5212\u5206\u65b9\u6cd5\uff0c\u8f6c\u79fb\u65b9\u7a0b\u8f83\u4e3a\u7b80\u5355\uff0c\u4f46\u4f7f\u7528markdown\u7f16\u5199\u8f83\u4e3a\u9ebb\u70e6\uff0c\u5728\u6b64\u7701\u7565\u3002</p> <p>\u672c\u9898\u91c7\u7528\u56de\u6eaf\u6cd5\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day27_Backtracking_part03/#_8","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;string&gt;&gt; partition(string s) {\n        vector&lt;vector&lt;string&gt;&gt; result;\n        vector&lt;string&gt; path;\n        dfs(result,s,0,path);\n        return result;\n    }\nprivate:\n    void dfs(vector&lt;vector&lt;string&gt;&gt;&amp; result,const string &amp;s,int start,vector&lt;string&gt; &amp;path){\n        if(start&gt;=s.size()){\n            result.push_back(path);\n        }\n\n        for(int i=start;i&lt;s.size();i++){\n            if(isPalindrome(s,start,i)){\n                path.push_back(s.substr(start,i-start+1));\n                dfs(result,s,i+1,path);\n                path.pop_back();\n            }\n        }\n    }\n    bool isPalindrome(const string &amp;s, int start,int end){\n        if(start&lt;0||start&gt;end||end&gt;=s.size()){\n            return false;\n        }\n        for(int i=start;i&lt;start+(end-start+1)/2;i++){\n            if(s[i]!=s[end-i+start]){\n                return false;\n            }\n        }\n        return true;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day27_Backtracking_part03/#_9","title":"\u603b\u7ed3","text":"<ul> <li>\u56de\u6eaf\u7684\u8fdb\u9636\u4f7f\u7528\uff0c\u4f7f\u7528\u56de\u6eaf\u6846\u67b6\u601d\u8003\u95ee\u9898\u548c\u5199\u4ee3\u7801</li> <li>\u6ce8\u610f\u4f18\u5316\uff0c\u9884\u5904\u7406\u3001dp\u7b49\uff0c\u4f8b\u5982\u5728131\u4e2d\u5bf9s\u8fdb\u884cdp\u7684\u9884\u5904\u7406\u3002</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day28_Backtracking_part04/","title":"93.\u590d\u539fIP\u5730\u5740","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day28_Backtracking_part04/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u56de\u6eaf\u6cd5\u3002\u4e00\u5c42\u4e00\u5c42\u5730\u627e\u5207\u5206\u70b9\uff0c\u53ef\u4ee5\u9488\u5bf9\u4efb\u4f55\u6570\u91cf\u7684\u5207\u5206\u70b9\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u975e\u56de\u6eaf\u6cd5\u3002\u7531\u4e8e\u7ecf\u5206\u6790\u53ef\u77e5\u53ea\u9700\u8981\u627e\u4e09\u4e2a\u5207\u5206\u70b9\uff0c\u6545\u4f7f\u7528\u4e09\u4e2afor\u5faa\u73af\u89e3\u51b3\u3002</p> <p>\u672c\u9898\u91c7\u7528\u65b9\u6cd5\u4e8c</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day28_Backtracking_part04/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>n\u4e3as\u7684\u957f\u5ea6</p> <p>\u4e0d\u597d\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aS(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day28_Backtracking_part04/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;string&gt; restoreIpAddresses(string s) {\n        vector&lt;string&gt; result;\n        int len=s.size();\n        for(int i=0;i&lt;len-3;i++){\n            if(!isValidIp(s,0,i)){\n                continue;\n            }\n            for(int j=i+1;j&lt;len-2;j++){\n                if(!isValidIp(s,i+1,j)){\n                    continue;\n                }\n                for(int k=j+1;k&lt;len-1;k++){\n                    if(isValidIp(s,j+1,k)&amp;&amp; isValidIp(s,k+1,len-1)){\n                        string tmp=s.substr(0,i+1)+\".\"+s.substr(i+1,j-i)+\".\"+\n                                s.substr(j+1,k-j)+\".\"+s.substr(k+1,len-1-k);\n                        result.push_back(tmp);\n                    }\n                }\n            }\n        }\n        return result;\n    }\nprivate:\n    bool isValidIp(string s,int start,int end){\n        if(start&lt;0||end&gt;=s.size()){\n            return false;\n        }\n        for(int i=start;i&lt;end;i++){\n            if(!isdigit(s[i])){\n                return false;\n            }\n        }\n        if(end-start&gt;2||end-start&lt;0){\n            return false;\n        }\n\n        int dig_ip= stoi(s.substr(start,end-start+1));\n\n        switch (end-start) {\n            case 2:\n                if(dig_ip&lt;100||dig_ip&gt;255){\n                    return false;\n                }\n                break;\n            case 1:\n                if(dig_ip&lt;10){\n                    return false;\n                }\n                break;\n        }\n        return true;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day28_Backtracking_part04/#78","title":"78.\u5b50\u96c6","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day28_Backtracking_part04/#_4","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u56de\u6eaf\u6cd5\u3002\u5f88\u7b80\u5355\u7684\u56de\u6eaf\u6cd5\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u975e\u56de\u6eaf\u6cd5\u3002\u5b50\u96c6\u7684\u4e2a\u6570\u4e3a\\(\\(2^n\\)\\),\u6bcf\u4e2a\u5b50\u96c6\u53ef\u6620\u5c04\u4e3a0\u5230\\(\\(2^n\\)\\)\u7684\u4e00\u4e2a\u6570\u5b57\uff0c\u5177\u4f53\u89c1\u6e90\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day28_Backtracking_part04/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>S(\\(\\(2^n\\)\\)),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day28_Backtracking_part04/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; subsets(vector&lt;int&gt; &amp;nums) {\n        int total = pow(2, nums.size());\n        vector&lt;vector&lt;int&gt;&gt; result(total);\n        for (int i = 0; i &lt; total; i++) {\n            int tmp = i;\n            for (int j = 0; j &lt; nums.size(); j++) {\n                if (tmp % 2 == 1) {\n                    result[i].push_back(nums[j]);\n                }\n                tmp &gt;&gt;= 1;\n            }\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day28_Backtracking_part04/#90ii","title":"90.\u5b50\u96c6II","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day28_Backtracking_part04/#_7","title":"\u601d\u8def","text":"<p>\u56de\u6eaf\u6cd5\u3002\u6709\u4e24\u79cd\u8bbe\u8ba1\u601d\u8def\uff0c\u7b2c\u4e00\u79cd\uff1a\u51b3\u7b56\u9014\u5f84\u4e3a\u9009\u62e90\u4e2a\u5143\u7d20-&gt;\u9009\u62e9\u4e00\u4e2a\u5143\u7d20-&gt;\u9009\u62e9\u4e8c\u4e2a\u5143\u7d20-&gt;...-&gt;\u9009\u62e9n\u4e2a\u5143\u7d20\uff0c\u6545\u51b3\u7b56\u6811\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u89e3\u3002\u7b2c\u4e8c\u79cd\uff1a\u51b3\u7b56\u662f\u662f\u5426\u7b2c\u4e00\u4e2a\u5143\u7d20-&gt;\u662f\u5426\u9009\u62e9\u7b2c\u4e8c\u4e2a\u5143\u7d20-&gt;...-&gt;\u9009\u62e9\u7b2cn\u4e2a\u5143\u7d20\uff0c\u6545\u51b3\u7b56\u6811\u4e2d\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u662f\u4e00\u4e2a\u89e3\u3002</p> <p>\u672c\u9898\u91c7\u7528\u7b2c\u4e8c\u79cd\u89e3\u7b54\u65b9\u6cd5\uff0c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u9700\u8981\u63a2\u7d22\u7684\u72b6\u6001\u66f4\u5c11\uff0c\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u4e00\u6837\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day28_Backtracking_part04/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(\\(\\(2^n\\)\\)),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day28_Backtracking_part04/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; subsetsWithDup(vector&lt;int&gt; &amp;nums) {\n        sort(nums.begin(), nums.end());\n        vector&lt;vector&lt;int&gt;&gt; result;\n        vector&lt;int&gt; path;\n        dfs(result, nums, path, 0);\n        return result;\n    }\n\nprivate:\n    void dfs(vector&lt;vector&lt;int&gt;&gt; &amp;result, const vector&lt;int&gt; &amp;nums, vector&lt;int&gt; &amp;path, int start) {\n        //boundary condition:find a valid solution\n        if(start&lt;0){\n            return;\n        }\n        if (start &gt;= nums.size()) {\n            result.push_back(path);\n            return;\n        }\n\n        // start dfs\n        int end=start;\n        while(end&lt;nums.size()&amp;&amp;nums[end]==nums[start]){\n            end++;\n        }\n\n        int tmp;\n        for(int i=0;i&lt;=end-start;i++){\n            tmp=i;\n            while(tmp&gt;0){\n                path.push_back(nums[start]);\n                tmp--;\n            }\n            dfs(result,nums,path,end);\n            tmp=i;\n            while (tmp&gt;0){\n                path.pop_back();\n                tmp--;\n            }\n        }\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day29_Backtracking_part05/","title":"491.\u975e\u9012\u51cf\u5b50\u5e8f\u5217","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day29_Backtracking_part05/#_1","title":"\u601d\u8def","text":"<p>\u56de\u6eaf\u6cd5\u3002\u7279\u522b\u6ce8\u610f\u53bb\u91cd\u7684\u5904\u7406\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u6781\u5927\u4f18\u5316\u7a0b\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4\u3002</p> <p>\u6709\u4e24\u79cd\u53bb\u91cd\u7684\u65b9\u6cd5\uff0c\u7b2c\u4e00\u79cd\u662f\u4f7f\u7528last\u8bb0\u5f55\u524d\u4e00\u4e2a\u9009\u62e9\u7684\u5143\u7d20\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\u82e5\u6709\u4e24\u4e2a\u76f8\u540c\u7684\u5143\u7d20\uff0c\u9009\u62e9\u7b2c\u4e00\u4e2a\u548c\u4e0d\u9009\u62e9\u7b2c\u4e8c\u4e2a\u4e0e\u4e0d\u9009\u62e9\u7b2c\u4e00\u4e2a\u548c\u9009\u62e9\u7b2c\u4e8c\u4e2a\u8fd9\u4e24\u79cd\u5c06\u5bfc\u81f4\u91cd\u590d\u7ed3\u679c\uff0c\u901a\u8fc7\u4e0elast\u6bd4\u8f83\u53ea\u4fdd\u7559\u7b2c\u4e8c\u79cd\u4ece\u800c\u8fbe\u5230\u53bb\u6389\u91cd\u590d\u7684\u64cd\u4f5c\u3002</p> <p>\u7b2c\u4e8c\u79cd\u662f\u7ed9\u6bcf\u4e2a\u5408\u6cd5\u89e3\u7684\u5e8f\u5217\u751f\u6210\u4e00\u4e2ahash\u503c\uff0c\u91cd\u70b9\u662fhash\u51fd\u6570\u7684\u8bbe\u8ba1\uff0c\u5177\u4f53\u53ef\u4ee5\u89c1leetcode\u5b98\u65b9\u89e3\u7b54\u3002</p> <p>\u672c\u9898\u91c7\u7528\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u5176\u4e2d\u7b2c\u4e00\u79cd\u65b9\u6cd5\u7684\u53bb\u91cd\u53c2\u8003\u7b54\u6848\u7f16\u5199\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day29_Backtracking_part05/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(\\(\\(n*2^n\\)\\)),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day29_Backtracking_part05/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; findSubsequences(vector&lt;int&gt; &amp;nums) {\n        vector&lt;vector&lt;int&gt;&gt; result;\n        vector&lt;int&gt; path;\n        dfs(result, nums, path, 0, INT32_MIN);\n        return result;\n    }\n\nprivate:\n    void dfs(vector&lt;vector&lt;int&gt;&gt; &amp;result, const vector&lt;int&gt; &amp;nums, vector&lt;int&gt; &amp;path, int cur, int last) {\n        //boundary condition:find a valid solution\n        if (cur &lt; 0) {\n            return;\n        }\n        if (cur &gt;= nums.size()) {\n            if(path.size()&gt;=2){\n                result.push_back(path);\n            }\n            return;\n        }\n\n        // start dfs\n        if (nums[cur] != last) {\n            dfs(result, nums, path, cur + 1, last);\n        }\n\n        if (nums[cur] &gt;= last) {\n            path.push_back(nums[cur]);\n            dfs(result, nums, path, cur + 1, nums[cur]);\n            path.pop_back();\n        }\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day29_Backtracking_part05/#46","title":"46.\u5168\u6392\u5217","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day29_Backtracking_part05/#_4","title":"\u601d\u8def","text":"<p>\u5178\u578b\u7684\u56de\u6eaf\u95ee\u9898\uff0c\u4eff\u7167\u6392\u5217\u7684\u5b9a\u4e49\u4e0e\u83b7\u53d6\u7f16\u5199\u56de\u6eaf\u3002\u5177\u4f53\u89c1\u6e90\u4ee3\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day29_Backtracking_part05/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bben\u4e3a\u6570\u7ec4\u957f\u5ea6</p> <p>O(n!),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day29_Backtracking_part05/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; permute(vector&lt;int&gt; &amp;nums) {\n        vector&lt;vector&lt;int&gt;&gt; result;\n        vector&lt;bool&gt; visited(nums.size(), false);\n        vector&lt;int&gt; path;\n        dfs(result, visited, nums, path);\n        return result;\n    }\n\nprivate:\n    void dfs(vector&lt;vector&lt;int&gt;&gt; &amp;result, vector&lt;bool&gt; &amp;visited, const vector&lt;int&gt; &amp;nums, vector&lt;int&gt; &amp;path) {\n        // boundary conditions\n        if (path.size() &gt;= nums.size()) {\n            result.push_back(path);\n        }\n\n        // start dfs\n        for (int i = 0; i &lt; nums.size(); i++) {\n            if (!visited[i]) {\n                path.push_back(nums[i]);\n                visited[i] = true;\n                dfs(result, visited, nums, path);\n                visited[i] = false;\n                path.pop_back();\n            }\n        }\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day29_Backtracking_part05/#47ii","title":"47.\u5168\u6392\u5217II","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day29_Backtracking_part05/#_7","title":"\u601d\u8def","text":"<p>\u5728\u5168\u6392\u5217\u4e00\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u53bb\u91cd\u7684\u64cd\u4f5c\uff0c\u8f83\u4e3a\u7b80\u5355\uff0c\u5177\u4f53\u89c1\u4e0b\u5217\u6e90\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day29_Backtracking_part05/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>n\u4e3anums\u7684\u957f\u5ea6</p> <p>O(n!)\uff0cS(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day29_Backtracking_part05/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; permuteUnique(vector&lt;int&gt;&amp; nums) {\n        sort(nums.begin(),nums.end());\n        vector&lt;vector&lt;int&gt;&gt; result;\n        vector&lt;int&gt; path;\n        vector&lt;bool&gt; visited(nums.size(),false);\n        dfs(result,path,nums,visited);\n        return result;\n    }\nprivate:\n    void dfs(vector&lt;vector&lt;int&gt;&gt; &amp;result,vector&lt;int&gt; &amp;path,const vector&lt;int&gt; &amp;nums,vector&lt;bool&gt; &amp;visited){\n        // boundary conditions\n        if(path.size()&gt;=nums.size()){\n            result.push_back(path);\n        }\n\n        // start dfs\n        int pre_val=INT32_MIN;\n        for(int i=0;i&lt;nums.size();i++){\n            if(!visited[i]&amp;&amp;nums[i]!=pre_val){\n                pre_val=nums[i];\n                path.push_back(nums[i]);\n                visited[i]=true;\n                dfs(result,path,nums,visited);\n                visited[i]=false;\n                path.pop_back();\n            }\n        }\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day29_Backtracking_part05/#_10","title":"\u603b\u7ed3","text":"<ul> <li>\u4e3b\u8981\u662f\u7b2c\u4e00\u9898\u4e2d\u7684\u53bb\u6389\u91cd\u590d\u7684\u64cd\u4f5c\uff1a\u4e3a\u6bcf\u4e2a\u5e8f\u5217\u751f\u6210hash\u503c\uff0c\u5224\u65ad\u65b0\u7684\u5e8f\u5217\u662f\u5426\u6709\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u5e94hash\u503c\uff0c\u5173\u952e\u662fhash\u51fd\u6570\u7684\u8bbe\u8ba1\uff1b\u7b2c\u4e8c\u70b9\u662f\u5de7\u5999\u4f7f\u7528last\u53d8\u91cf\u3002</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day2_Array_part02/","title":"977.\u6709\u5e8f\u6570\u7ec4\u7684\u5e73\u65b9","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day2_Array_part02/#_1","title":"\u601d\u8def","text":"<p>\u53cc\u6307\u9488\u6cd5\uff0c\u5f52\u5e76\u6392\u5e8f</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day2_Array_part02/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n) S(n)\uff1a\u539f\u6709\u9898\u76ee\u7ed3\u679c\u8fd4\u56de\u9700\u8981\u7684\u590d\u6742\u5ea6\uff0c\u53ef\u4ee5\u5229\u7528O(1)\u7684\u5f52\u5e76\u6392\u5e8f\u65b9\u6cd5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day2_Array_part02/#_3","title":"\u6e90\u7801","text":"<p><pre><code>class Solution {  \npublic:  \n    vector&lt;int&gt; sortedSquares(vector&lt;int&gt;&amp; nums) {  \n        int middle=0;  \n        vector&lt;int&gt; result;  \n        // get the the index of the minmum of fabs(nums[index])  \n        for(int i=0;i&lt;nums.size()-1;i++){  \n            if(fabs(nums[i])&gt;fabs(nums[i+1])){  \n                middle=i+1;  \n            }  \n        }  \n\n        // merge sort to (0,end],[start,nums.size())  \n        int end=middle;  \n        int start=middle+1;  \n        while(end&gt;=0&amp;&amp;start&lt;nums.size()){  \n            if(fabs(nums[end])&lt;fabs(nums[start])){  \n                result.push_back(nums[end]);  \n                end--;  \n            }else{  \n                result.push_back(nums[start]);  \n                start++;  \n            }  \n        }  \n        while(end&gt;=0){  \n            result.push_back(nums[end]);  \n            end--;  \n        }  \n        while(start&lt;nums.size()){  \n            result.push_back(nums[start]);  \n            start++;  \n        }  \n\n        for(auto &amp;it:result){  \n            it=it*it;  \n        }  \n        return result;  \n    }  \n};\n</code></pre> note:\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7b80\u5316\uff0c\u4ece\u7ed3\u679c\u7684\u6700\u5927\u503c\u5f00\u59cb\u6392\u5e8f\u6216\u8005\u6700\u5c0f\u503c\u5f00\u59cb\u6392\u5e8f\u4e5f\u884c</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day2_Array_part02/#209","title":"209.\u6700\u5c0f\u5c3a\u5bf8\u7684\u5b57\u6570\u7ec4\u548c","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day2_Array_part02/#_4","title":"\u601d\u8def","text":"<p>\u6ed1\u52a8\u7a97\u53e3\u6216\u8005\u5148\u9884\u5904\u7406\uff08\u6392\u5e8f\uff09\u518d\u627e\u6700\u5c0f\u5c3a\u5bf8\u7684\u6570\u7ec4\uff0c\u8fd9\u91cc\u4ee5\u6ed1\u52a8\u7a97\u53e3\u4e3a\u4f8b</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day2_Array_part02/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day2_Array_part02/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    int minSubArrayLen(int target, vector&lt;int&gt;&amp; nums) {  \n        int start=0;  \n        int end=0;  \n        int sum=nums[start];  \n        int result=0;  \n        // get the first sliding window  \n        while(sum&lt;target){  \n            end++;  \n            if(end&gt;=nums.size()){  \n                return result;  \n            }  \n            sum+=nums[end];  \n        }  \n        result=end-start+1;  \n\n        // get the minSubArrayLen  \n        while(start&lt;nums.size()&amp;&amp;end&lt;nums.size()){  \n            sum-=nums[start];  \n            start++;  \n            while(sum&lt;target){  \n                end++;  \n                if(end&gt;=nums.size()){  \n                    return result;  \n                }  \n                sum+=nums[end];  \n            }  \n            result=end-start+1&gt;result?result:(end-start+1);  \n        }  \n        return result;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day30_Backtracking_part06/","title":"332.\u91cd\u65b0\u5b89\u6392\u884c\u7a0b","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day30_Backtracking_part06/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u86ee\u529b\u7684\u56de\u6eaf\u6cd5\u3002\u526a\u679d\uff1a\u901a\u8fc7\u5bf9\u8fb9\u7684\u6392\u5e8f\u9884\u5904\u7406\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u89e3\u5373\u4e3a\u9898\u76ee\u6240\u6c42\u7684\u89e3\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u627e\u6b27\u62c9\u901a\u8def\u6216\u8005\u6b27\u62c9\u56de\u8def\u7684\u56de\u6eaf\u6cd5\u3002\u5173\u4e8e\u6b64\u7b97\u6cd5\u89c1leetcode\u5b98\u65b9\u9898\u89e3\uff0c\u5bf9\u4e8e\u65b9\u6cd5\u4e8c\u6682\u65f6\u6ca1\u6709\u53bb\u4ed4\u7ec6\u7406\u89e3\uff0c\u6682\u4e14\u7ed9\u5b83\u6807\u8bb0\u4e3a\u4e00\u4e2a\u627e\u6b27\u62c9\u901a\u8def\u6216\u8005\u56de\u8def\u7684\u7b97\u6cd5\uff0c\u8bb0\u4f4f\u5e76\u4e14\u80fd\u591f\u5e94\u7528\u5373\u53ef\u3002</p> <p>\u65b9\u6cd5\u4e00\u5728\u5012\u6570\u7b2c\u4e8c\u4e2a\u6d4b\u4f8b\u8d85\u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u9ad8\uff0c\u5c06\u70b9\u7684\u540d\u5b57\u6620\u5c04\u6210\u6570\u5b57\u53ef\u4ee5\u8fdb\u4e00\u6b65\u964d\u4f4e\u8fd0\u884c\u7684\u65f6\u95f4\uff0c\u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\u3002\u65b9\u6cd5\u4e8c\u9ad8\u6548\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day30_Backtracking_part06/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>m\u4e3atickets\u7684\u957f\u5ea6</p> <p>\u65b9\u6cd5\u4e00\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4fbf\u8ba1\u7b97\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(m)\u3002</p> <p>\u65b9\u6cd5\u4e8c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\(O(mlogm)\\)\\),\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\(O(m)\\)\\)\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day30_Backtracking_part06/#_3","title":"\u6e90\u7801","text":"<p>\u65b9\u6cd5\u4e00\u6e90\u7801</p> <pre><code>class Solution {\npublic:\n    vector&lt;string&gt; findItinerary(vector&lt;vector&lt;string&gt;&gt; &amp;tickets) {\n        unordered_map&lt;string, vector&lt;string&gt;&gt; graph_tickets;\n        unordered_map&lt;string, int&gt; visited;\n        for (auto &amp;it: tickets) {\n            graph_tickets[it[0]].push_back(it[1]);\n            if (visited.find(it[0] + it[1]) == visited.end()) {\n                visited[it[0] + it[1]] = 1;\n            } else {\n                visited[it[0] + it[1]]++;\n            }\n        }\n\n        for (auto &amp;it: graph_tickets) {\n            sort(it.second.begin(), it.second.end());\n        }\n\n        vector&lt;string&gt; result;\n        dfs(result, graph_tickets, visited, 0, tickets);\n        return result;\n    }\n\nprivate:\n    bool dfs(vector&lt;string&gt; &amp;result, const unordered_map&lt;string, vector&lt;string&gt;&gt; &amp;graph_tickets,\n             unordered_map&lt;string, int&gt; &amp;visited, int visited_edges, const vector&lt;vector&lt;string&gt;&gt; &amp;tickets) {\n        //boundary condition\n        if (visited_edges &gt;= tickets.size()) {\n            return true;\n        }\n\n        // start dfs\n        string start;\n        if (result.empty()) {\n            result.emplace_back(\"JFK\");\n        }\n        start = result.back();\n        // pruning\n        if (graph_tickets.find(start) == graph_tickets.end()) {\n            return false;\n        }\n        for (auto &amp;it: graph_tickets.at(start)) {\n            if (visited[start + it] &gt; 0) {\n                result.push_back(it);\n                visited[start + it]--;\n                if (dfs(result, graph_tickets, visited, visited_edges + 1, tickets)) {\n                    return true;\n                }\n                visited[start + it]++;\n                result.pop_back();\n            }\n        }\n        return false;\n    }\n};\n</code></pre> <p>\u65b9\u6cd5\u4e8c\u7684\u6e90\u7801</p> <pre><code>class Solution {\npublic:\n    unordered_map&lt;string, priority_queue&lt;string, vector&lt;string&gt;, std::greater&lt;string&gt;&gt;&gt; vec;\n\n    vector&lt;string&gt; stk;\n\n    void dfs(const string&amp; curr) {\n        while (vec.count(curr) &amp;&amp; vec[curr].size() &gt; 0) {\n            string tmp = vec[curr].top();\n            vec[curr].pop();\n            dfs(move(tmp));\n        }\n        stk.emplace_back(curr);\n    }\n\n    vector&lt;string&gt; findItinerary(vector&lt;vector&lt;string&gt;&gt;&amp; tickets) {\n        for (auto&amp; it : tickets) {\n            vec[it[0]].emplace(it[1]);\n        }\n        dfs(\"JFK\");\n\n        reverse(stk.begin(), stk.end());\n        return stk;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day30_Backtracking_part06/#51n37","title":"51.N\u7687\u540e\u300137.\u89e3\u6570\u72ec","text":"<p>N\u7687\u540e\u9898\u76ee\u94fe\u63a5\u3001\u89e3\u6570\u72ec\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day30_Backtracking_part06/#_4","title":"\u7b80\u4ecb","text":"<p>\u4e4b\u524d\u505a\u8fc7\uff0c\u7531\u4e8e\u65f6\u95f4\u5173\u7cfb\u5728\u6b64\u4e0d\u518d\u91cd\u65b0\u505a</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day30_Backtracking_part06/#_5","title":"\u6e90\u7801","text":"<p>51.N\u7687\u540e\u6e90\u7801</p> <pre><code>class Solution {\n public:\n    vector&lt;vector&lt;string&gt;&gt; solveNQueens(int n) {\n        total=n;\n        for(int i=0;i&lt;n;i++){\n            pos.emplace_back(-1);\n            col.emplace_back(1);\n        }\n        for(int i=0;i&lt;2*n-1;i++){\n            right_incline.emplace_back(1);\n            left_incline.emplace_back(1);\n        }\n        dfs(0);\n        return result;\n    }\n    void dfs(int n){\n        // \u8fb9\u754c\u6761\u4ef6\n        if(n==total){\n            vector&lt;string&gt; sol;\n            string tmp(total,'.');\n            for(int i=0;i&lt;total;i++){\n                sol.emplace_back(tmp);\n            }\n            for(int i=0;i&lt;pos.size();i++){\n                sol[i][pos[i]]='Q';\n            }\n            result.emplace_back(sol);\n            return;\n        }\n            // dfs\u4e3b\u4f53\n        else{\n            for(int i=0;i&lt;total;i++){\n                if(col[i]==1&amp;&amp;right_incline[i-n+total-1]==1&amp;&amp;left_incline[i+n]==1){\n                    // \u7ad6\u3001\u659c\u90fd\u6807\u8bb0\u4e3afalse(\u6a2a\u4e0d\u7528\u7ba1\uff09\n                    pos[n]=i;\n                    col[i]=0;\n                    right_incline[i-n+total-1]=0;\n                    left_incline[i+n]=0;\n                    dfs(n+1);\n                    col[i]=1;\n                    right_incline[i-n+total-1]=1;\n                    left_incline[i+n]=1;\n                }\n            }\n            return;\n        }\n    }\n private:\n    vector&lt;int&gt; pos,col,right_incline,left_incline;\n    vector&lt;vector&lt;string&gt;&gt; result;\n    int total;\n};\n</code></pre> <p>37.\u89e3\u6570\u72ec\u6e90\u7801</p> <pre><code>class Solution {\nprivate:\n    bool line[9][9];\n    bool column[9][9];\n    bool block[3][3][9];\n    bool valid;\n    vector&lt;pair&lt;int, int&gt;&gt; spaces;\n\npublic:\n    void dfs(vector&lt;vector&lt;char&gt;&gt;&amp; board, int pos) {\n        if (pos == spaces.size()) {\n            valid = true;\n            return;\n        }\n\n        auto [i, j] = spaces[pos];\n        for (int digit = 0; digit &lt; 9 &amp;&amp; !valid; ++digit) {\n            if (!line[i][digit] &amp;&amp; !column[j][digit] &amp;&amp; !block[i / 3][j / 3][digit]) {\n                line[i][digit] = column[j][digit] = block[i / 3][j / 3][digit] = true;\n                board[i][j] = digit + '0' + 1;\n                dfs(board, pos + 1);\n                line[i][digit] = column[j][digit] = block[i / 3][j / 3][digit] = false;\n            }\n        }\n    }\n\n    void solveSudoku(vector&lt;vector&lt;char&gt;&gt;&amp; board) {\n        memset(line, false, sizeof(line));\n        memset(column, false, sizeof(column));\n        memset(block, false, sizeof(block));\n        valid = false;\n\n        for (int i = 0; i &lt; 9; ++i) {\n            for (int j = 0; j &lt; 9; ++j) {\n                if (board[i][j] == '.') {\n                    spaces.emplace_back(i, j);\n                }\n                else {\n                    int digit = board[i][j] - '0' - 1;\n                    line[i][digit] = column[j][digit] = block[i / 3][j / 3][digit] = true;\n                }\n            }\n        }\n\n        dfs(board, 0);\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day30_Backtracking_part06/#_6","title":"\u603b\u7ed3","text":"<ul> <li>\u5bf9\u4e8e\u6b27\u62c9\u901a\u8def\u548c\u56de\u8def\u7684\u5b9a\u4e49\u4ee5\u53ca\u76f8\u5bf9\u5e94\u7684\u7b97\u6cd5\uff0c\u4ece\u7b2c\u4e00\u9898\u4e2d\u6240\u5b66\u4e60\u5f97\u5230\u3002</li> <li>\u4f7f\u7528unordered_map\u5b9a\u4e49\u90bb\u63a5\u8868\u3002</li> <li>\u56de\u6eaf\u662f\u9012\u5f52\u7684\u4ea7\u7269\uff0c\u53ea\u8981\u6709\u9012\u5f52\u5c31\u4f1a\u6709\u56de\u6eaf</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day31_Greedy_part01/","title":"455.\u5206\u53d1\u997c\u5e72","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day31_Greedy_part01/#_1","title":"\u601d\u8def","text":"<p>\u8d2a\u5fc3\u601d\u60f3\u3002\u6309\u7167\u65e5\u5e38\u751f\u6d3b\u77e5\u8bc6\u63a8\u65ad\u4f18\u5148\u6ee1\u8db3\u5177\u6709\u6700\u5c0f\u8d2a\u5fc3\u56e0\u5b50\u7684\u5c0f\u5b69\u53ef\u4ee5\u4f7f\u5f97\u6ee1\u610f\u7684\u5c0f\u5b69\u6570\u6700\u5927\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u53cd\u8bc1\u6cd5\u8bc1\u660e\u5f97\u5230\u3002\u7136\u540e\u8003\u8651\u4f7f\u7528\u53cc\u6307\u9488\u548c\u6392\u5e8f\u4f18\u5316\u7b97\u6cd5\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day31_Greedy_part01/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bben\u4e3ag\u7684\u957f\u5ea6\uff0cm\u4e3as\u7684\u957f\u5ea6</p> <p>O(\\(\\(nlogn+mlogm\\)\\)),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day31_Greedy_part01/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int findContentChildren(vector&lt;int&gt;&amp; g, vector&lt;int&gt;&amp; s) {\n        sort(g.begin(),g.end());\n        sort(s.begin(),s.end());\n\n        int result=0;\n        int i_g=0;\n        int i_s=0;\n        while(i_g&lt;g.size()&amp;&amp;i_s&lt;s.size()){\n            if(s[i_s]&gt;=g[i_g]){\n                i_g++;\n                i_s++;\n                result++;\n            }else{\n                i_s++;\n            }\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day31_Greedy_part01/#376","title":"376.\u6446\u52a8\u5e8f\u5217","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day31_Greedy_part01/#_4","title":"\u601d\u8def","text":"<p>\u8d2a\u5fc3\u601d\u60f3\u3002</p> <p>\u8bbe\u6700\u957f\u6446\u52a8\u5e8f\u5217\u4e3atarget\u3002\u8d2a\u5fc3\u7684\u7b56\u7565\u5206\u4e3a\u4e24\u6b65\u8d70\uff1a</p> <p>i.\u9009\u62e9nums[0]\u4f5c\u4e3atarget[0]\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002</p> <p>ii.target\u7684\u5176\u4f59\u7684target[i]\u90fd\u662f\u90fd\u662fnums\u5728target[i-1]\u4e0etarget[i]\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6781\u503c\u70b9\u3002</p> <p>\u7ecf\u8fc7\u6570\u5b66\u4e0a\u7684\u8bc1\u660e\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u7684\u8d2a\u5fc3\u7b56\u7565\u662f\u80fd\u5f97\u5230\u6700\u957f\u6446\u52a8\u5e8f\u5217\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day31_Greedy_part01/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day31_Greedy_part01/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int wiggleMaxLength(vector&lt;int&gt; &amp;nums) {\n        if (nums.size() &lt;= 1) {\n            return 1;\n        }\n        int result = 1;\n        int i = 1;\n        int isnegative = -1;\n        while (i &lt; nums.size() &amp;&amp; nums[i] == nums[0]) {\n            i++;\n        }\n        if (i &gt;= nums.size()) {\n            return 1;\n        }\n        if (nums[i] &gt; nums[0]) {\n            isnegative = 1;\n        }\n        for (; i &lt; nums.size(); i++) {\n            if (nums[i] * isnegative &lt; nums[i - 1] * isnegative) {\n                isnegative *= -1;\n                result++;\n            }\n        }\n        return result + 1;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day31_Greedy_part01/#53","title":"53.\u6700\u5927\u5b50\u6570\u7ec4\u548c","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day31_Greedy_part01/#_7","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\uff0c\u4e4b\u524d\u505a\u8fc7\u73b0\u5728\u6709\u4e9b\u5fd8\u4e86\uff0c\u76f4\u89c9\u611f\u89c9\u662f\u4f7f\u7528dp\u65b9\u6cd5\uff0c\u5e76\u4e0d\u5c5e\u4e8e\u8d2a\u5fc3\u5427\u3002\u9700\u8981\u4f7f\u7528dp\u3001dp1\u4e24\u4e2a\u8868\uff0c\u5176\u4e2ddp[i]\u662f\u6307nums[0..i]\u4e4b\u95f4\u7684\u6700\u5927\u5b50\u6570\u7ec4\u548c\uff0cdp1[i]\u6307\u7684\u662f\u4ee5nums[i]\u7ed3\u5c3e\u7684\u6700\u5927\u5b50\u6570\u7ec4\u548c\u3002\u7531\u4e8e\u4f7f\u7528markdown\u4e0d\u4fbf\u4e8e\u7f16\u5199dp\u7684\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5177\u4f53\u89c1\u4e0b\u9762\u7684\u6e90\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day31_Greedy_part01/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day31_Greedy_part01/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int maxSubArray(vector&lt;int&gt;&amp; nums) {\n        long long sum=nums[0];\n        long long max_last_sum=nums[0];\n        for(int i=1;i&lt;nums.size();i++){\n            max_last_sum=max_last_sum&lt;0?nums[i]:max_last_sum+nums[i];\n            sum=(sum&gt;max_last_sum?sum:max_last_sum);\n        }\n        return sum;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day31_Greedy_part01/#_10","title":"\u603b\u7ed3","text":"<ul> <li>\u8bc6\u522b\u8d2a\u5fc3\u95ee\u9898\u548c\u52a8\u6001\u89c4\u5212\u95ee\u9898\uff0c\u7136\u540e\u5c1d\u8bd5\u4f7f\u7528\u8f6c\u79fb\u65b9\u7a0b\u6216\u8005\u8d2a\u5fc3\u7b56\u7565\u89e3\u51b3\u51e0\u4e2a\u5b9e\u9645\u6d4b\u4f8b\uff0c\u6700\u540e\u8bc1\u660e\u5e76\u5199\u51fa\u4ee3\u7801</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day32_Greedy_part02/","title":"122.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673aII","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day32_Greedy_part02/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u52a8\u6001\u89c4\u5212\u3002\u52a8\u6001\u89c4\u5212\u5177\u6709\u901a\u7528\u6027\uff0c\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u4e00\u7cfb\u5217\u8fd9\u6837\u7684\u95ee\u9898\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u8d2a\u5fc3\u3002\u672c\u9898\u7531\u4e8e\u4e00\u5b9a\u7684\u7279\u6b8a\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u6765\u89e3\u51b3\u95ee\u9898\uff0c\u901a\u8fc7\u5dee\u5206\u7684\u6982\u5ff5\u53ef\u4ee5\u8bc1\u660e\u8d2a\u5fc3\u7b56\u7565\u662f\u6b63\u786e\u7684\u3002</p> <p>\u672c\u9898\u91c7\u7528\u65b9\u6cd5\u4e8c\u89e3\u7b54\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day32_Greedy_part02/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day32_Greedy_part02/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; prices) {\n        int result=0;\n        for(int i=1;i&lt;prices.size();i++){\n            if(prices[i]&gt;prices[i-1]){\n                result+=(prices[i]-prices[i-1]);\n            }\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day32_Greedy_part02/#55","title":"55.\u8df3\u8dc3\u6e38\u620f","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day32_Greedy_part02/#_4","title":"\u601d\u8def","text":"<p>\u8d2a\u5fc3\u6cd5\u3002\u6309\u7167\u65e5\u5e38\u77e5\u8bc6\u9009\u62e9\u8d2a\u5fc3\u7b56\u7565\uff0c\u51b3\u7b56\u8fc7\u7a0b\u662f\u9009\u62e9\u4e0d\u65ad\u8df3\u5230\u6700\u597d\u7684\u65b0\u7684\u8d77\u8df3\u70b9\uff0c\u5373nums[i]+i\u662f\u6240\u6709\u53ef\u4ee5\u5230\u8fbe\u7684\u4f4d\u7f6e\u4e2d\u7684\u6700\u5927\uff0c\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u4f46\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u5230O(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day32_Greedy_part02/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u81ea\u5df1\u5199\u7684\u4ee3\u7801\uff1a\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8fbe\u5230O(\\(\\(n^2\\)\\))</p> <p>leetcode\u5b98\u65b9\u9898\u89e3\u8fdb\u4e00\u6b65\u6539\u8fdb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u5b9a\u4e3aO(n),\u7a7a\u95f4\u590d\u6742\u5ea6\u4e24\u8005\u90fd\u662fS(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day32_Greedy_part02/#_6","title":"\u6e90\u7801","text":"<pre><code>//\u81ea\u5df1\u7684\u4ee3\u7801\nclass Solution {\npublic:\n    bool canJump(vector&lt;int&gt; &amp;nums) {\n        int i=0;\n        int end=0;\n        while(i&lt;nums.size()){\n            if (nums[i] + i &gt;= nums.size()-1) {\n                return true;\n            }\n            if (nums[i] &lt;= 0) {\n                return false;\n            }\n            // to find the next position by greedy way\n            end = i + 1;\n            for (int j = 2; j &lt;= nums[i]; j++) {\n                if (nums[i + j] + i + j &gt;= nums[end] + end) {\n                    end = i + j;\n                }\n            }\n            i = end;\n        }\n        return false;\n    }\n};\n\n\n//\u5b98\u65b9\u4ee3\u7801\npublic class Solution {\n    public boolean canJump(int[] nums) {\n        int n = nums.length;\n        int rightmost = 0;\n        for (int i = 0; i &lt; n; ++i) {\n            if (i &lt;= rightmost) {\n                rightmost = Math.max(rightmost, i + nums[i]);\n                if (rightmost &gt;= n - 1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day32_Greedy_part02/#45ii","title":"45.\u8df3\u8dc3\u6e38\u620fII","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day32_Greedy_part02/#_7","title":"\u601d\u8def","text":"<p>\u8d2a\u5fc3\u601d\u60f3\u3002\u4e0e55.\u8df3\u8dc3\u6e38\u620f\u89e3\u6cd5\u4e0e\u6539\u8fdb\u7c7b\u4f3c\uff0c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day32_Greedy_part02/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day32_Greedy_part02/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\n    public int jump(int[] nums) {\n        int length = nums.length;\n        int end = 0;\n        int maxPosition = 0; \n        int steps = 0;\n        for (int i = 0; i &lt; length - 1; i++) {\n            maxPosition = Math.max(maxPosition, i + nums[i]); \n            if (i == end) {\n                end = maxPosition;\n                steps++;\n            }\n        }\n        return steps;\n    }\n}\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day33_Greedy_part03/","title":"1005.k\u6b21\u53d6\u53cd\u540e\u6700\u5927\u5316\u7684\u6570\u7ec4\u548c","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day33_Greedy_part03/#_1","title":"\u601d\u8def","text":"<p>\u8d2a\u5fc3\u601d\u60f3\u3002\u8003\u8651\u5bf9nums\u6570\u7ec4\u7684k\u6b21\u53d6\u53cd\uff0c\u4f18\u5148\u5c06\u6700\u5c0f\u7684\u8d1f\u6570\u53d6\u53cd\uff0c\u5373\u6bcf\u6b21\u53d6\u53cd\u65f6\u6700\u5927\u5316\u589e\u52a0\u6570\u7ec4\u548c\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day33_Greedy_part03/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u9700\u8981\u5148\u5bf9nums\u8fdb\u884c\u6392\u5e8f\uff0c\u4e3a\u4e86\u7b80\u5316\u53d6\u53cd\u65f6\u7684\u5224\u65ad\u4e0enums\u5168\u90e8\u503c\u5927\u4e8e0\u4f46k\u5927\u4e8e0,\u6545\u9009\u62e9\u4f7f\u7528\u7edd\u5bf9\u503c\u7684\u6bd4\u8f83\u4f5c\u4e3a\u6392\u5e8f\u7684\u6bd4\u8f83\u51fd\u6570\u3002\u6545\u65f6\u95f4\u590d\u6742\u5ea6\\(\\(O(nlogn),S(logn)\\)\\)\uff08\u7a7a\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u6392\u5e8f\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\uff0csort\u4e00\u822c\u91c7\u7528\u5feb\u6392\u4e3aO(nlogn)\uff09\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day33_Greedy_part03/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\nstatic bool cmp(int a, int b) {\n    return abs(a) &gt; abs(b); \n}\npublic:\n    int largestSumAfterKNegations(vector&lt;int&gt;&amp; nums, int k) {\n        sort(nums.begin(), nums.end(), cmp);\n        for (int i = 0; i &lt;nums.size(); i++) {\n            if(nums[i] &lt; 0 &amp;&amp; k &gt; 0) {\n                nums[i] *= -1;\n                k--;\n            }\n        }\n\n        if (k % 2 == 1) nums[nums.size() - 1] *= -1;\n        int result = 0;\n        for(int a:nums) result += a;\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day33_Greedy_part03/#134","title":"134.\u52a0\u6cb9\u7ad9","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day33_Greedy_part03/#_4","title":"\u601d\u8def","text":"<p>\u4e24\u79cd\u65b9\u6cd5\uff0c\u5b9e\u8d28\u4e0a\u8bc1\u660e\u601d\u60f3\u7c7b\u4f3c\uff0c\u90fd\u6bd4\u8f83\u5de7\u5999\uff0c\u501f\u52a9\u4e86\u53cd\u8bc1\u6cd5\u7684\u601d\u60f3\u3002\u5177\u4f53\u90fd\u662f\u901a\u8fc7\u8ba1\u7b97gas\u4e0ecost\u7684\u5dee\u6570\u7ec4\uff0c\u89e3\u9898\u601d\u60f3\u53c2\u8003\u4e8e\u4ee3\u7801\u968f\u60f3\u5f55\u3002leetcode\u7684\u5b98\u65b9\u7b54\u6848\u9898\u89e3\u5c31\u662f\u4ee3\u7801\u968f\u60f3\u5f55\u7684\u89e3\u6cd5\u4e8c\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day33_Greedy_part03/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day33_Greedy_part03/#_6","title":"\u6e90\u7801\uff08\u4e0b\u9762\u4ec5\u5c55\u793a\u65b9\u6cd5\u4e00\u7684\u89e3\u7b54\uff09","text":"<pre><code>class Solution {\npublic:\n    int canCompleteCircuit(vector&lt;int&gt;&amp; gas, vector&lt;int&gt;&amp; cost) {\n        int curSum = 0;\n        int min = INT_MAX; // \u4ece\u8d77\u70b9\u51fa\u53d1\uff0c\u6cb9\u7bb1\u91cc\u7684\u6cb9\u91cf\u6700\u5c0f\u503c\n        for (int i = 0; i &lt; gas.size(); i++) {\n            int rest = gas[i] - cost[i];\n            curSum += rest;\n            if (curSum &lt; min) {\n                min = curSum;\n            }\n        }\n        if (curSum &lt; 0) return -1;  // \u60c5\u51b51\n        if (min &gt;= 0) return 0;     // \u60c5\u51b52\n                                    // \u60c5\u51b53\n        for (int i = gas.size() - 1; i &gt;= 0; i--) {\n            int rest = gas[i] - cost[i];\n            min += rest;\n            if (min &gt;= 0) {\n                return i;\n            }\n        }\n        return -1;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day33_Greedy_part03/#135","title":"135.\u5206\u53d1\u7cd6\u679c","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day33_Greedy_part03/#_7","title":"\u601d\u8def","text":"<p>\u603b\u4f53\u6765\u8bf4\u90fd\u662f\u5e94\u7528\u8d2a\u5fc3\u601d\u60f3\uff0c\u4f18\u5148\u5206\u914d\u6700\u5c11\u7684\u7cd6\u679c\u3002</p> <p>\u65b9\u6cd5\u4e00\uff1a\u4e24\u904d\u626b\u63cf\u3002\u5c06\u76f8\u90bb\u7684\u5b69\u5b50\u4e2d\uff0c\u8bc4\u5206\u9ad8\u7684\u5b69\u5b50\u5fc5\u987b\u83b7\u5f97\u66f4\u591a\u7684\u7cd6\u679c\u62c6\u5206\u4e3a\u5de6\u89c4\u5219\u548c\u53f3\u89c4\u5219\uff0c\u6700\u540e\u53d6\u5de6\u89c4\u5219\u548c\u53f3\u89c4\u5219\u7684\u5404\u4e2a\u4f4d\u7f6e\u7684\u6700\u5927\u503c\u5373\u6240\u8981\u5206\u914d\u7684\u7cd6\u679c\uff0c\u601d\u60f3\u5341\u5206\u5de7\u5999\uff0c\u5173\u952e\u5728\u4e8e\u89c4\u5219\u7684\u5212\u5206\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u4e00\u904d\u626b\u63cf\u3002\u4e0d\u65ad\u786e\u5b9a\u6781\u503c\u70b9\uff08\u5373\u627e\u5355\u8c03\u533a\u95f4\uff09\uff0c\u6ce8\u610fratings\u4e2d\u76f8\u90bb\u4e24\u4e2a\u503c\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u4f46\u81ea\u5df1\u60f3\u7684\u8f83\u4e3a\u4ee3\u7801\u8f83\u4e3a\u7e41\u7410\uff0c\u501f\u9274\u9898\u76ee\u7684\u4ee3\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day33_Greedy_part03/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662fO(n)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\u7b2c\u4e00\u79cd\u65b9\u6cd5\u662fO(n)\uff0c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662fO(1)\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day33_Greedy_part03/#_9","title":"\u6e90\u7801","text":"<p>\u65b9\u6cd5\u4e00\u6e90\u7801</p> <pre><code>class Solution {\n// TODO\uff1a\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u7a7a\u95f4\uff0c\u53bb\u6389r_candies\uff0c\u53ea\u626b\u63cf\u4e24\u904d\u3002\npublic:\n    int candy(vector&lt;int&gt; &amp;ratings) {\n        int result = 0;\n        vector&lt;int&gt; l_candies(ratings.size(), 1);\n        vector&lt;int&gt; r_candies(ratings.size(), 1);\n\n        // \u5c06\u6ee1\u8db3\u7684\u89c4\u5219\u62c6\u5206\u4e3a\u5de6\u89c4\u5219\u548c\u53f3\u89c4\u5219\n        for (int i = 1; i &lt; ratings.size(); i++) {\n            if (ratings[i] &gt; ratings[i - 1]) {\n                l_candies[i] = l_candies[i - 1] + 1;\n            }\n        }\n        for (int i = ratings.size() - 1; i &gt;= 1; i--) {\n            if (ratings[i - 1] &gt; ratings[i]) {\n                r_candies[i - 1] = r_candies[i] + 1;\n            }\n        }\n\n        for (int i = 0; i &lt; ratings.size(); i++) {\n            result += (l_candies[i] &gt; r_candies[i] ? l_candies[i] : r_candies[i]);\n        }\n        return result;\n    }\n};\n</code></pre> <p>\u65b9\u6cd5\u4e8c\u6e90\u7801</p> <pre><code>class Solution {\npublic:\n    int candy(vector&lt;int&gt;&amp; ratings) {\n        int n = ratings.size();\n        int ret = 1;\n        //dec\u7528\u7684\u5f88\u5de7\u5999\uff0cdec\u53ef\u4ee5\u8ba1\u7b97\u964d\u5e8f\u5bf9\u4e8e\u7cd6\u679c\u5206\u914d\u7684\u5f71\u54cd\uff0c\u5373\u66ff\u4ee3\u4e86\u65b9\u6cd5\u4e00\u4e2d\u7684r_candies\n        //dec\u6781\u5927\u7684\u51cf\u5c11\u4e86\u4ee3\u7801\u903b\u8f91\u7684\u6df7\u4e71\uff0c\u76f8\u6bd4\u81ea\u5df1\u4e2a\u4eba\u7684\u601d\u8003\n        int inc = 1, dec = 0, pre = 1;\n        for (int i = 1; i &lt; n; i++) {\n            if (ratings[i] &gt;= ratings[i - 1]) {\n                dec = 0;\n                pre = ratings[i] == ratings[i - 1] ? 1 : pre + 1;\n                ret += pre;\n                inc = pre;\n            } else {\n                dec++;\n                if (dec == inc) {\n                    dec++;\n                }\n                ret += dec;\n                pre = 1;\n            }\n        }\n        return ret;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day33_Greedy_part03/#_10","title":"\u603b\u7ed3","text":"<ul> <li>K\u6b21\u6700\u5927\u53d6\u53cd\u6570\u7ec4\u548c\u6293\u4f4f\u4e86\u8d2a\u5fc3\u7b56\u7565\u7684\u672c\u8d28\uff0c\u4f7f\u7528\u7edd\u5bf9\u503c\u7684\u6bd4\u8f83\u4f5c\u4e3a\u6bd4\u8f83\u51fd\u6570\uff0c\u7cbe\u7b80\u4ee3\u7801</li> <li>\u52a0\u6cb9\u7ad9\u7684\u8d2a\u5fc3\u601d\u60f3\u6bd4\u8f83\u5de7\u5999\uff0c\u503c\u7684\u591a\u63a8\u6572\u591a\u601d\u8003\uff0c\u4e0d\u8bba\u662f\u65b9\u6cd5\u4e00\u8fd8\u662f\u65b9\u6cd5\u4e8c</li> <li>\u5206\u53d1\u7cd6\u679c\u89c4\u5219\u7684\u62c6\u5206\uff0c\u4ee5\u53ca\u8bbe\u8ba1dec\u7cbe\u7b80\u4ee3\u7801\uff0c\u4e0e\u4e0a\u8ff0\u7684\u7b2c\u4e00\u70b9\u76f8\u540c</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day34_Greedy_part04/","title":"860.\u67e0\u6aac\u6c34\u627e\u96f6","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day34_Greedy_part04/#_1","title":"\u601d\u8def","text":"<p>\u8d2a\u5fc3\u3002\u627e\u96f6\u65f6\u4f7f\u7528\u8d2a\u5fc3\uff0c\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u627e\u96f6\u94b1\u95ee\u9898\uff0c\u5f88\u7b80\u5355\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day34_Greedy_part04/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u7531\u4e8e\u53ea\u67095,10,20\u4e09\u79cd\u7c7b\u578b\u7684\u94b1\uff0c\u6545\u662fS(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day34_Greedy_part04/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    bool lemonadeChange(vector&lt;int&gt; &amp;bills) {\n        int changes_5 = 0;\n        int changes_10 = 0;\n        for (auto it: bills) {\n            switch (it) {\n                case 5:\n                    changes_5++;\n                    break;\n                case 10:\n                    changes_10++;\n                    changes_5--;\n                    if (changes_5 &lt; 0) {\n                        return false;\n                    }\n                    break;\n                case 20:\n                    if (changes_10 &gt;= 1) {\n                        changes_10--;\n                        changes_5 -= 1;\n                    } else {\n                        changes_5 -= 3;\n                    }\n                    if (changes_5 &lt; 0) {\n                        return false;\n                    }\n                    break;\n                default:\n                    return false;\n            }\n        }\n        return true;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day34_Greedy_part04/#406","title":"406.\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day34_Greedy_part04/#_4","title":"\u601d\u8def","text":"<p>\u65e5\u5e38\u7684\u6392\u961f\u5904\u7406\uff0c\u4e00\u4e2a\u4e00\u4e2a\u5730\u786e\u5b9a\u4f4d\u7f6e\u4e5f\u7b97\u4f5c\u662f\u8d2a\u5fc3\u601d\u60f3\u5427\u3002</p> <p>\u770b\u5230\u8fd9\u6837\u4e24\u4e2a\u7ef4\u5ea6people[i]=[hi,ki]\uff0c\u9996\u5148\u5bf9\u8eab\u9ad8hi\u6392\u5e8f\u5f97\u5230\u4e00\u4e2a\u4ece\u4f4e\u5230\u9ad8\u7684\u5e8f\u5217\uff0c\u518d\u5c06\u8fd9\u4e2a\u5e8f\u5217\u4f9d\u7167\u5176\u4e2d\u5bf9\u5e94\u7684ki\u4f9d\u6b21\u786e\u5b9a\u6bcf\u4e2a\u4eba\u7684\u4f4d\u7f6e\uff0c\u8fd9\u79cd\u786e\u5b9a\u8fc7\u7a0b\u662f\u552f\u4e00\u786e\u5b9a\u7684\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day34_Greedy_part04/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"\\[O(n^2),S(1)\\]"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day34_Greedy_part04/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    static bool cmp(const vector&lt;int&gt; &amp;a, const vector&lt;int&gt; &amp;b) {\n        return a[0] &lt; b[0];\n    }\n\n    vector&lt;vector&lt;int&gt;&gt; reconstructQueue(vector&lt;vector&lt;int&gt;&gt; &amp;people) {\n        vector&lt;vector&lt;int&gt;&gt; result(people.size(), {-1, -1});\n        sort(people.begin(), people.end(),cmp);\n        int count = 0;\n        for (auto &amp;it: people) {\n            count = 0;\n            for (auto &amp;it1: result) {\n                if (count &gt;= it[1]) {\n                    if(it1[0]&gt;=0){\n                        continue;\n                    }\n                    it1[0] = it[0];\n                    it1[1] = it[1];\n                    break;\n                }\n                if (it1[0] == -1 || it1[0] == it[0]) {\n                    count++;\n                }\n            }\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day34_Greedy_part04/#452","title":"452.\u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day34_Greedy_part04/#_7","title":"\u601d\u8def","text":"<p>\u4e0epart05\u91cd\u53e0\u533a\u95f4\u7c7b\u4f3c\uff0c\u5728\u6b64\u4e0d\u8d58\u8ff0\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5c04\u51fa\u7684\u6c14\u7403\u5750\u6807\u662f\u5728\u67d0\u4e2a\u6c14\u7403\u533a\u95f4\u7684\u6700\u53f3\u4fa7\uff0c\u8d2a\u5fc3\u7684\u8bc1\u660e\u4e0epart05\u7684\u7c7b\u4f3c\uff0c\u4e0d\u8d58\u8ff0\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day34_Greedy_part04/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"\\[O(nlogn),S(1)\\]"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day34_Greedy_part04/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    static bool cmp(const vector&lt;int&gt; &amp;a, const vector&lt;int&gt; &amp;b) {\n        return a[0] &lt; b[0];\n    }\n\n    int findMinArrowShots(vector&lt;vector&lt;int&gt;&gt; &amp;points) {\n        int result = 0;\n        sort(points.begin(), points.end(), cmp);\n        int overlap_end = points[0][1];\n        for (auto it: points) {\n            if (it[0] &gt; overlap_end) {\n                result++;\n                overlap_end = it[1];\n            } else {\n                // \u6ce8\u610f\u66f4\u65b0overlap_end\n                overlap_end = min(overlap_end, it[1]);\n            }\n        }\n        // \u6ce8\u610f\u5bf9\u6700\u540e\u4e00\u4e2a\u6c14\u7403\u533a\u95f4\u7684\u5c04\u7206\n        return result + 1;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day36_Greedy_part05/","title":"435.\u65e0\u91cd\u53e0\u533a\u95f4","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day36_Greedy_part05/#_1","title":"\u601d\u8def","text":"<p>\u8d2a\u5fc3\u601d\u60f3\u3002\u8d2a\u5fc3\u89e3\u6cd5\u5341\u5206\u5de7\u5999\uff0c\u9996\u5148\u6c42\u51fa\u5c3d\u53ef\u80fd\u591a\u7684\u91cd\u53e0\u533a\u95f4\uff0c\u8fd9\u4e2a\u901a\u8fc7\u5bf9\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u6392\u5e8f\u89e3\u51b3\u3002\u7136\u540e\u5c3d\u53ef\u80fd\u662f\u7684\u4fdd\u7559\u7684\u6240\u6709\u533a\u95f4\u9760\u8fd1\u5de6\u4fa7\uff0c\u5bf9\u4e8e\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u6392\u5e8f\u4e0e\u6b64\u7c7b\u4f3c\uff0c\u89e3\u9898\u601d\u60f3\u53c2\u8003\u81ea\u4ee3\u7801\u968f\u60f3\u5f55\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day36_Greedy_part05/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day36_Greedy_part05/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int eraseOverlapIntervals(vector&lt;vector&lt;int&gt;&gt;&amp; intervals) {\n        if (intervals.empty()) {\n            return 0;\n        }\n\n        sort(intervals.begin(), intervals.end(), [](const auto&amp; u, const auto&amp; v) {\n            return u[1] &lt; v[1];\n        });\n\n        int n = intervals.size();\n        int right = intervals[0][1];\n        int ans = 1;\n        for (int i = 1; i &lt; n; ++i) {\n            if (intervals[i][0] &gt;= right) {\n                ++ans;\n                right = intervals[i][1];\n            }\n        }\n        return n - ans;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day36_Greedy_part05/#763","title":"763.\u5212\u5206\u5b57\u6bcd\u533a\u95f4","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day36_Greedy_part05/#_4","title":"\u601d\u8def","text":"<p>\u8d2a\u5fc3\u601d\u60f3\u3002\u5bb9\u6613\u60f3\u5230\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day36_Greedy_part05/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day36_Greedy_part05/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; partitionLabels(string s) {\n        vector&lt;int&gt; result;\n        vector&lt;int&gt; show_pos(26, 0);\n        for (int i = 0; i &lt; s.size(); i++) {\n            show_pos[s[i] - 'a'] = i;\n        }\n        int min_end = show_pos[s[0] - 'a'];\n        int start = 0;\n        for (int i = 1; i &lt; s.size(); i++) {\n            if (i &gt; min_end) {\n                result.push_back(i - start);\n                min_end = show_pos[s[i]-'a'];\n                start = i;\n            } else {\n                min_end = min_end &gt; show_pos[s[i] - 'a'] ? min_end : show_pos[s[i] - 'a'];\n            }\n        }\n        result.push_back(min_end - start + 1);\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day36_Greedy_part05/#56","title":"56.\u5408\u5e76\u533a\u95f4","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day36_Greedy_part05/#_7","title":"\u601d\u8def","text":"<p>\u8d2a\u5fc3\u6cd5\u3002\u4e0e435\u7c7b\u4f3c\uff0c\u5177\u4f53\u601d\u8def\u89c1\u6e90\u4ee3\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day36_Greedy_part05/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day36_Greedy_part05/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    static bool cmp(const vector&lt;int&gt; &amp;a, const vector&lt;int&gt; &amp;b) {\n        return a[0] &lt; b[0];\n    }\n\n    vector&lt;vector&lt;int&gt;&gt; merge(vector&lt;vector&lt;int&gt;&gt; &amp;intervals) {\n        sort(intervals.begin(), intervals.end(), cmp);\n        vector&lt;vector&lt;int&gt;&gt; result;\n        int max_end = intervals[0][1];\n        int start = intervals[0][0];\n        for (int i = 1; i &lt; intervals.size(); i++) {\n            if (intervals[i][0] &gt; max_end) {\n                result.push_back({start, max_end});\n                start = intervals[i][0];\n                max_end = intervals[i][1];\n            } else {\n                max_end = max_end &gt; intervals[i][1] ? max_end : intervals[i][1];\n            }\n        }\n        result.push_back({start,max_end});\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day36_Greedy_part05/#_10","title":"\u603b\u7ed3","text":"<ul> <li>\u4ee5\u4e0a\u7684\u9898\u76ee\u57fa\u672c\u90fd\u5c5e\u4e8e\u91cd\u53e0\u533a\u95f4\u7684\u9898\u76ee\uff0c\u8fd9\u7c7b\u9898\u76ee\u7684\u89e3\u9898\u601d\u60f3\u6765\u81ea\u4e8e\u65e5\u5e38\u7684\u5c04\u6c14\u7403\uff0c\u5373452.\u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403\uff0c\u90fd\u662f\u5148\u901a\u8fc7\u6392\u5e8f\u662f\u7684\u91cd\u53e0\u7684\u533a\u95f4\u5c3d\u53ef\u80fd\u5728\u4e00\u8d77\uff0c\u518d\u6309\u7167\u8d2a\u5fc3\u601d\u60f3\u505a\u51b3\u7b56\u3002</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day37_Greedy_part06/","title":"738.\u5355\u8c03\u9012\u589e\u7684\u6570\u5b57","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day37_Greedy_part06/#_1","title":"\u601d\u8def","text":"<p>\u627e\u5230\u6570\u5b57num\u6700\u5c0f\u7684\u9700\u8981\u51cf1\u7684\u6570\u4f4d\u7684\u4f4d\u7f6eflag\uff0c\u540e\u9762\u7684\u6570\u4f4d\u90fd\u53ef\u4ee5\u7f6e\u4e3a9\uff0c\u5c5e\u4e8e\u8d2a\u5fc3\u6cd5\u7684\u601d\u60f3\u5427\uff0c\u4f46\u53c8\u597d\u50cf\u5173\u7cfb\u4e0d</p> <p>\u5927</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day37_Greedy_part06/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"\\[O(n),S(1)\\]"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day37_Greedy_part06/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int monotoneIncreasingDigits(int n) {\n        string str = to_string(n);\n        int m = str.length();\n        int flag = m;\n        for (int i = m - 1; i &gt; 0; --i) {\n            if (str[i - 1] &gt; str[i]) {\n                flag = i;\n                str[i - 1]--;\n            }\n        }\n        for (int i = flag; i &lt; m; ++i) {\n            str[i] = '9';\n        }\n        return stoi(str);\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day37_Greedy_part06/#968","title":"968.\u76d1\u63a7\u4e8c\u53c9\u6811","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day37_Greedy_part06/#_4","title":"\u601d\u8def","text":"<p>\u8d2a\u5fc3\u601d\u60f3\u3002\u4ee3\u7801\u968f\u60f3\u5f55\uff0c\u8d2a\u5fc3\u601d\u60f3\u89e3\u51b3\u95ee\u9898\u7684\u521d\u6b65\u63a2\u7d22\uff0c\u8fdb\u800c\u5f97\u51faleetcode\u9898\u89e3\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u652f\u6491\uff0c</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day37_Greedy_part06/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day37_Greedy_part06/#_6","title":"\u6e90\u7801","text":"<pre><code>struct Status {\n// \u72b6\u6001a\uff1aroot \u5fc5\u987b\u653e\u7f6e\u6444\u50cf\u5934\u7684\u60c5\u51b5\u4e0b\uff0c\u8986\u76d6\u6574\u68f5\u6811\u9700\u8981\u7684\u6444\u50cf\u5934\u6570\u76ee\u3002\n// \u72b6\u6001b\uff1a\u8986\u76d6\u6574\u68f5\u6811\u9700\u8981\u7684\u6444\u50cf\u5934\u6570\u76ee\uff0c\u65e0\u8bba root \u662f\u5426\u653e\u7f6e\u6444\u50cf\u5934\u3002\n// \u72b6\u6001c\uff1a\u8986\u76d6\u4e24\u68f5\u5b50\u6811\u9700\u8981\u7684\u6444\u50cf\u5934\u6570\u76ee\uff0c\u65e0\u8bba\u8282\u70b9 root \u672c\u8eab\u662f\u5426\u88ab\u76d1\u63a7\u5230\n    int a, b, c;\n};\n\nclass Solution {\npublic:\n    Status dfs(TreeNode* root) {\n        if (!root) {\n            return {INT_MAX / 2, 0, 0};\n        }\n        auto [la, lb, lc] = dfs(root-&gt;left);\n        auto [ra, rb, rc] = dfs(root-&gt;right);\n        int a = lc + rc + 1;\n        int b = min(a, min(la + rb, ra + lb));\n        int c = min(a, lb + rb);\n        return {a, b, c};\n    }\n\n    int minCameraCover(TreeNode* root) {\n        auto [a, b, c] = dfs(root);\n        return b;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day37_Greedy_part06/#_7","title":"\u603b\u7ed3","text":"<ul> <li>968.\u76d1\u63a7\u4e8c\u53c9\u6811\u7684\u8d2a\u5fc3\u601d\u60f3\u8bbe\u8ba1\u800c\u51fa\u6765\u7684\u72b6\u6001\u8f6c\u79fb\u5f88\u503c\u5f97\u5b66\u4e60\uff0c\u76ee\u524d\u8fd8\u4e0d\u80fd\u5b8c\u5168\u770b\u61c2\uff0c\u8fd9\u4e2a\u7559\u5f85\u540e\u9762\u6709\u65f6\u95f4\u5c31\u770b</li> <li>\u8d2a\u5fc3\u601d\u60f3\u5f88\u591a\u6765\u81ea\u4e8e\u65e5\u5e38\u751f\u6d3b\u5e38\u8bc6\uff0c\u8fd9\u4e2a\u5f88\u91cd\u8981</li> <li>\u5206\u53d1\u7cd6\u679c\u5bf9\u4e8e\u4e24\u6b21\u5206\u53d1\u5341\u5206\u65b0\u9896\uff0c\u4e24\u4e2a\u7ef4\u5ea6\u5206\u522b\u8003\u8651\u518d\u548c\u5728\u4e00\u8d77\u5904\u7406\u6709\u65f6\u5019\u4f1a\u66f4\u52a0\u7b80\u5355</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day38_DP_part01/","title":"509.\u6590\u6ce2\u90a3\u5951\u6570","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day38_DP_part01/#_1","title":"\u601d\u8def","text":"<p>DP\u6cd5\u3002\u5178\u578b\u4e14\u5f88\u7b80\u5355\uff0c\u5728\u6b64\u4e0d\u8d58\u8ff0\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day38_DP_part01/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>n\u4e3aF(n)\u4e2d\u7684n</p> <p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day38_DP_part01/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int fib(int n) {\n        if(n&lt;=0){\n            return 0;\n        }\n        if(n==1){\n            return 1;\n        }\n        int n_1=1;\n        int n_2=0;\n        int result;\n        for(int i=2;i&lt;=n;i++){\n            result=n_1+n_2;\n            n_2=n_1;\n            n_1=result;\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day38_DP_part01/#70","title":"70.\u722c\u697c\u68af","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day38_DP_part01/#_4","title":"\u601d\u8def","text":"<p>DP\u6cd5\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u548c\u72b6\u6001\u4e0e\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e00\u6837\uff0c\u552f\u4e00\u6709\u533a\u522b\u7684\u662f\u8fb9\u754c\u503c\uff0cf(0)=1.</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day38_DP_part01/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day38_DP_part01/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int climbStairs(int n) {\n    // \u6ce8\u610f\u8fd9\u91cc\u4e0e\u6590\u6ce2\u90a3\u5951\u6570\u4e0d\u4e00\u6837\uff0c\u5728\u6590\u6ce2\u90a3\u5951\u6570\u4e2df(0)=0\n        int cur_2=1;\n        int cur_1=1;\n        int result=1;\n        for(int i=2;i&lt;=n;i++){\n            result=cur_1+cur_2;\n            cur_2=cur_1;\n            cur_1=result;\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day38_DP_part01/#746","title":"746.\u4f7f\u7528\u6700\u5c0f\u82b1\u8d39\u722c\u697c\u68af","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day38_DP_part01/#_7","title":"\u601d\u8def","text":"<p>DP\u6cd5\u3002\u7b26\u5408DP\u95ee\u9898\u7684\u7279\u70b9\uff0c\u51b3\u7b56\u6a21\u578b\u3001\u6700\u4f18\u5b50\u7ed3\u6784\u3001\u91cd\u53e0\u95ee\u9898\u7b49\uff0c\u6700\u521d\u60f3\u4f7f\u7528\u8d2a\u5fc3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4ed4\u7ec6\u601d\u8003\u662f\u884c\u4e0d\u901a\u7684\uff0c\u56e0\u4e3a\u6bcf\u6b21\u53ea\u80fd\u8df3\u4e00\u4e2a\u6216\u8005\u4e24\u4e2a\u53f0\u9636\uff0c\u6309\u7167\u6b64\u79cd\u51b3\u7b56\u6a21\u578b\u662f\u4e0d\u884c\u7684\u3002\u72b6\u6001\u8f6c\u79fb\u5f88\u7b80\u5355\u5177\u4f53\u89c1\u4ee3\u7801\uff0c\u5728\u6b64\u4e0d\u8d58\u8ff0\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day38_DP_part01/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\uff0cS(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day38_DP_part01/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int minCostClimbingStairs(vector&lt;int&gt;&amp; cost) {\n        int cur_2=0;\n        int cur_1=0;\n        int cur;\n        for(int i=2;i&lt;=cost.size();i++){\n            cur=min(cur_2+cost[i-2],cur_1+cost[i-1]);\n            cur_2=cur_1;\n            cur_1=cur;\n        }\n        return cur;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day38_DP_part01/#_10","title":"\u603b\u7ed3","text":"<ul> <li> <p>\u52a8\u6001\u89c4\u5212\u89e3\u9898\u6b65\u9aa4\uff1a</p> </li> <li> <p>\u786e\u5b9adp\u6570\u7ec4\uff08dp table\uff09\u4ee5\u53ca\u4e0b\u6807\u7684\u542b\u4e49</p> </li> <li>\u786e\u5b9a\u9012\u63a8\u516c\u5f0f</li> <li>dp\u6570\u7ec4\u5982\u4f55\u521d\u59cb\u5316</li> <li>\u786e\u5b9a\u904d\u5386\u987a\u5e8f</li> <li> <p>\u4e3e\u4f8b\u63a8\u5bfcdp\u6570\u7ec4</p> </li> <li> <p>\u5165\u95e8dp\u95ee\u9898\u7684\u89e3\u51b3</p> </li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day39_DP_part02/","title":"62.\u4e0d\u540c\u7684\u8def\u5f84","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day39_DP_part02/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u5bb9\u6613\u8bc6\u522b\u51fa\u6765\u662f\u52a8\u6001\u89c4\u5212\u7684\u9898\u76ee\uff0c(i,j)\u6307\u673a\u5668\u4eba\u5904\u5728\u4ece\u4e0a\u5f80\u4e0b\u4ece\u5de6\u5f80\u53f3\u7684\u7b2ci\u884c\u7b2cj\u5217\uff0cdp[i][j]\u662f\u6307\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u4e0d\u540c\u7684\u8def\u5f84\u6570\u91cf\uff0c\u90a3\u4e48\u8fd9\u6837\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5f88\u6e05\u695a\u4e86\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\u770b\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u7a7a\u95f4\uff0c\u5c06\u4e8c\u7ef4\u8868\u4f18\u5316\u4e3a\u4e00\u7ef4\u6570\u7ec4\u5373\u53ef\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day39_DP_part02/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n*m),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day39_DP_part02/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int uniquePaths(int m, int n) {\n        // dp[i][j]=dp[i-1][j]+dp[i][j-1]\n        vector&lt;int&gt; dp(n, 0);\n        for (int i = 1; i &lt;= m; i++) {\n            dp[0] = 1;\n            for (int j = 1; j &lt; n; j++) {\n                dp[j] = dp[j] + dp[j - 1];\n            }\n        }\n        return dp[n - 1];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day39_DP_part02/#63ii","title":"63.\u4e0d\u540c\u7684\u8def\u5f84II","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day39_DP_part02/#_4","title":"\u601d\u8def","text":"<p>DP\u6cd5\u3002\u4e0e62.\u4e0d\u540c\u8def\u5f84\u89e3\u7b54\u601d\u8def\u7c7b\u4f3c\uff0c\u7a0d\u5fae\u6709\u4e9b\u6539\u52a8\uff0c\u6ce8\u610f\u4ee3\u7801\u7cbe\u7b80\u7684\u6280\u5de7\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day39_DP_part02/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n*m),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day39_DP_part02/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int uniquePathsWithObstacles(vector&lt;vector&lt;int&gt;&gt; &amp;obstacleGrid) {\n        // dp[i][j]=dp[i-1][j]+dp[i][j-1]\n        int m = obstacleGrid.size();\n        int n = obstacleGrid[0].size();\n        vector&lt;int&gt; dp(n, 0);\n        dp[0] = 1;\n        for (int i = 0; i &lt; m; i++) {\n            if (obstacleGrid[i][0] == 1) {\n                dp[0] = 0;\n            }\n            for (int j = 1; j &lt; n; j++) {\n                if (obstacleGrid[i][j] == 1) {\n                    dp[j] = 0;\n                } else {\n                    dp[j] = dp[j] + dp[j - 1];\n                }\n            }\n        }\n        return dp[n - 1];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day3_LinkedList_part01/","title":"203.\u79fb\u9664\u94fe\u8868\u5143\u7d20","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day3_LinkedList_part01/#_1","title":"\u601d\u8def","text":"<p>\u5229\u7528\u5934\u8282\u70b9\u7b80\u5316\u4ee3\u7801\u64cd\u4f5c\uff0c\u4e0d\u8981\u8282\u7701\u53d8\u91cf\u7684\u4f7f\u7528</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day3_LinkedList_part01/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n):\u5bf9\u94fe\u8868\u626b\u63cf\u4e00\u904d\u3002</p> <p>S(1)\uff1a\u5934\u8282\u70b9\u548c\u51e0\u4e2a\u53d8\u91cf\uff0c\u5e38\u6570\u7a7a\u95f4\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day3_LinkedList_part01/#_3","title":"\u6e90\u7801","text":"<pre><code>/**  \n * Definition for singly-linked list. * struct ListNode { *     int val; *     ListNode *next; *     ListNode() : val(0), next(nullptr) {} *     ListNode(int x) : val(x), next(nullptr) {} *     ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */class Solution {  \npublic:  \n    ListNode* removeElements(ListNode* head, int val) {  \n        if(head==nullptr)return head;  \n        ListNode *pre_head=new ListNode(-1,head);  \n        ListNode *pre=pre_head;  \n        ListNode *cur=head;  \n        ListNode *tmp;  \n        while(cur!=nullptr){  \n            if(cur-&gt;val!=val){  \n                pre=cur;  \n                cur=cur-&gt;next;  \n            }else{  \n                tmp=cur;  \n                cur=cur-&gt;next;  \n                pre-&gt;next=cur;  \n                delete tmp;  \n            }  \n        }  \n        return pre_head-&gt;next;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day3_LinkedList_part01/#707","title":"707.\u8bbe\u8ba1\u94fe\u8868","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day3_LinkedList_part01/#_4","title":"\u601d\u8def","text":"<p>\u6309\u7167\u6807\u51c6\u7684\u94fe\u8868\u8bbe\u8ba1\uff0c\u9664\u4e86\u5934\u8282\u70b9\u4ee5\u5916\u53ef\u4ee5\u9002\u5f53\u52a0\u4e00\u4e9b\u94fe\u8868\u957f\u5ea6\u3001\u5c3e\u8282\u70b9\u7b49\u7b80\u5316\u6216\u8005\u52a0\u5feb\u94fe\u8868\u7684\u64cd\u4f5c\uff0c\u5728\u672c\u9898\u4e2d\u52a0\u4e86\u94fe\u8868\u957f\u5ea6\u6765\u52a0\u901f\u5728\u6307\u5b9a\u4f4d\u7f6e\u5220\u9664\u6216\u589e\u52a0\u5143\u7d20\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day3_LinkedList_part01/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u5c31\u662f\u6807\u51c6\u5355\u94fe\u8868\u7684\u65f6\u95f4\u7a7a\u95f4\u590d\u6742\u5ea6\u5206\u6790\u65b9\u6cd5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day3_LinkedList_part01/#_6","title":"\u6e90\u7801","text":"<pre><code>class MyLinkedList {  \n    typedef struct ListNode {  \n        int val;  \n        ListNode *next;  \n\n        ListNode() {  \n            val = 0;  \n            next = nullptr;  \n        }  \n\n        ListNode(int val, ListNode *next) {  \n            this-&gt;val = val;  \n            this-&gt;next = next;  \n        }  \n    } ListNode;  \nprivate:  \n    ListNode *head;// the head of the MyLinkedList  \n    int length;// the length of the MyLinkedList  \n\npublic:  \n    MyLinkedList() {  \n        head = new ListNode();  \n        length = 0;  \n    }  \n\n    int get(int index) {  \n        int i = 0;  \n        if (index &lt; 0)return -1;  \n\n        ListNode *p = head;  \n        while (p != nullptr &amp;&amp; i &lt;= index) {  \n            p = p-&gt;next;  \n            i++;  \n        }  \n        if (p == nullptr)return -1;  \n        return p-&gt;val;  \n    }  \n\n    void addAtHead(int val) {  \n        ListNode *p = new ListNode(val, head-&gt;next);  \n        head-&gt;next = p;  \n        length++;  \n    }  \n\n    void addAtTail(int val) {  \n        ListNode *node = new ListNode(val, nullptr);  \n        ListNode *p = head;  \n        while (p-&gt;next != nullptr) {  \n            p = p-&gt;next;  \n        }  \n        p-&gt;next = node;  \n        length++;  \n    }  \n\n    void addAtIndex(int index, int val) {  \n        if (index &lt; 0 || index &gt; length)return;  \n\n        int i = 0;  \n        ListNode *p = head;  \n        while (i &lt; index) {  \n            p = p-&gt;next;  \n            i++;  \n        }  \n        ListNode *node = new ListNode(val, p-&gt;next);  \n        p-&gt;next = node;  \n        length++;  \n    }  \n\n    void deleteAtIndex(int index) {  \n        if (index &lt; 0 || index &gt;= length)return;  \n\n        int i = 0;  \n        ListNode *p = head;  \n        while (i &lt; index) {  \n            p = p-&gt;next;  \n            i++;  \n        }  \n        ListNode *tmp = p-&gt;next;  \n        p-&gt;next = tmp-&gt;next;  \n        delete tmp;  \n        length--;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day3_LinkedList_part01/#206","title":"206.\u53cd\u8f6c\u94fe\u8868","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day3_LinkedList_part01/#_7","title":"\u601d\u8def","text":"<p>\u5229\u7528\u5934\u63d2\u6cd5\u548c\u5c3e\u63d2\u6cd5\u7684\u7279\u70b9\uff0c\u5c06\u94fe\u8868\u8282\u70b9\u4f9d\u6b21\u4f7f\u7528\u5934\u63d2\u6cd5\u518d\u6b21\u63d2\u5165\u4ece\u800c\u9006\u8f6c\u539f\u94fe\u8868,\u5e76\u4f7f\u7528\u5934\u8282\u70b9\u7b80\u5316\u64cd\u4f5c</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day3_LinkedList_part01/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day3_LinkedList_part01/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    ListNode* reverseList(ListNode* head) {  \n        ListNode *pre_head=new ListNode();  \n        ListNode *p=head;  \n        while(head!=nullptr){  \n            p=head;  \n            head=head-&gt;next;  \n            p-&gt;next=pre_head-&gt;next;  \n            pre_head-&gt;next=p;  \n        }  \n        return pre_head-&gt;next;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day40_DP_part03/","title":"343.\u6574\u6570\u62c6\u5206","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day40_DP_part03/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1aDP\u3002DP\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(\\(\\(n^2\\)\\))\u5728\u6b64\u4e0d\u8d58\u8ff0\uff0c\u72b6\u6001\u662fi,dp[i]\u8868\u793a\u6570\u5b57i\u7684\u6700\u5927\u62c6\u5206\u4e58\u79ef\uff0c\u5177\u4f53\u89c1leetcode</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u8d2a\u5fc3\u6cd5\u3002\u9700\u8981\u786e\u5b9a\u8d2a\u5fc3\u7684\u7b56\u7565\uff0c\u4e24\u70b9\uff1a\u4ec0\u4e48\u6837\u7684\u6570\u5b57\u5e94\u8be5\u62c6\u5206\uff08\u5927\u4e8e\u6216\u8005\u7b49\u4e8e4\u5e94\u8be5\u62c6\u5206\uff09\uff1b\u5e94\u8be5\u62c6\u5206\u6210\u4ec0\u4e48\u6570\u5b57\uff08\u62c6\u5206\u62103\u6700\u597d\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day40_DP_part03/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8ba1\u7b97\\(\\(pow(3,n/3)\\)\\)\u81f3\u5c11\u9700\u8981logn\u7684\u65f6\u95f4,\u6545\u65f6\u95f4\u590d\u6742\u5ea6\u81f3\u5c11\u4e3aO(logn),\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aS(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day40_DP_part03/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int integerBreak(int n) {\n        if (n &lt;= 3) {\n            return n - 1;\n        }\n        int quotient = n / 3;\n        int remainder = n % 3;\n        if (remainder == 0) {\n            return (int)pow(3, quotient);\n        } else if (remainder == 1) {\n            return (int)pow(3, quotient - 1) * 4;\n        } else {\n            return (int)pow(3, quotient) * 2;\n        }\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day40_DP_part03/#96","title":"96.\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day40_DP_part03/#_4","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u7ecf\u8fc7\u5c1d\u8bd5\u6784\u9020BST\u548c\u601d\u8003\uff0c\u6784\u9020\u5927\u89c4\u6a21\u7684BST\u53ef\u4ee5\u57fa\u4e8e\u6784\u9020\u5c0f\u89c4\u6a21\u7684BST\u5b8c\u6210\uff0c\u8fd9\u5c5e\u4e8e\u5178\u578b\u7684\u52a8\u6001\u89c4\u5212\u9898\u76ee\uff0c\u5177\u4f53\u89c1\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u5148\u53d6\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6811\u6839\uff0c\u6811\u6839\u7684\u5de6\u53f3\u5b50\u6811\u7684BST\u6570\u91cf\u7684\u4e58\u79ef\u5373\u4e3a\u4ee5\u8fd9\u4e2a\u8282\u70b9\u4e3a\u8ddf\u8282\u70b9\u7684\u4e0d\u540cBST\u6811\u7684\u6570\u91cf\u548c\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day40_DP_part03/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(\\(\\(n^2\\)\\)),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day40_DP_part03/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int numTrees(int n) {\n        vector&lt;int&gt; dp(n+1,0);\n        dp[0]=1;\n        for(int i=1;i&lt;=n;i++){\n            for(int j=1;j&lt;=i;j++){\n                dp[i]+=dp[i-j]*dp[j-1];\n            }\n        }\n        return dp[n];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day41_DP_part04/","title":"416.\u5206\u5272\u7b49\u548c\u5b50\u96c6","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day41_DP_part04/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u6b64\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u80cc\u5305\u95ee\u9898\uff0c\u8bbesum\u4e3a\u6570\u7ec4nums\u6240\u6709\u5143\u7d20\u7684\u548c\uff0c\u6b64\u95ee\u9898\u8f6c\u4e3a\u80cc\u5305\u5bb9\u91cf\u4e3asum/2\uff0cnums\u63cf\u8ff0\u7269\u54c1\u91cd\u91cf\uff0c\u5224\u65ad\u80cc\u5305\u7684\u80fd\u88c5\u4e0b\u7684\u6700\u5927\u503c\u662f\u5426\u7b49\u4e8e\u80cc\u5305\u7684\u5bb9\u91cf\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\uff0cdp[i][j]\u8868\u793a\u80cc\u5305\u5bb9\u91cf\u4e3aj\u662f\u5426\u80fd\u591f\u88ab\u524di\u4ef6\u7269\u54c1\u6070\u597d\u88c5\u6ee1;\u7a7a\u95f4\u4f18\u5316\uff0c\u6eda\u52a8\u6570\u7ec4\uff0c\u4ece\u540e\u5f80\u524d\u904d\u5386\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day41_DP_part04/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bben\u4e3anums\u7684\u5927\u5c0f\uff0csum\u4e3anums\u6240\u6709\u5143\u7d20\u7684\u548c</p> <p>O(n*sum),S(sum)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day41_DP_part04/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    bool canPartition(vector&lt;int&gt;&amp; nums) {\n        int sum = 0;\n        for (auto num : nums) {\n            sum += num;\n        }\n        if (sum % 2 != 0) {\n            return false;\n        }\n        int target = sum / 2;\n        vector&lt;bool&gt; dp(target + 1, false);\n        dp[0] = true;\n        for (auto num : nums) {\n            for (int i = target; i &gt;= num; i--) {\n                dp[i] = dp[i] || dp[i - num];\n            }\n        }\n        return dp[target];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day43_DP_part05/","title":"1049.\u6700\u540e\u4e00\u5757\u77f3\u5934\u7684\u91cd\u91cf","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day43_DP_part05/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u5c5e\u4e8e0-1\u80cc\u5305\u7684\u53d8\u79cd\u9898\u76ee\uff0c\u9996\u5148\u5c06stones\u5206\u4e3a\u4e24\u4e2a\u548c\u6700\u63a5\u8fd1\u7684\u5b50\u6570\u7ec4nums1\u548cnums2,\u77f3\u5934\u7684\u7c89\u788e\u8fc7\u7a0b\u7684\u7ed3\u679c\u53ef\u4ee5\u7528\u4e00\u7cfb\u5217\u7684\u52a0\u51cf\u8868\u793a\uff0c\u8fd9\u4e00\u7cfb\u5217\u7684\u52a0\u51cf\u7ed3\u679c\u4e0d\u4f1a\u5c0f\u4e8efabs(sum(nums1)-sum(nums2))\uff0c\u800c\u5982\u679c\u5212\u5206\u51fanums1\u548cnums2,\u5219nums1\u548cnums2\u672c\u8eab\u7ed9\u51fa\u4e86\u4e00\u4e2a\u77f3\u5934\u7684\u7c89\u788e\u987a\u5e8f\uff0c\u6545\u7efc\u4e0a\u6240\u8ff0\u9898\u76ee\u6c42\u7684\u662f\u5c06stones\u5212\u5206\u6210\u548c\u6700\u63a5\u8fd1\u7684\u5b50\u6570\u7ec4\u7684\u548c\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day43_DP_part05/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n*sum),S(sum)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day43_DP_part05/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int lastStoneWeightII(vector&lt;int&gt; &amp;stones) {\n        int sum = 0;\n        for (auto it: stones) {\n            sum += it;\n        }\n        int bag_size = sum / 2;\n        vector&lt;int&gt; dp(bag_size + 1,0);\n\n        for(auto stone:stones){\n            for(int i=bag_size;i&gt;=stone;i--){\n                dp[i]=max(dp[i],dp[i-stone]+stone);\n            }\n        }\n\n        return abs(sum-dp[bag_size]*2);\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day43_DP_part05/#494","title":"494.\u76ee\u6807\u548c","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day43_DP_part05/#_4","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u9996\u5148\u8fd9\u662f\u4e00\u4e2a\u52a8\u6001\u89c4\u5212\u7684\u95ee\u9898\uff0c\u8bc6\u522b\u8fc7\u7a0b\u7701\u7565\u3002\u72b6\u6001\uff08i,j\uff09\u8868\u793anums\u524di\u4e2a\u5143\u7d20\u76ee\u6807\u548c\u4e3aj\u7684\u5408\u6cd5\u6570\u91cf\uff0c\u8f6c\u79fb\u65b9\u7a0b\u89c1\u6e90\u4ee3\u7801\uff0c\u6ce8\u610fj\u7684\u8303\u56f4\u4e3a[-sum,sum]\uff0c\u5176\u4e2dsum\u4e3anums\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u3002</p> <p>\u611f\u89c9\u4f1a\u6709\u4e00\u4e9b\u7684\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u6280\u5de7\uff0c\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u65b9\u6cd5\u89c1\u4ee3\u7801\u968f\u60f3\u5f55\u9898\u89e3\uff0c\u901a\u8fc7\u6c42\u88c5\u6ee1\u5bb9\u91cf\u4e3a(sum-target)/2\u7684\u80cc\u5305\u7684\u88c5\u6cd5\u6570\u91cf\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day43_DP_part05/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bbesum\u4e3anums\u4e2d\u6240\u6709\u5143\u7d20\u7edd\u5bf9\u503c\u7684\u548c\uff0cn\u4e3anums\u7684\u5927\u5c0f\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n*sum),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day43_DP_part05/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int findTargetSumWays(vector&lt;int&gt; &amp;nums, int target) {\n        int sum = 0;\n        for (auto it: nums) {\n            sum += abs(it);\n        }\n        vector&lt;int&gt; pre_dp(2 * sum + 1, 0);\n        vector&lt;int&gt; cur_dp(2 * sum + 1, 0);\n        pre_dp[sum] = 1;\n        for (auto num: nums) {\n            for (int i = 0; i &lt; 2 * sum + 1; i++) {\n                cur_dp[i] = 0;\n                if (i - num &gt;= 0) {\n                    cur_dp[i] += pre_dp[i - num];\n                }\n                if (i + num &lt; 2 * sum + 1) {\n                    cur_dp[i] += pre_dp[i + num];\n                }\n            }\n            pre_dp = cur_dp;\n        }\n        if(target&gt;sum||target&lt;-sum){\n            return 0;\n        }\n        return cur_dp[target + sum];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day43_DP_part05/#474","title":"474.\u4e00\u548c\u96f6","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day43_DP_part05/#_7","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u4e09\u7ef4\u80cc\u5305\u95ee\u9898\uff0c\u6240\u4ee5\u6ca1\u6709\u53ef\u884c\u7684\u8d2a\u5fc3\u89e3\u6cd5\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u89c1\u6e90\u4ee3\u7801\uff0c\u5728\u6b64\u7701\u7565\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day43_DP_part05/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bbel\u4e3astrs\u7684\u957f\u5ea6\uff0cL\u4e3astrs\u6240\u6709\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u548c\uff0cm\u548cn\u5206\u522b\u4e3a\u7ed9\u5b9a\u7684\u4e24\u4e2a\u6574\u6570,\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(lmn+L),\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aS(mn)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day43_DP_part05/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int findMaxForm(vector&lt;string&gt; &amp;strs, int m, int n) {\n        vector&lt;int&gt; count_one(strs.size(), 0);\n        for (int i = 0; i &lt; strs.size(); i++) {\n            for (auto it: strs[i]) {\n                if (it == '1') {\n                    count_one[i]++;\n                }\n            }\n        }\n        vector&lt;vector&lt;int&gt;&gt; dp(m + 1, vector&lt;int&gt;(n + 1, 0));\n        for (int k = 0; k &lt; strs.size(); k++) {\n            int count_zero = (int) strs[k].size() - count_one[k];\n            // dp[i][j][k]=max{dp[i-1][j-count_one][k-count_zero]+1,dp[i-1][j][k]\n            for (int i = m; i &gt;= count_zero; i--) {\n                for (int j = n; j &gt;= count_one[k]; j--) {\n                    dp[i][j] = max(dp[i - count_zero][j - count_one[k]] + 1, dp[i][j]);\n                }\n            }\n        }\n        return dp[m][n];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day43_DP_part05/#_10","title":"\u603b\u7ed3","text":"<ul> <li>\u4e24\u4e2a\u9898\u76ee\u5c5e\u4e8e\u80cc\u5305\u8fd9\u4e00\u7c7b\u7684\u52a8\u6001\u89c4\u5212\u95ee\u9898\uff0c\u8bc6\u522b\u9898\u76ee\u5e94\u8be5\u91c7\u7528\u4ec0\u4e48\u65b9\u6cd5\u505a\u5f88\u91cd\u8981\u3002</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day44_DP_part06/","title":"518.\u96f6\u94b1\u548cII","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day44_DP_part06/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u5c5e\u4e8e\u5b8c\u5168\u80cc\u5305\u8fd9\u7c7b\u95ee\u9898\uff0c\u4e0e0-1\u80cc\u5305\u76f8\u533a\u5206\uff0c\u6ce8\u610f\u5176\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0bdp[i][j]=dp[i-1][j]+dp[i][j-coin]\u4e0e0-1\u80cc\u5305\u7684dp[i][j]=dp[i-1][j]+dp[i-1][j-coin]\u76f8\u533a\u5206\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day44_DP_part06/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(amount*n),S(amount)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day44_DP_part06/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int change(int amount, vector&lt;int&gt; &amp;coins) {\n        vector&lt;long long&gt; dp(amount + 1, 0);\n        dp[0] = 1;\n        for (auto coin: coins) {\n            // dp[i][j]=dp[i-1][j]+dp[i][j-coin]\n            for (int i = 0; i &lt;= amount; i++) {\n                if (i &gt;= coin) {\n                    dp[i] += dp[i - coin];\n                }\n            }\n        }\n        return (int) dp[amount];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day44_DP_part06/#377iv","title":"377.\u7ec4\u5408\u603b\u5408IV","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day44_DP_part06/#_4","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u5c5e\u4e8e\u5b8c\u5168\u80cc\u5305\u7684\u95ee\u9898\uff0c\u4f46\u52a8\u6001\u89c4\u5212\u7684\u8f6c\u79fb\u65b9\u7a0b\u548c\u904d\u5386\u987a\u5e8f\u8fd8\u662f\u6709\u70b9\u96be\u4ee5\u60f3\u5230\uff0c\u89e3\u51b3\u4e86\u6c42\u6392\u5217\u7684\u95ee\u9898\uff0c\u5177\u4f53\u89e3\u51b3\u673a\u5236\u6bd4\u8f83\u65b0\u9896\uff0c\u8fd9\u4e2a\u8bb0\u4f4f\u5373\u53ef\uff0c\u89e3\u7b54\u8fc7\u7a0b\u53ef\u4ee5\u53c2\u89c1leetcode\u89e3\u7b54\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day44_DP_part06/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(target*n),S(target)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day44_DP_part06/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int combinationSum4(vector&lt;int&gt;&amp; nums, int target) {\n        vector&lt;int&gt; dp(target + 1);\n        dp[0] = 1;\n        for (int i = 1; i &lt;= target; i++) {\n            for (int&amp; num : nums) {\n            // \u5982\u679c\u6c42\u7ec4\u5408\u6570\u5c31\u662f\u5916\u5c42for\u5faa\u73af\u904d\u5386\u7269\u54c1\uff0c\u5185\u5c42for\u904d\u5386\u80cc\u5305\u3002\n            // \u5982\u679c\u6c42\u6392\u5217\u6570\u5c31\u662f\u5916\u5c42for\u904d\u5386\u80cc\u5305\uff0c\u5185\u5c42for\u5faa\u73af\u904d\u5386\u7269\u54c1\u3002\n                if (num &lt;= i &amp;&amp; dp[i - num] &lt;= INT_MAX - dp[i]) {\n                // num\u4f5c\u4e3adp[i-num]\u7684\u6240\u6709\u6392\u5217\u540e\u7684\u52a0num\u5f62\u6210\u5168\u65b0\u7684\u6392\u5217\n                // dp[i][j]=dp[i][j-num]+dp[i-1]\n                    dp[i] += dp[i - num];\n                }\n            }\n        }\n        return dp[target];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day44_DP_part06/#_7","title":"\u603b\u7ed3\uff1a","text":"<ul> <li>\u5173\u4e8e\u5b8c\u5168\u80cc\u5305\u95ee\u9898\uff0c\u6c42\u6392\u5217\u548c\u7ec4\u5408\u7684\u533a\u522b\u89c1377.\u7ec4\u5408\u603b\u548c\uff1a \u5982\u679c\u6c42\u7ec4\u5408\u6570\u5c31\u662f\u5916\u5c42for\u5faa\u73af\u904d\u5386\u7269\u54c1\uff0c\u5185\u5c42for\u904d\u5386\u80cc\u5305\uff1b \u5982\u679c\u6c42\u6392\u5217\u6570\u5c31\u662f\u5916\u5c42for\u904d\u5386\u80cc\u5305\uff0c\u5185\u5c42for\u5faa\u73af\u904d\u5386\u7269\u54c1\u3002\u7279\u522b\u9700\u8981\u6ce8\u610f\u6c42\u6392\u5217\u7684\u601d\u60f3\uff0c\u5c06num\u653e\u5728\u5b50\u6392\u5217\u7684\u540e\u9762\u5f97\u5230\u65b0\u7684\u6392\u5217,dp[i]\u4e3a\u6240\u6709\u7684dp[i-num]\u4e4b\u548c\uff0c\u5bf9\u4e8e\u4efb\u610fnum\u5c5e\u4e8enums</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day45_DP_part07/","title":"70.\u722c\u697c\u68af","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day45_DP_part07/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u65b9\u6cd5\u4e00\u662f\u6700\u5e38\u89c1\u7684\u65b9\u6cd5\uff0cdp[i]\u4e3a\u722c\u5230\u7b2ci\u9636\u697c\u68af\u7684\u722c\u6cd5\u6570\u91cf\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff0c\u8f6c\u5316\u4e3a\u5b8c\u5168\u80cc\u5305\u95ee\u9898\uff0c\u8bbenums={1,2}\uff0cdp[i][j]\u4e3a\u4f7f\u7528nums\u7684\u524dj\u79cd\u722c\u6cd5\u722c\u5230\u7b2ci\u9636\u697c\u68af\u7684\u722c\u6cd5\u6570\u91cf\u3002</p> <p>\u672c\u6b21\u91c7\u7528\u65b9\u6cd5\u4e8c\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day45_DP_part07/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day45_DP_part07/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int climbStairs(int n) {\n        vector&lt;int&gt; nums{1, 2};\n        vector&lt;int&gt; dp(n + 1, 0);\n        dp[0] = 1;\n        for (int i = 1; i &lt;= n; i++) {\n            for (auto num: nums) {\n                if (num &lt;= i) {\n                    dp[i] += dp[i - num];\n                }\n            }\n        }\n\n        return dp[n];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day45_DP_part07/#322","title":"322.\u96f6\u94b1\u5151\u6362","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day45_DP_part07/#_4","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u5c5e\u4e8e\u5b8c\u5168\u80cc\u5305\u4e4b\u7c7b\u7684\u95ee\u9898\uff0c\u89e3\u9898\u601d\u8def\u7701\u7565\uff0c\u4e0e\u524d\u9762\u51e0\u4e2a\u9898\u76ee\u7684\u89e3\u9898\u601d\u8def\u4e00\u6837\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day45_DP_part07/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(amount*n),S(amount)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day45_DP_part07/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int coinChange(vector&lt;int&gt; &amp;coins, int amount) {\n        const int INFIN = 10E4 + 1;\n        vector&lt;int&gt; dp(amount + 1, INFIN);\n        dp[0] = 0;\n        // dp[i][j]=min{dp[i-1][j],dp[i][j-coin]+1}\n\n        for (auto coin: coins) {\n            for (int i = 1; i &lt;= amount; i++) {\n                if (i &gt;= coin) {\n                    dp[i] = min(dp[i], dp[i - coin] + 1);\n                }\n            }\n        }\n\n        if (dp[amount] &gt;= INFIN) {\n            return -1;\n        }\n        return dp[amount];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day45_DP_part07/#279","title":"279.\u5b8c\u5168\u5e73\u65b9\u6570","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day45_DP_part07/#_7","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u5b8c\u5168\u80cc\u5305\uff0c\u4e0e322.\u96f6\u94b1\u5151\u6362\u4e00\u6837\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day45_DP_part07/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(\\(\\(n^{3/2}\\)\\)),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day45_DP_part07/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int numSquares(int n) {\n        const int INFI = 10e4 + 1;\n        vector&lt;int&gt; nums;\n        for (int i = 1; i * i &lt;= n; i++) {\n            nums.push_back(i * i);\n        }\n\n        vector&lt;int&gt; dp(n + 1, INFI);\n        dp[0] = 0;\n        for (auto num: nums) {\n            for (int i = 1; i &lt;= n; i++) {\n                if (i &gt;= num) {\n                    dp[i] = min(dp[i], dp[i - num] + 1);\n                }\n            }\n        }\n        return dp[n];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day46_DP_part08/","title":"139.\u5355\u8bcd\u62c6\u5206","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day46_DP_part08/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u5b8c\u5168\u80cc\u5305\u7684\u6c42\u6392\u5217\u95ee\u9898\uff0c\u53ef\u4ee5\u53c2\u8003337.\u7ec4\u5408\u603b\u548c\u7684\u601d\u8def\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day46_DP_part08/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bbem\u4e3as\u7684\u957f\u5ea6\uff0cn\u4e3awordDict\u7684\u957f\u5ea6\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4fbf\u4e8e\u8ba1\u7b97\uff0c\u56e0\u4e3a\u9700\u8981\u6bd4\u8f83wordDict\u4e2d\u7684\u5355\u8bcd\u662f\u5426\u4e0es\u7684\u90e8\u5206\u76f8\u5339\u914d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4fbf\u8ba1\u7b97\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(m)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day46_DP_part08/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    bool wordBreak(string s, vector&lt;string&gt; &amp;wordDict) {\n        int len=s.size();\n        vector&lt;bool&gt; dp(len+1, false);\n        dp[0] = true;\n        for(int i=0;i&lt;=len;i++){\n            for(auto &amp;word:wordDict){\n                // dp[i][j]=dp[i-1][j]+dp[\n                if(i&gt;=word.size()&amp;&amp;s.substr(i-word.size(),word.size())==word){\n                    dp[i]=dp[i-word.size()]||dp[i];\n                }\n            }\n        }\n        return dp[len];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day46_DP_part08/#_4","title":"\u603b\u7ed3","text":"<ul> <li>\u80cc\u5305\u7c7b\u95ee\u9898\u7684\u8bc6\u522b\uff0c0-1\u80cc\u5305\u3001\u5b8c\u5168\u80cc\u5305\u3001\u591a\u91cd\u80cc\u5305\uff0c\u4ee5\u53ca\u4ece\u5b8c\u5168\u80cc\u5305\u884d\u751f\u51fa\u6765\u7684\u6c42\u6392\u5217\u7684\u9898\u76ee\uff0c\u4f8b\u5982377.\u7ec4\u5408\u603b\u548c\u300170.\u722c\u697c\u68af\u7684\u5b8c\u5168\u80cc\u5305\u89e3\u6cd5\u7b49</li> <li>\u6ce8\u610f\u5148\u662f\u5b8c\u6574\u7684dp\u8868\uff0c\u518d\u8003\u8651\u7a7a\u95f4\u4f18\u5316\uff0cdp\u7684\u5408\u6cd5\u6027\u4ece\u6570\u5b66\u5f52\u7eb3\u6cd5\u5f97\u5230\u652f\u6491</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day47_DP_part09/","title":"198.\u6253\u5bb6\u52ab\u820d","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day47_DP_part09/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u9898\u76ee\u5206\u6790\uff1a\u72b6\u6001\u5e94\u8be5\u662fnums\u4e2d\u7684\u4e0b\u6807i,\u51b3\u7b56\u8fc7\u7a0b\u4e3a\u662f\u5426\u6253\u52abnums[i]\uff0c\u7531\u4e8e\u662f\u5426\u80fd\u6253\u52abi\u4e0e\u662f\u5426\u6253\u52abi-1\u6709\u5173\uff0c\u6545\u7ecf\u8fc7\u53d1\u6563\u601d\u7ef4\u5f97\u5230\u4e24\u79cd\u65b9\u6cd5\uff0c\u5176\u4e2d\u4e00\u79cd\u65b9\u6cd5\u53c2\u8003leetcode\u3002</p> <p>\u65b9\u6cd5\u4e00\uff1adp[i]\u4ee5nums[i]\u4e3a\u6700\u540e\u4e00\u5bb6\u6253\u52ab\u5bf9\u8c61\u7684\u6700\u5927\u7684\u62a2\u52ab\u91d1\u989d\u7684\u548c\uff0c\u4e14dp[i]=max(dp[i-2],dp[i-3])+nums[i]\u3002\u7a7a\u95f4\u5e94\u8be5\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u4f46\u4f18\u5316\u5c06\u4f1a\u5bfc\u81f4\u4ee3\u7801\u7f16\u5199\u9ebb\u70e6\uff0c\u4ee3\u7801\u7684\u7ed3\u6784\u4e5f\u5bb9\u6613\u6df7\u4e71\uff0c\u6545\u4e0d\u8fdb\u884c\u4f18\u5316\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1adp[i]\u4e3a\u5077\u524dk\u95f4\u623f\u5b50\u7684\u6700\u5927\u7a83\u53d6\u91d1\u989d\uff0c\u5219dp[i]=max{dp[i-1],dp[i-2]+nums[i]}</p> <p>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u66f4\u597d\uff0c\u601d\u8003\u7684\u65f6\u5019\u6700\u5148\u60f3\u5230\u7684\u662f\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u4f46\u4ee5\u4e3a\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u7684\u8f6c\u79fb\u65b9\u7a0b\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u5b9e\u8d28\u4e0a\u8fd8\u662f\u7f3a\u4e4f\u5bf9\u8f6c\u79fb\u65b9\u7a0b\u7684\u5b9a\u4e49\u548c\u6570\u5b66\u5f52\u7eb3\u6cd5\u7684\u601d\u8003\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day47_DP_part09/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bben\u4e3anums\u7684\u957f\u5ea6</p> <p>O(n)\uff0cS(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day47_DP_part09/#_3","title":"\u6e90\u7801","text":"<p>\u65b9\u6cd5\u4e00\uff1a</p> <pre><code>class Solution {\npublic:\n    int rob(vector&lt;int&gt;&amp; nums) {\n        if(nums.size()==1){\n            return nums[0];\n        }\n        if(nums.size()==2){\n            return max(nums[0],nums[1]);\n        }\n\n        vector&lt;int&gt; dp(nums.size(),0);\n        dp[0]=nums[0];\n        dp[1]=nums[1];\n        dp[2]=nums[2]+nums[0];\n        for(int i=3;i&lt;nums.size();i++){\n            dp[i]=max(dp[i-2],dp[i-3])+nums[i];\n        }\n        return max(dp[nums.size()-1],dp[nums.size()-2]);\n    }\n};  \n</code></pre> <p>\u65b9\u6cd5\u4e8c</p> <pre><code>class Solution {\npublic:\n    int rob(vector&lt;int&gt;&amp; nums) {\n        if(nums.size()==1){\n            return nums[0];\n        }\n        vector&lt;int&gt; dp(nums.size(),0);\n        dp[0]=nums[0];\n        dp[1]=max(nums[0],nums[1]);\n        for(int i=2;i&lt;nums.size();i++){\n            dp[i]=max(dp[i-1],dp[i-2]+nums[i]);\n        }\n        return dp[nums.size()-1];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day47_DP_part09/#213ii","title":"213.\u6253\u5bb6\u52ab\u820dII","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day47_DP_part09/#_4","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u6539\u7f16\u81ea198.\u5927\u5bb6\u52ab\u820d\u7684\u65b9\u6cd5\u4e8c\uff08\u5373\u4e0a\u4e00\u4e2a\u9898\u76ee\uff09\uff0c\u5148\u6c42\u51fa\u6253\u52ab\u524dn-1\u5bb6\u7684\u6700\u5927\u91d1\u989d\uff0c\u518d\u6c42\u51fa\u6253\u52ab\u540en-1\u5bb6\u7684\u6700\u5927\u91d1\u989d\uff0c\u4e24\u8005\u7684\u6700\u5927\u503c\u5373\u5f97\u5230\u7b54\u6848\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day47_DP_part09/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)(\u6700\u597d\u5230\u8fbeS(1))</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day47_DP_part09/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int rob(vector&lt;int&gt; &amp;nums) {\n        if (nums.size() == 1) {\n            return nums[0];\n        }\n        vector&lt;int&gt; dp(nums.size(), 0);\n        dp[0] = nums[0];\n        dp[1] = max(nums[0], nums[1]);\n        for (int i = 2; i &lt; nums.size() - 1; i++) {\n            dp[i] = max(dp[i - 1], dp[i - 2] + nums[i]);\n        }\n\n        int max_1 = dp[nums.size() - 2];\n        dp[0] = 0;\n        dp[1] = nums[1];\n        for (int i = 2; i &lt; nums.size(); i++) {\n            dp[i] = max(dp[i - 1], dp[i - 2] + nums[i]);\n        }\n\n        return max(dp[nums.size() - 1], max_1);\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day47_DP_part09/#337iii","title":"337.\u6253\u5bb6\u52ab\u820dIII","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day47_DP_part09/#_7","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u8ddf968.\u76d1\u63a7\u4e8c\u53c9\u6811\u6709\u4e9b\u7c7b\u4f3c\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7c7b\u4f3c\uff0c\u4f46\u8fd9\u4e2a\u9898\u76ee\u66f4\u52a0\u7b80\u5355\uff0c\u9996\u5148\u8fd9\u4e2a\u5e94\u8be5\u662f\u4e00\u4e2adp\u95ee\u9898\uff0c\u5b50\u95ee\u9898\u662f\u5176\u5de6\u53f3\u5b50\u6811\uff0c\u7531\u4e8e\u76f8\u90bb\u7684\u8282\u70b9\u4e0d\u80fd\u88ab\u540c\u65f6\u62a2\u52ab\uff0c\u6545\u6709\u4e09\u4e2a\u72b6\u6001\u9700\u8981\u4e0d\u65ad\u8f6c\u79fb\uff0c\u5177\u4f53\u7684\u72b6\u6001\u8bf4\u660e\u548c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u89c1\u6e90\u4ee3\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day47_DP_part09/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\uff0cS(h),\u5176\u4e2dh\u662f\u6811\u7684\u9ad8\u5ea6\uff0cn\u662f\u6811\u7684\u8282\u70b9\u4e2a\u6570\u548c\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day47_DP_part09/#_9","title":"\u6e90\u7801","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    struct State {\n        // \u52ab\u6301\u6839\u8282\u70b9\u7684\u6700\u5927\u62a2\u52ab\u91d1\u989d\n        int root{0};\n        // \u52ab\u6301\u6574\u4e2aleft\u5b50\u6811\u7684\u6700\u5927\u62a2\u52ab\u91d1\u989d\n        int left{0};\n        // \u52ab\u6301\u6574\u4e2aright\u5b50\u6811\u7684\u6700\u5927\u62a2\u52ab\u91d1\u989d\n        int right{0};\n    };\n\n    int rob(TreeNode *root) {\n        State result = dfs(root);\n        return max(result.root, result.left + result.right);\n    }\n\nprivate:\n    State dfs(TreeNode *root) {\n        if (root == nullptr) {\n            return {0, 0, 0};\n        }\n        State state_l = dfs(root-&gt;left);\n        State state_r = dfs(root-&gt;right);\n        State max_root;\n        max_root.left = max(state_l.root, state_l.left + state_l.right);\n        max_root.right = max(state_r.root, state_r.right + state_r.left);\n        max_root.root = max(state_l.left + state_l.right + state_r.left + state_r.right + root-&gt;val,\n                            state_l.root + state_r.root);\n        return max_root;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day47_DP_part09/#_10","title":"\u603b\u7ed3","text":"<ul> <li>337.\u6253\u5bb6\u52ab\u820dIII\u4e0e968.\u76d1\u63a7\u4e8c\u53c9\u6811\u5173\u4e8e\u72b6\u6001\u7684\u8bbe\u8ba1\u5341\u5206\u7c7b\u4f3c</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day48_DP_part10/","title":"121.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day48_DP_part10/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u8d2a\u5fc3\u6cd5\u3002\u8d2a\u5fc3\u6cd5\u5df2\u5728\u8d2a\u5fc3\u7ae0\u8282\u505a\u8fc7\uff0c\u5728\u6b64\u4e0d\u8d58\u8ff0\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u52a8\u6001\u89c4\u5212\u3002\u9002\u5408\u80a1\u7968\u7c7b\u95ee\u9898\u7684\u4e00\u822c\u6027\u7684\u52a8\u6001\u89c4\u5212\u89e3\u9898\u601d\u8def\uff0cdp[i][0]\u8868\u793a\u7b2ci\u5929\u6301\u6709\u80a1\u7968\u6240\u5f97\u6700\u591a\u73b0\u91d1,dp[i][1] \u8868\u793a\u7b2ci\u5929\u4e0d\u6301\u6709\u80a1\u7968\u6240\u5f97\u6700\u591a\u73b0\u91d1\u3002dp\u8868\u7684\u8bbe\u8ba1\u6293\u4f4f\u4e86\u80a1\u7968\u4e70\u5356\u7684\u672c\u8d28\uff0c\u8fd9\u4e2a\u8981\u6ce8\u610f\u3002</p> <p>\u672c\u9898\u91c7\u7528\u65b9\u6cd5\u4e8c\u89e3\u51b3\u95ee\u9898\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day48_DP_part10/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day48_DP_part10/#_3","title":"\u6e90\u7801","text":"<pre><code>// \u7248\u672c\u4e00\nclass Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; prices) {\n        int len = prices.size();\n        if (len == 0) return 0;\n        vector&lt;vector&lt;int&gt;&gt; dp(len, vector&lt;int&gt;(2));\n        dp[0][0] -= prices[0];\n        dp[0][1] = 0;\n        for (int i = 1; i &lt; len; i++) {\n            dp[i][0] = max(dp[i - 1][0], -prices[i]);\n            dp[i][1] = max(dp[i - 1][1], prices[i] + dp[i - 1][0]);\n        }\n        return dp[len - 1][1];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day48_DP_part10/#122ii","title":"122.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673aII","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day48_DP_part10/#_4","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u8d2a\u5fc3\u3002\u8d2a\u5fc3\u89e3\u6cd5\u5728\u8d2a\u5fc3\u7ae0\u8282\u5df2\u4ecb\u7ecd\uff0c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u52a8\u6001\u89c4\u5212\u3002\u4e0e121.\u4e70\u5356\u80a1\u7968\u7c7b\u4f3c\uff0cdp\u8868\u548c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5341\u5206\u7c7b\u4f3c\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day48_DP_part10/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)(\u7a7a\u95f4\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u81f3O(1))</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day48_DP_part10/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt; &amp;prices) {\n        int len = (int) prices.size();\n        if (len &lt; 1) {\n            return 0;\n        }\n        // dp[i][0]\u8868\u793a\u7b2ci\u5929\u6301\u6709\u80a1\u7968\u7684\u6700\u5927\u503c,dp[i][0]=max(dp[i-1][1]-nums[i],dp[i-1][0])\n        // dp[i][1]\u8868\u793a\u7b2ci\u5929\u4e0d\u6301\u6709\u80a1\u7968\u7684\u6700\u5927\u503c,dp[i][1]=max(dp[i-1][1],dp[i-1][0]+nums[i])\n        vector&lt;vector&lt;int&gt;&gt; dp(len, vector&lt;int&gt;(2, 0));\n        dp[0][0] = -prices[0];\n        dp[0][1] = 0;\n        for (int i = 1; i &lt; len; i++) {\n            dp[i][0] = max(dp[i - 1][1] - prices[i], dp[i - 1][0]);\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0] + prices[i]);\n        }\n\n        return dp[len - 1][1];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day48_DP_part10/#_7","title":"\u603b\u7ed3","text":"<ul> <li>\u6ce8\u610f\u80a1\u7968\u4e70\u5356\u7684DP\u8868\u7684\u8bbe\u8ba1</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/","title":"24 \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#_1","title":"\u601d\u8def","text":"<p>\u7b80\u5355\u7684\u904d\u5386\u94fe\u8868\uff0c\u4e24\u4e2a\u4e24\u4e2a\u7684\u904d\u5386\uff0c\u6bcf\u4e24\u4e2a\u4e92\u76f8\u4ea4\u6362\uff0c\u4f7f\u7528\u8282\u70b9\u6307\u9488\u8bb0\u4f4f\u94fe\u8868\u7684\u4f4d\u7f6e\u4fe1\u606f\uff0c\u8fd9\u4e2a\u5f88\u91cd\u8981\uff0c\u9632\u6b62\u65ad\u94fe\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    ListNode* swapPairs(ListNode* head) {  \n        ListNode* pre_head=new ListNode(0,head);  \n        if(head==nullptr)return pre_head-&gt;next;  \n        ListNode* pre_first=pre_head;  \n        ListNode* first=head;  \n        ListNode* second=head-&gt;next;  \n        ListNode* tmp;  \n        while(second!=nullptr){  \n            tmp=second-&gt;next;  \n            pre_first-&gt;next=second;  \n            second-&gt;next=first;  \n            first-&gt;next=tmp;  \n\n            // update the value of pre_first,first,second  \n            pre_first=first;  \n            first=tmp;  \n            if(first==nullptr){  \n                second=nullptr;  \n            }else{  \n                second=first-&gt;next;  \n            }  \n        }  \n        return pre_head-&gt;next;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#19n","title":"19.\u79fb\u9664\u94fe\u8868\u7684\u6700\u540e\u7b2cn\u4e2a\u8282\u70b9","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#_4","title":"\u601d\u8def","text":"<p>\u4e00\u8d9f\u904d\u5386\uff0c\u4f7f\u7528\u53cc\u6307\u9488\u627e\u5230\u76ee\u6807\u8282\u70b9\u7684\u524d\u9a71\u8282\u70b9\uff0c\u7406\u6e05\u5feb\u6307\u9488\u9700\u8981\u9886\u5148\u6162\u6307\u9488\u591a\u5c11\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\uff1a\u4e00\u8d9f\u626b\u63cf S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    ListNode* removeNthFromEnd(ListNode* head, int n) {  \n        ListNode *pre_head=new ListNode(0,head);  \n        ListNode *p1=pre_head;  \n        // point to the precursor node of the target node  \n        ListNode *p2=pre_head;  \n        for(int i=0;i&lt;=n;i++){  \n            p1=p1-&gt;next;  \n        }  \n        while(p1!=nullptr){  \n            p1=p1-&gt;next;  \n            p2=p2-&gt;next;  \n        }  \n        p1=p2-&gt;next;  \n        p2-&gt;next=p1-&gt;next;  \n        delete p1;  \n        return pre_head-&gt;next;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#0207","title":"\u9762\u8bd5\u9898 02.07.\u94fe\u8868\u76f8\u4ea4","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#_7","title":"\u601d\u8def","text":"<p>\u4f7f\u7528\u5feb\u6162\u6307\u9488\u5728O(n+m)\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u627e\u5230\u516c\u5171\u7684\u8d77\u59cb\u8282\u70b9\uff0c\u5148\u8ba1\u7b97\u7684\u51fa\u94fe\u8868A\u548cB \u7684\u957f\u5ea6\uff0c\u4f9d\u6b21\u957f\u5ea6\u8bbe\u7f6e\u5feb\u6162\u6307\u9488\uff0c\u518d\u6bd4\u8f83\u5feb\u6162\u6307\u9488\u662f\u5426\u76f8\u7b49\u627e\u5230\u8d77\u59cb\u8282\u70b9\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n+m)\uff1a\u5206\u522b\u626b\u63cf\u4e24\u4e2a\u94fe\u8868\u5404\u4e24\u8d9f S(1)\uff1a</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {  \n        int len_a=0;  \n        int len_b=0;  \n        ListNode *p_a=headA;  \n        ListNode *p_b=headB;  \n        while(p_a!=nullptr){  \n            len_a++;  \n            p_a=p_a-&gt;next;  \n        }  \n        while(p_b!=nullptr){  \n            len_b++;  \n            p_b=p_b-&gt;next;  \n        }  \n\n        p_a=headA;  \n        p_b=headB;  \n        if(len_a&gt;len_b){  \n            for(int i=0;i&lt;len_a-len_b;i++){  \n                p_a=p_a-&gt;next;  \n            }  \n        }else{  \n            for(int i=0;i&lt;len_b-len_a;i++){  \n                p_b=p_b-&gt;next;  \n            }  \n        }  \n\n        while(p_a!=nullptr&amp;&amp;p_b!=nullptr){  \n            if(p_a==p_b)return p_a;  \n            p_a=p_a-&gt;next;  \n            p_b=p_b-&gt;next;  \n        }  \n        return nullptr;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#142-ii","title":"142 \u73af\u5f62\u94fe\u8868 II","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#_10","title":"\u601d\u8def","text":"<p>\u5f53\u65f6\u6ca1\u6709\u505a\u51fa\u6765\uff0c\u8bbe\u7f6e\u5feb\u6162\u6307\u9488\uff0c\u5229\u7528\u6570\u5b66\u63a8\u7406\uff0c\u5f97\u5230\u73af\u7684\u5165\u53e3\u8282\u70b9</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#_11","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n) S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day4_LinkedList_part02/#_12","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    ListNode *detectCycle(ListNode *head) {  \n        ListNode* pre_head=new ListNode(0,head);  \n        ListNode *fast=pre_head;  \n        ListNode *slow=pre_head;  \n        while(fast!=nullptr&amp;&amp;slow!=nullptr){  \n            slow=slow-&gt;next;  \n            fast=fast-&gt;next;  \n            if(fast==nullptr)return nullptr;  \n            fast=fast-&gt;next;  \n            if(fast==slow)break;  \n        }  \n        if(fast!=slow)return nullptr;  \n        // \u5fc5\u7136\u4f1a\u5b58\u5728\u73af  \n        fast=pre_head;  \n        while(fast!=slow){  \n            fast=fast-&gt;next;  \n            slow=slow-&gt;next;  \n        }  \n        return slow;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day50_DP_part11/","title":"123.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673aIII","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day50_DP_part11/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u5c5e\u4e8e\u80a1\u7968\u4e70\u5356\u8fd9\u4e00\u7c7b\u95ee\u9898\uff0c\u72b6\u6001\u5b9a\u4e49\u4e0e\u72b6\u6001\u8f6c\u79fb\u4e0e121.\u80a1\u7968\u4e70\u5356\u7c7b\u4f3c\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day50_DP_part11/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)(\u53ef\u4ee5\u4f18\u5316\u81f3O(1))</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day50_DP_part11/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt; &amp;prices) {\n        int len = (int) prices.size();\n        if (len &lt; 1) {\n            return 0;\n        }\n        // dp[i][0]\u8868\u793a\u4e70\u4e86\u7b2c\u4e00\u652f\u80a1\u7968\u7684\u6700\u5927\u503c\n        // dp[i][1]\u8868\u793a\u5b8c\u6210\u7b2c\u4e00\u7b14\u4ea4\u6613\u7684\u6700\u5927\u503c\n        // dp[i][2]\u8868\u793a\u4e70\u4e86\u7b2c\u4e8c\u652f\u80a1\u7968\u7684\u6700\u5927\u503c\n        // dp[i][3]\u8868\u793a\u5b8c\u6210\u7b2c\u4e8c\u7b14\u80a1\u7968\u4ea4\u6613\u7684\u6700\u5927\u503c\n        vector&lt;vector&lt;int&gt;&gt; dp(len, vector&lt;int&gt;(4, 0));\n        dp[0][0] = -prices[0];\n        // \u4e70\u5165\u53c8\u5356\u51fa\n        dp[0][1] = 0;\n        // \u4e70\u5165\u3001\u5356\u51fa\u3001\u4e70\u5165\n        dp[0][2] = -prices[0];\n        // \u4e70\u5165\u3001\u5356\u51fa\u3001\u4e70\u5165\u3001\u5356\u51fa\n        dp[0][3] = 0;\n        for (int i = 1; i &lt; len; i++) {\n            // \u4ee5\u4e0b\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5305\u62ec\u5f53\u5929\u4e70\u5165\u3001\u5356\u51fa\u7684\u60c5\u51b5\n            dp[i][0] = max(dp[i - 1][0], -prices[i]);\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0] + prices[i]);\n            dp[i][2] = max(dp[i - 1][2], dp[i - 1][1] - prices[i]);\n            dp[i][3] = max(dp[i - 1][3], dp[i - 1][2] + prices[i]);\n        }\n        return max(dp[len - 1][3], dp[len - 1][1]);\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day50_DP_part11/#188iv","title":"188.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673aIV","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day50_DP_part11/#_4","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u662f123.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673aIII\u7684\u63a8\u5e7f\uff0c\u89e3\u6cd5\u4e5f\u662f\u9898123\u7684\u89e3\u6cd5\u7684\u4e00\u822c\u5316,\u5177\u4f53\u89e3\u6cd5\u89c1\u6e90\u4ee3\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day50_DP_part11/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(nk)\uff0cS(nk)(\u7a7a\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u81f3O(k))</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day50_DP_part11/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int maxProfit(int k, vector&lt;int&gt; &amp;prices) {\n        int len = (int) prices.size();\n        int result = 0;\n        if (len &lt; 1) {\n            return 0;\n        }\n        // dp[i][j]\uff1a\u5982\u679cj\u4e3a\u8d1f\u6570\u5219\u8868\u793a\u4e70\u4e86\u7b2c\u4e00\u652f\u80a1\u7968\u7684\u6700\u5927\u503c;\u5982\u679cj\u4e3a\u5076\u6570\u8868\u793a\u5b8c\u6210\u7b2c\u4e00\u7b14\u4ea4\u6613\u7684\u6700\u5927\u503c\n        vector&lt;vector&lt;int&gt;&gt; dp(len, vector&lt;int&gt;(2 * k, 0));\n        for (int i = 0; i &lt; k; i++) {\n            dp[0][2 * i] = -prices[0];\n        }\n        for (int i = 1; i &lt; len; i++) {\n            // \u4ee5\u4e0b\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5305\u62ec\u5f53\u5929\u4e70\u5165\u3001\u5356\u51fa\u7684\u60c5\u51b5\n            dp[i][0] = max(dp[i - 1][0], -prices[i]);\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0] + prices[i]);\n            for (int j = 1; j &lt; k; j++) {\n                dp[i][2 * j] = max(dp[i - 1][2 * j], dp[i - 1][2 * j - 1] - prices[i]);\n                dp[i][2 * j + 1] = max(dp[i - 1][2 * j + 1], dp[i - 1][2 * j] + prices[i]);\n            }\n        }\n        for (int i = 0; i &lt; k; i++) {\n            result = max(dp[len - 1][2 * i + 1], result);\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day50_DP_part11/#_7","title":"\u603b\u7ed3","text":"<ul> <li>\u6ce8\u610f188.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673aIV\u4e2d\u4e70\u5356k\u7b14\u4ea4\u6613\u7684\u89e3\u6cd5\uff0ck\u4e3a2\u65f6\u5c31\u4e3a123\u7684\u89e3\u6cd5\uff0ck\u4e3an\u65f6\u5c31\u662f122.\u4e70\u5356\u80a1\u7968II\u7684\u89e3\u6cd5\u3002</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day51_DP_part12/","title":"309.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day51_DP_part12/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u5c5e\u4e8e\u4e70\u5356\u80a1\u7968\u8fd9\u7c7b\u95ee\u9898\uff0c\u72b6\u6001\u5728122.\u4e70\u5356\u80a1\u7968\u4e0a\u8fdb\u884c\u53d8\u5316\uff0c\u5171\u8ba1\u4e09\u79cd\u3002\u5177\u4f53\u89c1\u6e90\u4ee3\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day51_DP_part12/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day51_DP_part12/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; prices) {\n        int len=(int)prices.size();\n        if(len&lt;1){\n            return 0;\n        }\n        // dp[i][0]\uff1a\u6301\u6709\u80a1\u7968\n        // dp[i][1]\uff1a\u4e0d\u6301\u6709\u80a1\u7968\u4e14\u662f\u521a\u5b8c\u6210\u4e00\u7b14\u4ea4\u6613\n        // dp[i][2]: \u4e0d\u6301\u6709\u80a1\u7968\u4e14\u4e0d\u662f\u521a\u5b8c\u6210\u4e00\u7b14\u4ea4\u6613\n        vector&lt;vector&lt;int&gt;&gt; dp(len,vector&lt;int&gt;(3,0));\n        dp[0][0]=-prices[0];\n        dp[0][1]=0;\n        dp[0][2]=0;\n\n        for(int i=1;i&lt;len;i++){\n            dp[i][0]=max(dp[i-1][0],dp[i-1][2]-prices[i]);\n            dp[i][1]=dp[i][0]+prices[i];\n            dp[i][2]=max(dp[i-1][2],dp[i-1][1]);\n        }\n        return max(dp[len-1][1],dp[len-1][2]);\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day51_DP_part12/#714","title":"714.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\u542b\u624b\u7eed\u8d39","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day51_DP_part12/#_4","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u5c5e\u4e8e\u80a1\u7968\u4e70\u5356\u8fd9\u7c7b\u95ee\u9898\uff0c\u4e0e122.\u80a1\u7968\u4e70\u5356\u7684\u6700\u4f73\u65f6\u673a\u57fa\u672c\u4e00\u6837\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day51_DP_part12/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day51_DP_part12/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt; &amp;prices, int fee) {\n        int len = (int) prices.size();\n        if (len &lt; 1) {\n            return 0;\n        }\n        // dp[i][0]:\u6301\u6709\u80a1\u7968\n        // dp[i][1]\uff1a\u4e0d\u6301\u6709\u80a1\u7968\n        vector&lt;vector&lt;int&gt;&gt; dp(len, vector&lt;int&gt;(2, 0));\n        dp[0][0] = -prices[0];\n        dp[0][1] = 0;\n        for (int i = 1; i &lt; len; i++) {\n            dp[i][0] = max(dp[i - 1][0], dp[i - 1][1] - prices[i]);\n            dp[i][1] = max(dp[i - 1][1], dp[i][0] + prices[i] - fee);\n        }\n        return dp[len - 1][1];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day51_DP_part12/#_7","title":"\u603b\u7ed3","text":"<ul> <li>\u533a\u5206\u597d\u80a1\u7968\u4e70\u5356\u7684\u72b6\u6001\u5b9a\u4e49\uff0c\u7075\u6d3b\u8fd0\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u548c\u751f\u6d3b\u7684\u5b9e\u9645\u60c5\u51b5</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day52_DP_part13/","title":"300.\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day52_DP_part13/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u8d2a\u5fc3\u548c\u5206\u6cbb\u90fd\u4e0d\u4fbf\u4e8e\u505a\u8fd9\u4e2a\u9898\u76ee\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u52a8\u6001\u89c4\u5212\u89e3\u51b3\uff0cdp[i]\u4e3a\u4ee5nums[i]\u4e3a\u8d77\u70b9\u7684\u6700\u5927\u5b50\u5e8f\u5217\u7684\u548c,\u5b50\u95ee\u9898\u4e3a\u540ei\u4e2a\u5143\u7d20\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u89c1\u6e90\u4ee3\u7801\uff0c\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u53ef\u4ee5\u4f7f\u7528\u4f18\u5148\u961f\u5217\u4f7f\u5f97\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3aO(logn)\uff0c\u5173\u952e\u60f3\u5230\u662f\u4ece\u540e\u5f80\u524d\u904d\u5386\u3002\uff08dp[i]\u5b9a\u4e49\u4e3a\u4ee5nums[i]\u4e3a\u7ec8\u70b9\u7684\u6700\u5927\u5b50\u5e8f\u5217\u548c\u7684\u89e3\u9898\u601d\u60f3\u4e0e\u4e0a\u8ff0\u7c7b\u4f3c\uff09\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day52_DP_part13/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"\\[O(n^2),S(1)\\]"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day52_DP_part13/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int lengthOfLIS(vector&lt;int&gt; &amp;nums) {\n        int len = (int) nums.size();\n        vector&lt;int&gt; dp(len, 1);\n        int result = 0;\n        int LIS;\n        for (int i = len - 1; i &gt;= 0; i--) {\n            LIS = 1;\n            for (int j = i + 1; j &lt; len; j++) {\n                if (nums[j] &gt; nums[i]) {\n                    LIS = max(dp[j] + 1, LIS);\n                }\n            }\n            dp[i] = LIS;\n            result = max(result, LIS);\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day52_DP_part13/#674","title":"674.\u6700\u957f\u8fde\u7eed\u9012\u589e\u5e8f\u5217","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day52_DP_part13/#_4","title":"\u601d\u8def","text":"<p>\u5e94\u8be5\u5c5e\u4e8e\u8d2a\u5fc3\u89e3\u6cd5\u3002\u9898\u76ee\u6bd4\u8f83\u7b80\u5355\uff0c\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u4e00\u904d\u6570\u7ec4\uff0c\u6bcf\u6b21\u8d2a\u5fc3\u7684\u5f97\u5230\u8fde\u7eed\u7684\u6700\u957f\u5e8f\u5217\uff0c\u6240\u6709\u7684\u8fde\u7eed\u6700\u957f\u5e8f\u5217\u5373\u4e3a\u9898\u76ee\u8981\u627e\u7684\u6700\u957f\u8fde\u7eed\u9012\u589e\u5e8f\u5217\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day52_DP_part13/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day52_DP_part13/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int findLengthOfLCIS(vector&lt;int&gt; &amp;nums) {\n        int result = 1;\n        int len = (int) nums.size();\n        int start = 0;\n        int end = 0;\n        for (start = 0; start &lt; len; start++) {\n            end = start + 1;\n            while (end &lt; len &amp;&amp; nums[end] &gt; nums[end - 1]) {\n                end++;\n            }\n            result = max(end - start, result);\n            start = end - 1;\n        }\n\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day52_DP_part13/#718","title":"718.\u6700\u957f\u91cd\u590d\u5b50\u6570\u7ec4","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day52_DP_part13/#_7","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u89e3\u9898\u601d\u8def\u6765\u81ea300.\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\uff0cdp[i][j]\u8868\u793a\u4ee5nums1[i]\u548cnums2[j]\u7ed3\u5c3e\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u86ee\u9ad8\u7684\uff0c\u5177\u4f53\u89c1\u6e90\u4ee3\u7801\uff0c\u5173\u952e\u96be\u70b9\u662f\u5b9a\u4e49\u51fadp\u7684\u72b6\u6001\u8868\uff0c\u5373\u627e\u5230\u5408\u9002\u7684\u5b50\u95ee\u9898\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day52_DP_part13/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"\\[O(n^2),S(n^2)\\]"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day52_DP_part13/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int findLength(vector&lt;int&gt; &amp;nums1, vector&lt;int&gt; &amp;nums2) {\n        int len1 = (int) nums1.size();\n        int len2 = (int) nums2.size();\n        int result = 0;\n        // dp[i][j]\u8868\u793a\u4ee5nums1[i]\u548cnums2[j]\u7ed3\u5c3e\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\n        // dp[i][j]=dp[i-1][j-1]+1 or 0\n        vector&lt;vector&lt;int&gt;&gt; dp(len1 + 1, vector&lt;int&gt;(len2 + 1, 0));\n        for (int i = 1; i &lt;= len1; i++) {\n            for (int j = 1; j &lt;= len2; j++) {\n                if (nums1[i-1] == nums2[j-1]) {\n                    dp[i][j] = dp[i - 1][j - 1] + 1;\n                    result = max(result, dp[i][j]);\n                }\n            }\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day52_DP_part13/#_10","title":"\u603b\u7ed3","text":"<ul> <li>\u5b50\u5e8f\u5217\u95ee\u9898\u7684dp\u8868\u5b9a\u4e49\uff0c\u6709\u4ee5nums[i]\u4e3a\u7ed3\u5c3e\u5143\u7d20\u7684\u9898\u76ee\u8981\u6c42\u7684\u89e3\uff0cdp\u8868\u7684\u904d\u5386\u987a\u5e8f\u4ece\u5934\u5230\u5c3e;\u6709\u4ee5nums[i]\u4e3a\u5f00\u5934\u5143\u7d20\u7684\u9898\u76ee\u8981\u6c42\u7684\u89e3\uff0cdp\u8868\u7684\u904d\u5386\u987a\u5e8f\u4ece\u5c3e\u5230\u5934\u3002</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day53_DP_part14/","title":"1143.\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day53_DP_part14/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u4e0e718.\u6700\u957f\u91cd\u590d\u5b50\u6570\u7ec4\u89e3\u9898\u601d\u60f3\u7c7b\u4f3c\uff0c\u6ca1\u6709\u60f3\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\u4ec0\u4e48\u90a3\u6837\u662f\u5408\u7406\u7684\uff0c\u5408\u7406\u6027\u8bf4\u660e\uff1adp[i][j]\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4ee5text1[i]\u548ctext2[j]\u7ed3\u5c3e\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u548c\u4e0d\u4ee5\u5b83\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217,\u5206\u522b\u5bf9\u5e94dp[i][j] = dp[i - 1][j - 1] + 1\u548cmax(dp[i - 1][j], dp[i][j - 1])\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day53_DP_part14/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"\\[O(n^2),S(n^2)\\]"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day53_DP_part14/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int longestCommonSubsequence(string text1, string text2) {\n        int len1 = (int) text1.length();\n        int len2 = (int) text2.length();\n        // dp[i][j]\u8868\u793atext1\u524di\u4e2a\u5b57\u7b26\u548ctext2\u524dj\u4e2a\u5b57\u7b26\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\n        // dp[i][j]\u7684\u72b6\u6001\u8f6c\u79fb\u5206\u4e3a\u4ee5text1[i]\u548ctext2[j]\u7ed3\u5c3e\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u548c\u4e0d\u4ee5\u5b83\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\n        // \u53ef\u4ee5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u5c06\u7a7a\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u81f3O(n)\n        vector&lt;vector&lt;int&gt;&gt; dp(len1 + 1, vector&lt;int&gt;(len2 + 1, 0));\n        for (int i = 1; i &lt;= len1; i++) {\n            for (int j = 1; j &lt;= len2; j++) {\n                if (text1[i - 1] == text2[j - 1]) {\n                    dp[i][j] = dp[i - 1][j - 1] + 1;\n                } else {\n                    dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);\n                }\n            }\n        }\n        return dp[len1][len2];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day53_DP_part14/#1035","title":"1035.\u4e0d\u76f8\u4ea4\u7684\u7ebf","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day53_DP_part14/#_4","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u4e0e1143.\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u9898\u76ee\u4e00\u6837\uff0c\u5373\u524d\u4e00\u4e2a\u9898\u76ee\u3002\u672c\u8d28\u4e0a\u662f\u6c42nums1\u548cnums2\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217s1\u548cs2\uff0cs1\u548cs2\u4e2d\u6bcf\u4e2a\u5bf9\u5e94\u5143\u7d20\u8fde\u7ebf\u5373\u6ee1\u8db3\u9898\u610f\uff0c\u6545\u8f6c\u5316\u4e3a1143.\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day53_DP_part14/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"\\[O(n^2)\uff0cS(n^2)\\]"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day53_DP_part14/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int maxUncrossedLines(vector&lt;int&gt; &amp;nums1, vector&lt;int&gt; &amp;nums2) {\n        int len1 = (int) nums1.size();\n        int len2 = (int) nums2.size();\n        // dp[i][j]\u8868\u793anums1\u524di\u4e2a\u5143\u7d20\u548cnums2\u524dj\u4e2a\u5143\u7d20\u7684\u6700\u5927\u4e0d\u76f8\u4ea4\u7684\u7ebf\u548c\n        vector&lt;vector&lt;int&gt;&gt; dp(len1 + 1, vector&lt;int&gt;(len2 + 1, 0));\n\n        for (int i = 1; i &lt;= len1; i++) {\n            for (int j = 1; j &lt;= len2; j++) {\n                if (nums1[i-1] == nums2[j-1]) {\n                    dp[i][j] = dp[i - 1][j - 1] + 1;\n                } else {\n                    dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);\n                }\n            }\n        }\n        return dp[len1][len2];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day53_DP_part14/#53","title":"53.\u6700\u5927\u5b50\u5e8f\u548c","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day53_DP_part14/#_7","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u8d2a\u5fc3\u601d\u60f3\uff0c\u5177\u4f53\u5c31\u4e0d\u7528\u7ea0\u7ed3\u4e86\u3002\u6bd4\u8f83\u7b80\u5355\uff0c\u5177\u4f53\u89c1\u6e90\u4ee3\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day53_DP_part14/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)(\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u81f3S(1))</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day53_DP_part14/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int maxSubArray(vector&lt;int&gt;&amp; nums) {\n        if (nums.size() == 0) return 0;\n        vector&lt;int&gt; dp(nums.size());\n        dp[0] = nums[0];\n        int result = dp[0];\n        for (int i = 1; i &lt; nums.size(); i++) {\n            dp[i] = max(dp[i - 1] + nums[i], nums[i]); // \u72b6\u6001\u8f6c\u79fb\u516c\u5f0f\n            if (dp[i] &gt; result) result = dp[i]; // result \u4fdd\u5b58dp[i]\u7684\u6700\u5927\u503c\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day54_DP_part15/","title":"392.\u5224\u65ad\u5b50\u5e8f\u5217","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day54_DP_part15/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u8d2a\u5fc3\u601d\u60f3\u3001\u53cc\u6307\u9488\u6cd5\u3002\u4ece\u524d\u5f80\u540e\u626b\u63cfs\u548ct,\u5c3d\u53ef\u80fd\u5339\u914ds\u4e2d\u7684\u5b57\u7b26\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u52a8\u6001\u89c4\u5212\u3002dp[i][j]\u8868\u793as\u524di\u4e2a\u5b57\u7b26\u662f\u5426\u662ft\u524dj\u4e2a\u5b57\u7b26\u7684\u5b50\u5e8f\u5217\uff0c\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e0epart14\u4e2d\u7684\u4e24\u4e2a\u9898\u76ee\u7c7b\u4f3c\u3002</p> <p>\u672c\u9898\u91c7\u7528\u65b9\u6cd5\u4e00\u89e3\u7b54\uff0c\u6700\u4e3a\u7b80\u5355\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day54_DP_part15/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>n\u4e3at\u7684\u957f\u5ea6</p> <p>O(n),S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day54_DP_part15/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    bool isSubsequence(string s, string t) {\n        int i_s = 0;\n        int i_t = 0;\n        while (i_s &lt; s.size() &amp;&amp; i_t &lt; t.size()) {\n            if (s[i_s] == t[i_t]) {\n                i_s++;\n            }\n            i_t++;\n        }\n        return i_s &gt;= s.size();\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day54_DP_part15/#115","title":"115.\u4e0d\u540c\u7684\u5b50\u5e8f\u5217","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day54_DP_part15/#_4","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u5e38\u89c1\u7684\u5b50\u5e8f\u5217\u9898\u76ee\uff0cdp\u8868\u7684\u8bbe\u8ba1\u548c\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e0e\u53c2\u7167\u4e00\u822c\u7684\u5b50\u5e8f\u5217\u9898\u76ee\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day54_DP_part15/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bben\u4e3as\u7684\u957f\u5ea6\uff0cm\u4e3at\u7684\u957f\u5ea6</p> <p>O(mn),S(mn)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day54_DP_part15/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int numDistinct(string s, string t) {\n        int len1 = (int) s.length();\n        int len2 = (int) t.length();\n\n        // dp[i][j]\u8868\u793at\u7684\u524dj-1\u4e2a\u5b57\u7b26\u662fs\u7684\u524di-1\u4e2a\u5b57\u7b26\u7684\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\u4e2a\u6570\n        vector&lt;vector&lt;unsigned long long&gt;&gt; dp(len1 + 1, vector&lt;unsigned long long&gt;(len2 + 1, 0));\n        for (int i = 0; i &lt;= len1; i++) {\n            dp[i][0] = 1;\n        }\n        for (int i = 1; i &lt;= len1; i++) {\n            for (int j = 1; j &lt;= len2; j++) {\n                if (s[i - 1] == t[j - 1]) {\n                    // s[i-1]\u4e0et[j-1]\u5339\u914d+s[i-1]\u4e0d\u4e0et[j-1]\u5339\u914d\n                    dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j];\n                } else {\n                    // s[i-1]\u4e0d\u4e0et[j-1]\u5339\u914d\n                    dp[i][j] = dp[i-1][j];\n                }\n            }\n        }\n        return dp[len1][len2];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day55_DP_part16/","title":"583.\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5220\u9664\u64cd\u4f5c","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day55_DP_part16/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u5206\u6790\u9898\u76ee\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u9898\u76ee\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6c42\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\uff081143.\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\uff09\u3002</p> <p>\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5206\u6790\u9898\u76ee\u91c7\u7528\u52a8\u6001\u89c4\u5212\u505a\uff0c\u5728\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u7b80\u5355\u8d77\u89c1\uff0c\u6545\u91c7\u7528\u6c42\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u7684\u65b9\u5f0f\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day55_DP_part16/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bbem\u4e3aword1\u7684\u957f\u5ea6\uff0cn\u4e3aword2\u7684\u957f\u5ea6</p> <p>O(nm)\uff0cS(nm)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day55_DP_part16/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int minDistance(string word1, string word2) {\n        int len1 = (int) word1.length();\n        int len2 = (int) word2.length();\n        // dp[i][j]\u8868\u793atext1\u524di\u4e2a\u5b57\u7b26\u548ctext2\u524dj\u4e2a\u5b57\u7b26\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\n        // dp[i][j]\u7684\u72b6\u6001\u8f6c\u79fb\u5206\u4e3a\u4ee5text1[i]\u548ctext2[j]\u7ed3\u5c3e\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u548c\u4e0d\u4ee5\u5b83\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\n        // \u53ef\u4ee5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u5c06\u7a7a\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u81f3O(n)\n        vector&lt;vector&lt;int&gt;&gt; dp(len1 + 1, vector&lt;int&gt;(len2 + 1, 0));\n        for (int i = 1; i &lt;= len1; i++) {\n            for (int j = 1; j &lt;= len2; j++) {\n                if (word1[i - 1] == word2[j - 1]) {\n                    dp[i][j] = dp[i - 1][j - 1] + 1;\n                } else {\n                    dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);\n                }\n            }\n        }\n        return (len1-dp[len1][len2])+(len2-dp[len1][len2]);\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day55_DP_part16/#72","title":"72.\u7f16\u8f91\u8ddd\u79bb","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day55_DP_part16/#_4","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u8fd9\u79cd\u9898\u76ee\u5bb9\u6613\u8bc6\u522b\u51fa\u662f\u52a8\u6001\u89c4\u5212\u7684\u9898\u76ee\uff0c\u5177\u6709\u660e\u663e\u7684\u5b50\u95ee\u9898\u7684\u7279\u5f81\uff0c\u4e14\u65e0\u540e\u6548\u6027\uff0cdp[i][j]\u8868\u793aword1\u524di\u4e2a\u5b57\u7b26\u548cword2\u7684\u524dj\u4e2a\u5b57\u7b26\u7684\u8ddd\u79bb\u3002\u63a8\u5bfcdp\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u5173\u952e\u70b9\u662f\u5c06insert\u548cdelete\u3001replace\u4e09\u79cd\u64cd\u4f5c\u7b49\u4ef7\u4e8edelete\u548creplace\u4e24\u79cd\u64cd\u4f5c\uff0c\u539f\u56e0\u4e0d\u8d58\u8ff0(\u597d\u50cf\u4e5f\u4e0d\u9700\u8981\u8fd9\u79cd\u8f6c\u5316\uff09\uff0c\u5177\u4f53\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u89c1\u6e90\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day55_DP_part16/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u8bben\u4e3aword1\u7684\u957f\u5ea6\uff0cm\u4e3aword2\u7684\u957f\u5ea6</p> <p>O(nm)\uff0cS(nm)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day55_DP_part16/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int minDistance(string word1, string word2) {\n        int len1 = (int) word1.length();\n        int len2 = (int) word2.length();\n\n        // dp[i][j]\u8868\u793aword1\u524di\u4e2a\u548cword2\u524dj\u4e2a\u5b57\u7b26\u7684\u7f16\u8f91\u8ddd\u79bb\n        // dp[i][j]=\n        vector&lt;vector&lt;int&gt;&gt; dp(len1 + 1, vector&lt;int&gt;(len2 + 1));\n        for (int i = 0; i &lt;= len1; i++) {\n            dp[i][0] = i;\n        }\n        for (int i = 0; i &lt;= len2; i++) {\n            dp[0][i] = i;\n        }\n        for (int i = 1; i &lt;= len1; i++) {\n            for (int j = 1; j &lt;= len2; j++) {\n                // \u9488\u5bf9word1[i-1]\u4e0eword2[j-1]\u7684\u64cd\u4f5c\uff0c\u8981\u4e48\u53bb\u6389\u6216\u8005\u53d8\u5316\u8981\u4e48\u76f8\u540c\n                if (word1[i-1] == word2[j-1]) {\n                    dp[i][j] = dp[i - 1][j - 1];\n                } else {\n                    dp[i][j] = min(dp[i - 1][j - 1], min(dp[i - 1][j], dp[i][j - 1])) + 1;\n                }\n            }\n        }\n        return dp[len1][len2];\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day55_DP_part16/#_7","title":"\u603b\u7ed3","text":"<ul> <li>\u6ce8\u610f\u7f16\u8f91\u8ddd\u79bb\u7684\u5b9a\u4e49\u548c\u89e3\u6cd5\uff0c\u8fd9\u4e2a\u8981\u8bb0\u4f4f\uff0c\u5176\u4f59\u5c31\u662f\u5b50\u5e8f\u5217\u7c7b\u95ee\u9898\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u4e00\u822c\u601d\u8003\u65b9\u5411\uff0c\u662f\u5426\u9700\u8981\u4e8c\u7ef4\u6570\u7ec4\u7b49\u7b49\u3002</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day57_DP_part17/","title":"day57 \u52a8\u6001\u89c4\u5212part17","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day57_DP_part17/#647","title":"647.\u56de\u6587\u5b50\u4e32","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day57_DP_part17/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002</p> <p>\u65b9\u6cd5\u4e00\uff1adp[i][j]\u8868\u793as\u7684\u4ece\u7d22\u5f15i\u5230\u7d22\u5f15j\u7684\u5b50\u4e32\u662f\u5426\u4e3a\u56de\u6587\u5b57\u7b26\u4e32\uff0c\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u89c1\u6e90\u4ee3\u7801\uff0c\u6bd4\u8f83\u7b80\u5355\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u56de\u6587\u4e2d\u5fc3\u3002\u7ecf\u8fc7\u5206\u6790\u53ef\u4ee5\u5f97\u5230\uff0c\u627e\u51fa\u6240\u6709\u7684\u56de\u6587\u4e2d\u5fc3\uff0c\u53ca\u76f8\u5bf9\u5e94\u7684\u56de\u6587\u4e32\u7684\u6700\u5927\u957f\u5ea6\u3002</p> <p>\u65b9\u6cd5\u4e09\uff1aManacher,\u53ef\u4ee5\u5728O(n)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u627es\u7684\u6700\u5927\u56de\u6587\u4e32\uff0c\u5bf9\u8fd9\u4e2a\u7b97\u6cd5\u6709\u70b9\u5370\u8c61\u5373\u53ef\uff0c\u4f1a\u7528\u5373\u53ef\uff0c\u4e0d\u8981\u6c42\u7406\u89e3\u548c\u638c\u63e1\u3002</p> <p>\u65b9\u6cd5\u4e00\u662f\u6211\u60f3\u51fa\u6765\u7684\uff0c\u65b9\u6cd5\u4e8c\u548c\u4e09\u662fleetcode\u9898\u89e3\uff0c\u6ce8\u610f\u65b9\u6cd5\u4e8c\u7684\u505a\u6cd5\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aS(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day57_DP_part17/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u65b9\u6cd5\u4e00\uff1a\\(\\(O(n^2),S(n^2)\\)\\)</p> <p>\u65b9\u6cd5\u4e8c\uff1a\\(\\(O(n^2),S(1)\\)\\)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day57_DP_part17/#_3","title":"\u6e90\u7801","text":"<p>\u65b9\u6cd5\u4e00</p> <pre><code>class Solution {\npublic:\n    int countSubstrings(string s) {\n        int len = (int) s.length();\n        int result = len;\n        // \u9884\u5904\u7406s\u4f7f\u5f97\u5224\u65ads\u4efb\u610f\u4e24\u4e2a\u4f4d\u7f6e\u4e4b\u95f4\u7684\u5b57\u7b26\u662f\u5426\u4e3a\u56de\u6587\u4e32\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\n        vector&lt;vector&lt;bool&gt;&gt; dp(len, vector&lt;bool&gt;(len, true));\n        for (int i = 0; i &lt; len - 1; i++) {\n            dp[i][i + 1] = (s[i] == s[i + 1]);\n            if (dp[i][i + 1]) {\n                result++;\n            }\n        }\n        for (int d = 2; d &lt; len; d++) {\n            for (int i = 0; i &lt; len - d; i++) {\n                if (s[i] == s[i + d]) {\n                    dp[i][i + d] = dp[i + 1][i + d - 1];\n                } else {\n                    dp[i][i + d] = false;\n                }\n                if (dp[i][i + d]) {\n                    result++;\n                }\n            }\n        }\n        return result;\n    }\n};\n</code></pre> <p>\u65b9\u6cd5\u4e8c</p> <pre><code>class Solution {\npublic:\n    int countSubstrings(string s) {\n        int n = s.size(), ans = 0;\n        for (int i = 0; i &lt; 2 * n - 1; ++i) {\n            // \u7edf\u4e00\u5904\u7406\u4e86\u5947\u6570\u548c\u5076\u6570\u7684\u56de\u6587\u4e2d\u5fc3\u7684\u60c5\u51b5\n            int l = i / 2, r = i / 2 + i % 2;\n            while (l &gt;= 0 &amp;&amp; r &lt; n &amp;&amp; s[l] == s[r]) {\n                --l;\n                ++r;\n                ++ans;\n            }\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day57_DP_part17/#516","title":"516.\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217","text":"<p>516. \u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day57_DP_part17/#_4","title":"\u601d\u8def","text":"<p>\u52a8\u6001\u89c4\u5212\u3002\u4e0e647.\u56de\u6587\u5b50\u4e32\u7c7b\u4f3c\uff0c\u5177\u4f53\u89c1\u6e90\u4ee3\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day57_DP_part17/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"\\[O(n^2),S(n^2)\\]"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day57_DP_part17/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int longestPalindromeSubseq(string s) {\n        int len = (int) s.length();\n        int result = 1;\n\n        // dp[i][j]\u8868\u793as[i:j]\u7684\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217\n        vector&lt;vector&lt;int&gt;&gt; dp(len, vector&lt;int&gt;(len));\n        for (int i = 0; i &lt; len - 1; i++) {\n            dp[i][i] = 1;\n            dp[i][i + 1] = (s[i] == s[i + 1] ? 2 : 1);\n            result=max(dp[i][i+1],result);\n        }\n        dp[len - 1][len - 1] = 1;\n\n        for (int d = 2; d &lt; len; d++) {\n            for (int i = 0; i &lt; len - d; i++) {\n                if (s[i] == s[i + d]) {\n                    dp[i][i + d] = dp[i + 1][i + d - 1] + 2;\n                } else {\n                    dp[i][i + d] = max(dp[i + 1][i + d], dp[i][i + d - 1]);\n                }\n                result = max(dp[i][i + d], result);\n            }\n        }\n\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day58_MonoStack_part01/","title":"day58 \u5355\u8c03\u6808part01","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day58_MonoStack_part01/#739","title":"739.\u6bcf\u65e5\u6e29\u5ea6","text":"<p>739. \u6bcf\u65e5\u6e29\u5ea6 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day58_MonoStack_part01/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u66b4\u529b\u6cd5\u3002\u6ce8\u610f\u5230\u6e29\u5ea6\u7684\u8303\u56f4\u4e3a0\u5230100\uff0c\u6545\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a\u6570\u7ec4show[0:101],\u521d\u59cb\u65f6\u503c\u4e3a\u65e0\u9650\u5927\uff0cshow[i]\u8868\u793a\u6e29\u5ea6i\u51fa\u73b0\u7684\u6700\u65e9\u65f6\u95f4\uff0c\u4ece\u540e\u5f80\u524d\u904d\u5386temperatures\uff0c\u904d\u5386\u65f6\u66f4\u65b0show\u6570\u7ec4\u540c\u65f6\u5f97\u5230\u7b2ci\u5929\u7684\u7b54\u6848\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u5355\u8c03\u6808\u3002\u7ecf\u5206\u6790\u9898\u76ee\uff0c\u53d1\u73b0\u5907\u9009\u7b54\u6848\u4e4b\u95f4\u6709\u906e\u6321\u7684\u5173\u7cfb\uff0c\u7b26\u5408\u5355\u8c03\u6808\u7684\u5e94\u7528\u7279\u5f81\uff0c\u5177\u4f53\u53ef\u4ee5\u89c1\u6e90\u4ee3\u7801\u3002</p> <p>\u672c\u9898\u91c7\u7528\u5355\u8c03\u6808\u7684\u505a\u6cd5\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day58_MonoStack_part01/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day58_MonoStack_part01/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; dailyTemperatures(vector&lt;int&gt; &amp;temperatures) {\n        stack&lt;int&gt; index;\n        int len = (int) temperatures.size();\n        vector&lt;int&gt; result(len, 0);\n        for (int i = 0; i &lt; len; i++) {\n            while (!index.empty() &amp;&amp; temperatures[index.top()] &lt; temperatures[i]) {\n                result[index.top()] = i - index.top();\n                index.pop();\n            }\n            index.push(i);\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day58_MonoStack_part01/#496","title":"496.\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5143\u7d20","text":"<p>496. \u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20 I - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day58_MonoStack_part01/#_4","title":"\u601d\u8def","text":"<p>\u57fa\u4e8e739.\u6bcf\u65e5\u6e29\u5ea6\u7684\u65b9\u6cd5\u505a\uff0c\u4e5f\u5305\u62ec\u66b4\u529b\u6cd5\u548c\u5355\u8c03\u6808\u6cd5\uff0c\u672c\u9898\u91c7\u7528\u5355\u8c03\u6808\u6cd5\uff0c\u5177\u4f53\u89c1\u6e90\u4ee3\u7801\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day58_MonoStack_part01/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>m\u4e3anums1\u7684\u957f\u5ea6\uff0cn\u4e3anums2\u7684\u957f\u5ea6\u3002</p> <p>\u54c8\u5e0c\u8868\u7684\u67e5\u8be2\u590d\u6742\u5ea6\u4e3aO(1)\uff08\u51b5\u4e14nums1\u6bcf\u4e2a\u5143\u7d20\u8fd8\u4e0d\u540c\uff0c\u6545\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u52a0\u4f4e\uff09\uff1aO(m+n)</p> <p>S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day58_MonoStack_part01/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; nextGreaterElement(vector&lt;int&gt; &amp;nums1, vector&lt;int&gt; &amp;nums2) {\n        stack&lt;int&gt; index;\n        int len2 = (int) nums2.size();\n        int len1 = (int) nums1.size();\n        unordered_map&lt;int, int&gt; m;\n        vector&lt;int&gt; result(len1, -1);\n        for (int i = 0; i &lt; len1; i++) {\n            m[nums1[i]] = i;\n        }\n        for (int i = 0; i &lt; len2; i++) {\n            while (!index.empty() &amp;&amp; nums2[index.top()] &lt; nums2[i]) {\n                if (m.find(nums2[index.top()]) != m.end()) {\n                    result[m.at(nums2[index.top()])] = nums2[i];\n                }\n                index.pop();\n            }\n            index.push(i);\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day58_MonoStack_part01/#_7","title":"\u603b\u7ed3","text":"<ul> <li>\u5982\u4f55\u8bc6\u522b\u51fa\u4f7f\u7528\u5355\u8c03\u6808\u3001\u5355\u8c03\u961f\u5217\u89e3\u51b3\u95ee\u9898\u5f88\u91cd\u8981\uff0c\u4e3b\u8981\u65f6\u5907\u9009\u7b54\u6848\u906e\u6321\u7684\u601d\u60f3\u3002</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day59_MonoStack_part02/","title":"day59 \u5355\u8c03\u6808part02","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day59_MonoStack_part02/#503ii","title":"503.\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5143\u7d20II","text":"<p>503. \u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20 II - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day59_MonoStack_part02/#_1","title":"\u601d\u8def","text":"<p>\u5355\u8c03\u6808\u3002\u4e0e496.\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5143\u7d20\u57fa\u672c\u4e00\u81f4\uff0c\u7531\u4e8e\u662f\u4e00\u4e2a\u5faa\u73af\u6570\u7ec4\uff0c\u6545\u6211\u4eec\u9009\u62e9\u904d\u5386\u6570\u7ec4\u4e24\u6b21\uff0c\u8fd9\u6837\u5c31\u80fd\u591f\u6ee1\u8db3\u5bfb\u627e\u5faa\u73af\u6570\u7ec4nums\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u7684\u6700\u5927\u503c\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day59_MonoStack_part02/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day59_MonoStack_part02/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; nextGreaterElements(vector&lt;int&gt;&amp; nums) {\n        int len=(int)nums.size();\n        vector&lt;int&gt; result(len,-1);\n        stack&lt;int&gt; index;\n        for(int k=1;k&lt;=2;k++) {\n            for (int i = 0; i &lt; len; i++) {\n                while (!index.empty() &amp;&amp; nums[index.top()] &lt; nums[i]) {\n                    result[index.top()] = nums[i];\n                    index.pop();\n                }\n                index.push(i);\n            }\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day59_MonoStack_part02/#42","title":"42.\u63a5\u96e8\u6c34","text":"<p>42. \u63a5\u96e8\u6c34 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day59_MonoStack_part02/#_4","title":"\u601d\u8def","text":"<p>\u6700\u5f00\u59cb\u60f3\u7684\u662f\u627e\u5230\u6bcf\u4e2a\u8fde\u7eed\u7684\u6c34\u6d3c\u7684\u5f00\u59cb\u67f1\u5b50\u548c\u7ed3\u675f\u67f1\u5b50\uff0c\u540e\u9762\u53d1\u73b0\u8fd9\u4e2a\u65e0\u6cd5\u89e3\u51b3\u4ece\u5168\u5c40\u7684\u6c34\u6d3c\u5373\u66f4\u5927\u7684\u6c34\u6d3c\u3002\u6545\u6362\u4e00\u79cd\u601d\u8def\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u67f1\u5b50\u53ef\u4ee5\u627f\u63a5\u7684\u63a5\u6c34\u91cf\uff0c\u7d2f\u52a0\u8d77\u6765\u5c31\u662f\u6240\u6c42\u7ed3\u679c\u3002\u5982\u4f55\u8ba1\u7b97\u6bcf\u4e2a\u67f1\u5b50\u53ef\u4ee5\u627f\u63a5\u7684\u6c34\u91cf\u5462\uff0c\u901a\u8fc7\u8ba1\u7b97\u628a\u8fd9\u4e2a\u67f1\u5b50\u5708\u8d77\u6765\u7684\u6574\u4e2a\u6c34\u6d3c\u7684\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684\u67f1\u5b50\uff0c\u5373\u5de6\u8fb9\u6700\u5927\u7684\u67f1\u5b50\u548c\u53f3\u8fb9\u6700\u5927\u7684\u67f1\u5b50\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u5f97\u5230\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u53ef\u884c\u3002\u8fd9\u4e2a\u60f3\u6cd5\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u4e3a\u53cc\u6307\u9488\u6cd5\uff0c\u6e90\u4ee3\u7801\u6709\u4e9b\u96be\u4ee5\u7406\u89e3\u3002</p> <p>\u8fd8\u6709\u53ef\u4ee5\u901a\u8fc7\u5355\u8c03\u6808\u505a\uff0c\u5728\u8fd9\u91cc\u7531\u4e8e\u65f6\u95f4\u5173\u7cfb\uff0c\u5728\u6b64\u4e0d\u8d58\u8ff0\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day59_MonoStack_part02/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day59_MonoStack_part02/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int trap(vector&lt;int&gt; &amp;height) {\n        //\u6c42\u4e24\u4e2a\u6570\u7ec4\uff0c\u5de6\u8fb9\u6700\u5927\u7684\u67f1\u5b50\u548c\u53f3\u8fb9\u6700\u5927\u7684\u67f1\u5b50\n        int len = (int) height.size();\n        vector&lt;int&gt; l_max = height;\n        vector&lt;int&gt; r_max = height;\n        int result = 0;\n        int max_h = height[0];\n        for (int i = 1; i &lt; len; i++) {\n            max_h = max(height[i], max_h);\n            l_max[i] = max_h;\n        }\n\n        max_h = height[len - 1];\n        for (int i = len - 2; i &gt;= 0; i++) {\n            max_h = max(height[i], max_h);\n            r_max[i] = max_h;\n        }\n        for (int i = 0; i &lt; len; i++) {\n            result += min(l_max[i], r_max[i]) - height[i];\n        }\n        return result;\n    }\n};\n</code></pre> <p>\u8fdb\u4e00\u6b65\u4f7f\u7528\u53cc\u6307\u9488\u4f18\u5316\u7a7a\u95f4\u590d\u6742\u5ea6</p> <pre><code>class Solution {\npublic:\n    int trap(vector&lt;int&gt;&amp; height) {\n        int ans = 0;\n        int left = 0, right = height.size() - 1;\n        int leftMax = 0, rightMax = 0;\n        while (left &lt; right) {\n            leftMax = max(leftMax, height[left]);\n            rightMax = max(rightMax, height[right]);\n            if (leftMax &lt; righ) {\n                ans += leftMax - height[left];\n                ++left;\n            } else {\n                ans += rightMax - height[right];\n                --right;\n            }\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day60_MonoStack_part03/","title":"day60 \u5355\u8c03\u6808part03","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day60_MonoStack_part03/#84","title":"84.\u67f1\u72b6\u56fe\u4e2d\u6700\u5927\u7684\u77e9\u5f62","text":"<p>84. \u67f1\u72b6\u56fe\u4e2d\u6700\u5927\u7684\u77e9\u5f62 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day60_MonoStack_part03/#_1","title":"\u601d\u8def","text":"<p>\u5355\u8c03\u6808\u3002\u9996\u5148\u4ece\u86ee\u529b\u6cd5\u5165\u624b\u601d\u8003\uff0c\u6ce8\u610f\u5230\u6700\u5927\u77e9\u5f62\u7684\u9ad8\u5ea6\u4e00\u5b9a\u662fheights\u4e2d\u7684\u4e00\u4e2a\u503c\uff0c\u5bf9\u4e8e\u86ee\u529b\u6cd5\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u9ad8\u5ea6\u6216\u5bbd\u5ea6\u6765\u6c42\u5f97\u6700\u5927\u7684\u77e9\u5f62\uff0c\u8fd9\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u800cn\u6700\u5927\u4e3a\\(\\(10^5\\)\\)\uff0c\u8fd9\u6837\u80af\u5b9a\u8d85\u65f6\uff0c\u6545\u8003\u8651\u4f18\u5316\u9ad8\u5ea6\u6216\u8005\u5bbd\u5ea6\u7684\u86ee\u529b\u6c42\u89e3\u6cd5\u3002\u6ce8\u610f\u5230\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u4f18\u5316\u9ad8\u5ea6\u7684\u86ee\u529b\u6cd5\uff0c\u6545\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u6240\u9700\u8981\u7684\u6c42\u89e3\u65b9\u6cd5\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day60_MonoStack_part03/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day60_MonoStack_part03/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    int largestRectangleArea(vector&lt;int&gt; &amp;heights) {\n        int len = (int) heights.size();\n        int result = 0;\n        // \u6700\u540e\u4e00\u4e2a\u4e0d\u4f4e\u4e8ei\u7684\u6700\u5de6\u8fb9\u7684\u67f1\u5b50\u7684\u7d22\u5f15\n        vector&lt;int&gt; l_smaller(len);\n        // \u6700\u540e\u4e00\u4e2a\u4e0d\u4f4e\u4e8ei\u7684\u6700\u53f3\u8fb9\u7684\u67f1\u5b50\u7684\u7d22\u5f15\n        vector&lt;int&gt; r_smaller(len);\n        for (int i = 0; i &lt; len; i++) {\n            l_smaller[i] = 0;\n            r_smaller[i] = len-1;\n        }\n        stack&lt;int&gt; s_index;\n        for (int i = 0; i &lt; len; i++) {\n            while (!s_index.empty() &amp;&amp; heights[s_index.top()] &gt; heights[i]) {\n                r_smaller[s_index.top()] = i - 1;\n                s_index.pop();\n            }\n            s_index.push(i);\n        }\n        while (!s_index.empty()) {\n            s_index.pop();\n        }\n        for (int i = len - 1; i &gt;= 0; i--) {\n            while (!s_index.empty() &amp;&amp; heights[s_index.top()] &gt; heights[i]) {\n                l_smaller[s_index.top()] = i + 1;\n                s_index.pop();\n            }\n            s_index.push(i);\n        }\n        for (int i = 0; i &lt; len; i++) {\n            result = max(result, heights[i] * (r_smaller[i] - l_smaller[i] + 1));\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day60_MonoStack_part03/#_4","title":"\u603b\u7ed3","text":"<ul> <li>\u5355\u8c03\u6808\u548c\u5355\u8c03\u961f\u5217\u7684\u7528\u6cd5\u8981\u8bb0\u4f4f</li> <li>\u4ee3\u7801\u968f\u60f3\u5f55\u4e00\u5237\u5b8c\u7ed3\uff0c\u8fd8\u662f\u89c9\u5f97\u5bf9\u4e8e\u81ea\u5df1\u6709\u8f83\u5927\u7684\u63d0\u5347\uff0c\u867d\u7136\u62a5\u90a3\u4e2a\u73ed\u5c5e\u5b9e\u662f\u6d6a\u8d39\u94b1\uff0c\u8ddf\u7740\u4ee3\u7801\u968f\u60f3\u5f55\u516c\u5f00\u7684\u9898\u76ee\u5237\u5c31\u53ef\u4ee5\u4e86</li> </ul>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/","title":"day6 \u54c8\u5e0c\u8868part01","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#242","title":"242.\u6709\u6548\u7684\u5f02\u4f4d\u5b57\u7b26\u4e32","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#_1","title":"\u601d\u8def","text":"<p>\u5229\u7528\u54c8\u5e0c\u8868\u5224\u65ad\u4e24\u4e2a\u5b57\u7b26\u4e32\u6240\u542b\u7684\u540c\u6837\u7c7b\u578b\u7684\u5b57\u7b26\u6570\u91cf\u662f\u5426\u4e00\u6837</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n+m):\u5bf9\u4e8e\u4e24\u4e2a\u5b57\u7b26\u4e32\u5404\u626b\u63cf\u4e00\u904d S(1):\u5c0f\u5199\u5b57\u6bcd\u7684\u4e2a\u6570\u7684\u5e38\u6570\u7a7a\u95f4</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    bool isAnagram(string s, string t) {  \n        unordered_map&lt;char,int&gt; m_s;  \n        unordered_map&lt;char,int&gt; m_t;  \n        for(auto it:s){  \n            m_s[it]++;  \n        }  \n        for(auto it:t){  \n            m_t[it]++;  \n        }  \n        return m_s==m_t;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#349","title":"349.\u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#_4","title":"\u601d\u8def","text":"<p>\u8bbe\u8fd9\u4e24\u4e2a\u6570\u7ec4\u4e3an1,n2\u3002\u5148\u4f7f\u7528unoreded_set\u7684set\uff08\u5e95\u5c42\u7528hash\u662f\u5b9e\u73b0\u7684\uff09\u5b58n1\u4e2d\u7684\u5143\u7d20\u540c\u65f6\u53ef\u4ee5\u53bb\u91cd\uff0c\u5728\u904d\u5386n2\u770b\u662f\u5426\u5728set\u4e2d\u51fa\u73b0\uff0c\u51fa\u73b0\u5219\u4e3a\u4e24\u4e2a\u6570\u7ec4\u76f8\u4ea4\uff0c\u6ce8\u610f\u5904\u7406\u7ed3\u679c\u4e2d\u7684\u91cd\u590d\u5143\u7d20\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6\uff1a","text":"<p>O(n1+n2):\u5404\u81ea\u626b\u63cf\u4e00\u904d\uff0c\u5047\u8bbehash\u7684\u67e5\u627e\u901f\u5ea6\u4e3aO(1) S(n1):set\u5b58num1\u4e2d\u7684\u5185\u5bb9</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    vector&lt;int&gt; intersection(vector&lt;int&gt;&amp; nums1, vector&lt;int&gt;&amp; nums2) {  \n        unordered_set&lt;int&gt; s_nums1;  \n        vector&lt;int&gt; result;  \n        for(auto it:nums1){  \n            s_nums1.insert(it);  \n        }  \n        for(auto it:nums2){  \n            if(s_nums1.find(it)!=s_nums1.end()){  \n                result.push_back(it);  \n                s_nums1.erase(it);  \n            }  \n        }  \n        return result;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#202","title":"202.\u5feb\u4e50\u6570\u5b57","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#_7","title":"\u601d\u8def","text":"<p>\u53d1\u73b0\u5feb\u4e50\u6570\u5b57\u7684\u53d8\u5316\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u65b0\u7684\u6570\u5b57\u7684\u4e2a\u6570\u662f\u6709\u9650\u7684\uff0c\u8bben\u7684\u4f4d\u6570\u4e3arank,\u5219\u65b0\u6570\u5b57\u7684\u4e2a\u6570\u4e0a\u754c\u4e3a81*rank\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(81*rank):\u57fa\u672c\u5904\u4e8eO(1\u72b6\u6001) S(81*rank)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    bool isHappy(int n) {  \n        if(n==1)return true;  \n        unordered_set&lt;int&gt; s;  \n        s.insert(n);  \n        int sum=0;  \n        while(n!=1){  \n            while(n!=0){  \n                sum+=(n%10)*(n%10);  \n                n/=10;  \n            }  \n            if(s.find(sum)!=s.end())return false;  \n            s.insert(sum);  \n            n=sum;  \n        }  \n        return true;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#1","title":"1.\u4e24\u6570\u4e4b\u548c","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#_10","title":"\u601d\u8def","text":"<p>\u53ef\u4ee5\u5148\u6392\u5e8f\u518d\u53cc\u6307\u9488or\u4f7f\u7528hash\u505a\uff0c\u8fd9\u91cc\u8bf4\u4f7f\u7528hash\u505a</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#_11","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n):\u9700\u8981\u626b\u63cf\u4e00\u8d9f S(n):\u4f7f\u7528hash\u5b58\u5df2\u7ecf\u626b\u63cf\u7684\u6570\u5b57</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day6_HashTable_part01/#_12","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    vector&lt;int&gt; twoSum(vector&lt;int&gt; &amp;nums, int target) {  \n        unordered_map&lt;int,int&gt; s;  \n        for(int i=0;i&lt;nums.size();i++){  \n            if(s.find(target-nums[i])!=s.end()){  \n                return {s[target-nums[i]],i};  \n            }  \n            s[nums[i]]=i;  \n        }  \n        return {};  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/","title":"day7 \u54c8\u5e0c\u8868part02","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#454","title":"454.\u56db\u6570\u4e4b\u548c","text":"<p>454. \u56db\u6570\u76f8\u52a0 II - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#_1","title":"\u601d\u8def","text":"<p>\u56db\u4e2a\u6570\u7ec4,\u957f\u5ea6\u90fd\u4e3aO\uff08n\uff09\uff0c\u5229\u7528hash_map\u50a8\u5b58\u5176\u4e2d\u4e24\u4e2a\u6570\u7ec4\u7684\u7ec4\u5408\uff0c\u9700\u8981O(n2)\u7684\u590d\u6742\u5ea6\uff0c\u518d\u904d\u5386\u5269\u4e0b\u7684\u4e24\u4e2a\u6570\u7ec4\u67e5\u8be2hash_map\u4e2d\u662f\u5426\u5b58\u5728\u5176\u7ec4\u5408\u548c\u7684\u76f8\u53cd\u6570\uff0c\u6ce8\u610fhash_map\u4e2d\u7684value\u662f\u7ec4\u5408\u7684\u548c\u4e2a\u6570\uff0c\u9700\u8981\u7edf\u8ba1\u91cd\u590d\u7684\u5143\u7d20\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n2):\u56db\u4e2a\u6570\u7ec4\u5206\u6210\u4e24\u7ec4\uff0c\u6bcf\u7ec4\u5404\u81ea\u8fed\u4ee3\u7ec4\u5408\u626b\u63cf\u4e00\u904d\uff0c\u9700\u8981O(\\(\\(n^2\\)\\)) S(n2):hash_map\u9700\u8981\\(\\(n^2\\)\\)\u7684\u7a7a\u95f4</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    int fourSumCount(vector&lt;int&gt;&amp; nums1, vector&lt;int&gt;&amp; nums2, vector&lt;int&gt;&amp; nums3, vector&lt;int&gt;&amp; nums4) {  \n        int result=0;  \n        unordered_map&lt;int,int&gt; map_12;  \n        for(auto it1:nums1){  \n            for(auto it2:nums2){  \n                if(map_12.find(it1+it2)==map_12.end()) {  \n                    map_12.insert({it1 + it2, 1});  \n                }else{  \n                    map_12[it1+it2]++;  \n                }  \n            }  \n        }  \n\n        for(auto it1:nums3){  \n            for(auto i2:nums4){  \n                if(map_12.find(-(it1+i2))!=map_12.end()){  \n                    result+=map_12[-(it1+i2)];  \n                }  \n            }  \n        }  \n        return result;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#383","title":"383.\u8d4e\u91d1\u4fe1","text":"<p>383. \u8d4e\u91d1\u4fe1 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#_4","title":"\u601d\u8def","text":"<p>\u4e0e242.\u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u601d\u8def\u4e00\u6837</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n) S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    bool canConstruct(string ransomNote, string magazine) {  \n        unordered_map&lt;char,int&gt; m_ransomNote;  \n        unordered_map&lt;char,int&gt; m_magazine;  \n        for(auto it:ransomNote){  \n            m_ransomNote[it]++;  \n        }  \n        for(auto it:magazine){  \n            m_magazine[it]++;  \n        }  \n\n        for(auto it:m_ransomNote){  \n            if(m_magazine.find(it.first)==m_magazine.end()||m_magazine[it.first]&lt;it.second){  \n                return false;  \n            }  \n        }  \n        return true;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#15","title":"15.\u4e09\u6570\u4e4b\u548c","text":"<p>15. \u4e09\u6570\u4e4b\u548c - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#_7","title":"\u601d\u8def","text":"<p>\u53c2\u8003\u4e24\u6570\u4e4b\u548c\u7684\u601d\u8def\uff0c\u5148\u5bf9\u6570\u7ec4\u6392\u5e8f\uff0c\u56fa\u5b9a\u4e00\u4e2a\u6570\uff0c\u5269\u4f59\u4e24\u4e2a\u6570\u7684\u67e5\u627e\u4f7f\u7528\u4e24\u6570\u4e4b\u548c\u7684\u601d\u8def\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5bf9\u4e8e\u91cd\u590d\u5143\u7ec4\u6392\u9664\u7684\u6280\u5de7\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\\(\\(O(nlogn+n^2)=O(n^2)\\)\\):\u4e24\u5c42for\u5faa\u73af\u3002 O(logn):\u53d6\u51b3\u4e0e\u6392\u5e8f\u7684\u590d\u6742\u5ea6\uff0c\u8fd9\u91cc\u91c7\u7528sort\uff0c\u4e5f\u5c31\u662f\u5feb\u6392\u7684\u590d\u6742\u5ea6\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#_9","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    vector&lt;vector&lt;int&gt;&gt; threeSum(vector&lt;int&gt;&amp; nums) {  \n        sort(nums.begin(),nums.end());  \n        vector&lt;vector&lt;int&gt;&gt; result;  \n        size_t start=0;  \n        size_t end=nums.size()-1;  \n        for(int i=0;i&lt;nums.size()-2;i++){  \n            start=i+1;  \n            end=nums.size()-1;  \n            if(!result.empty()&amp;&amp;result[result.size()-1][0]==nums[i]){  \n                continue;  \n            }  \n            while (start&lt;end){  \n                if(nums[start]+nums[end]+nums[i]==0){  \n                    result.push_back({nums[i],nums[start],nums[end]});  \n                    size_t tmp=start;  \n                    while (start&lt;end&amp;&amp;nums[tmp]==nums[start]){  \n                        start++;  \n                    }   \n                    end--;  \n                }else if(nums[start]+nums[end]+nums[i]&lt;0){  \n                    start++;  \n                }else{  \n                    end--;  \n                }  \n            }  \n        }  \n        return result;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#454_1","title":"454.\u56db\u6570\u4e4b\u548c","text":"<p>454. \u56db\u6570\u76f8\u52a0 II - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#_10","title":"\u601d\u8def","text":"<p>\u56db\u6570\u4e4b\u548c\u964d\u4e3a\u4e09\u6570\u4e4b\u548c\uff0c\u518d\u964d\u4e3a\u4e24\u6570\u4e4b\u548c\uff0c\u540c\u6837\u6ce8\u610f\u91cd\u590d\u7ed3\u679c\u6570\u7ec4\u7684\u5904\u7406\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\u6ea2\u51fa\u5904\u7406\uff0c\u5728nums[i]+nums[j]+nums[k]+nums[m]\u7684\u8fc7\u7a0b\u8981\u9632\u6b62\u6ea2\u51fa\u3002</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#_11","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\\(\\(O(n^3)\\)\\):\u4e09\u5c42\u5faa\u73af S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day7_HashTable_part02/#_12","title":"\u6e90\u7801","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; fourSum(vector&lt;int&gt; &amp;nums, int target) {\n        vector&lt;vector&lt;int&gt;&gt; result;\n        sort(nums.begin(), nums.end());\n        for (int i = 0; i &lt; (int) nums.size() - 3; i++) {\n            if (i &gt; 0 &amp;&amp; nums[i] == nums[i - 1]) {\n                continue;\n            }\n            for (int j = i + 1; j &lt; (int) nums.size() - 2; j++) {\n                if (j &gt; i + 1 &amp;&amp; nums[j] == nums[j - 1]) {\n                    continue;\n                }\n                int start = j + 1;\n                int end = nums.size() - 1;\n                while (start &lt; end) {\n                    long long sum = (long long) nums[i] + nums[j] + nums[start] + nums[end];\n                    if (sum == target) {\n                        result.push_back({nums[i], nums[j], nums[start], nums[end]});\n                        int tmp = start;\n                        while (start &lt; end &amp;&amp; nums[start] == nums[tmp]) {\n                            start++;\n                        }\n                        end--;\n                    } else if (sum &lt; target) {\n                        start++;\n                    } else {\n                        end--;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/","title":"day8 \u5b57\u7b26\u4e32part01","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#344","title":"344.\u53cd\u8f6c\u5b57\u7b26\u4e32","text":"<p>344. \u53cd\u8f6c\u5b57\u7b26\u4e32 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_1","title":"\u601d\u8def","text":"<p>\u7b80\u5355\u7684\u524d\u534a\u90e8\u5206\u7684\u5b57\u7b26\u4e0e\u540e\u534a\u90e8\u5206\u7684\u5b57\u7b26\u4ea4\u6362</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\u3001S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    void reverseString(vector&lt;char&gt;&amp; s) {  \n        for(int i=0;i&lt;s.size()/2;i++){  \n            swap(s[i],s[s.size()-1-i]);  \n        }  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#541ii","title":"541.\u53cd\u8f6c\u5b57\u7b26\u4e32II","text":"<p>541. \u53cd\u8f6c\u5b57\u7b26\u4e32 II - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_4","title":"\u601d\u8def","text":"<p>\u672c\u8d28\u4e0a\u4e0e\u6700\u57fa\u7840\u7684\u53cd\u8f6c\u5b57\u7b26\u4e32\u533a\u522b\u4e0d\u5927\uff0c\u6ce8\u610f\u8fed\u4ee3\u4e2dswap\u4ea4\u6362\u7684\u4e0b\u6807\u7684\u63a7\u5236\u5c31\u884c</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n):\u4e00\u8d9f\u626b\u63cf S(1)\uff1a\u5e38\u6570\u7684\u7a7a\u95f4\uff0c\u4ea4\u6362\u7684\u9700\u8981\u7684\u4e34\u65f6\u53d8\u91cfchar\u548c\u4e00\u4e9b\u4e0b\u6807\u53d8\u91cf</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    string reverseStr(string s, int k) {  \n        int i=0;  \n        while(i+k&lt;=s.size()){  \n            for(int j=i;j&lt;(i+k/2);j++){  \n                swap(s[j],s[i+k-1-j+i]);  \n            }  \n            i+=2*k;  \n        }  \n\n        // reverse the left chars where the num of the left chars is smaller than k  \n        if(i&lt;s.size()){  \n            for(int j=i;j&lt;i+(s.size()-i)/2;j++){  \n                swap(s[j],s[s.size()-1-j+i]);  \n            }  \n        }  \n        return s;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#54","title":"\u5361\u7801\u7f51\uff1a54.\u66ff\u6362\u6570\u5b57","text":"<p>54. \u66ff\u6362\u6570\u5b57\uff08\u7b2c\u516b\u671f\u6a21\u62df\u7b14\u8bd5\uff09 (kamacoder.com)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_7","title":"\u601d\u8def","text":"<p>\u5f88\u7b80\u5355\uff0c\u5c31\u62fc\u63a5\u5b57\u7b26\u4e32</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_8","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\u3001S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_9","title":"\u6e90\u7801","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main(){\n    string s;\n    cin&gt;&gt;s;\n    string result;\n    const string tmp=\"number\";\n    for(auto it:s){\n        if(it&gt;='0'&amp;&amp;it&lt;='9'){\n            result+=tmp;\n        }else{\n            result+=it;\n        }\n    }\n    cout&lt;&lt;result;\n}\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#151","title":"151.\u53cd\u8f6c\u5b57\u7b26\u4e32\u91cc\u7684\u5355\u8bcd","text":"<p>151. \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_10","title":"\u601d\u8def","text":"<p>\u8bbe\u8981\u53cd\u8f6c\u7684\u5b57\u7b26\u4e32\u4e3as \u65b9\u6cd5\u4e00\uff1a \u4ece\u540e\u5f80\u524d\u8bc6\u522b\u51fas\u6bcf\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\u4f4d\u7f6e\u548c\u7ed3\u675f\u4f4d\u7f6e\uff0c\u4f9d\u6b21\u5c06\u8fd9\u4e9b\u5355\u8bcd\u63d2\u5165\u5230\u7ed3\u679c\u4e2d\u3002 \u65b9\u6cd5\u4e8c\uff1a \u5148\u5bf9s\u53cd\u8f6c\u5f97\u5230s1\uff0c\u518d\u4ece\u5934\u5f00\u59cb\u5bf9s1\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\u5355\u72ec\u53cd\u8f6c\u5373\u53ef\u5f97\u5230\u6700\u7ec8\u7ed3\u679c \u672c\u6b21\u6211\u91c7\u53d6\u7684\u662f\u65b9\u6cd5\u4e00</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_11","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n)\uff1a\u626b\u63cf\u4e24\u904d S(1):\u9664\u4e86\u8f93\u51fa\u6570\u636e\u5360\u7528\u7684\u7a7a\u95f4\uff0c\u5176\u4ed6\u53ea\u5360\u7528\u5e38\u6570\u7a7a\u95f4</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_12","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    string reverseWords(string s) {  \n        string result;  \n        const char split = ' ';  \n        int start = 1;  \n        int end = 0;  \n        for (int i = s.size() - 1; i &gt;= 0; i--) {  \n            // find the end index of a new word  \n            while (i &gt;= 0 &amp;&amp; s[i] == split) {  \n                i--;  \n            }  \n            if (i &lt; 0) {  \n                break;  \n            } else {  \n                end = i;  \n            }  \n\n            // determine the start index of the same new word  \n            // \u6ce8\u610f\u5355\u8bcd\u4f4d\u4e8e\u5b57\u7b26\u4e32\u7684\u5f00\u5934  \n            while (i &gt;= 0 &amp;&amp; s[i] != split) {  \n                i--;  \n            }  \n\n            start=i+1;  \n            if(!result.empty()){  \n                result+=\" \";  \n            }  \n            result += s.substr(start, end - start + 1);  \n        }  \n        return result;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#55","title":"55.\u53f3\u65cb\u8f6c\u5b57\u7b26\u4e32","text":"<p>55. \u53f3\u65cb\u5b57\u7b26\u4e32\uff08\u7b2c\u516b\u671f\u6a21\u62df\u7b14\u8bd5\uff09 (kamacoder.com)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_13","title":"\u601d\u8def","text":"<p>\u6ce8\u610f\u591a\u6b21\u65cb\u8f6c\u7684\u601d\u60f3\uff0c\u4e0e151\u4e2d\u65b9\u6cd5\u4e8c\u7c7b\u4f3c</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_14","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n) S(1)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day8_String_part01/#_15","title":"\u6e90\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    string str;\n    int k=0;\n    cin&gt;&gt;k;\n    cin&gt;&gt;str;\n    if(k&gt;str.size())return 0;\n    reverse(str.begin(), str.end());\n    reverse(str.begin(), str.begin()+k);\n    reverse(str.begin()+k,str.end());\n    cout&lt;&lt;str;\n    return 0;\n}\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day9_String_part02/","title":"day9 \u5b57\u7b26\u4e32part02","text":""},{"location":"ALGORITHM/DaiMaSuiXiangLu/day9_String_part02/#28","title":"28.\u5b57\u7b26\u4e32\u5339\u914d","text":"<p>28. \u627e\u51fa\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7684\u4e0b\u6807 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day9_String_part02/#_1","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u5b9e\u73b0KMP\u7b97\u6cd5\uff08KMP\u7b97\u6cd5\u6bd4\u8f83\u96be\uff0c\u61c2\u5f97\u5927\u81f4\u601d\u8def\u548cKMP\u7684\u5e94\u7528\u5c31\u884c\uff0c\u8ba9gpt\u5b9e\u73b0\u5c31\u884c\uff09 \u65b9\u6cd5\u4e8c\uff1a\u76f4\u63a5\u8c03\u7528\u5b57\u7b26\u4e32\u7684find\u65b9\u6cd5 \u672c\u9898\u91c7\u7528\u7684\u662f\u65b9\u6cd5\u4e00\uff0c\u5b9e\u73b0KMP\u7b97\u6cd5</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day9_String_part02/#_2","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>O(n+m)\u3001S(m):n\u662ftext\u7684\u957f\u5ea6\uff0cm\u662fpattern\u7684\u957f\u5ea6</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day9_String_part02/#_3","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    void computeLPSArray(string pat, int M, vector&lt;int&gt;&amp; lps) {  \n        int len = 0;  \n        lps[0] = 0;  \n        int i = 1;  \n        while (i &lt; M) {  \n            if (pat[i] == pat[len]) {  \n                len++;  \n                lps[i] = len;  \n                i++;  \n            } else {  \n                if (len != 0) {  \n                    len = lps[len - 1];  \n                } else {  \n                    lps[i] = 0;  \n                    i++;  \n                }  \n            }  \n        }  \n    }  \n\n    int strStr(string txt, string pat) {  \n        int M = pat.size();  \n        int N = txt.size();  \n        if (M == 0) return 0;  \n        vector&lt;int&gt; lps(M, 0);  \n        computeLPSArray(pat, M, lps);  \n        int i = 0;  \n        int j = 0;  \n        while (i &lt; N) {  \n            if (pat[j] == txt[i]) {  \n                j++;  \n                i++;  \n            }  \n            if (j == M) {  \n                return i - j;  \n                j = lps[j - 1];  \n            } else if (i &lt; N &amp;&amp; pat[j] != txt[i]) {  \n                if (j != 0)  \n                    j = lps[j - 1];  \n                else  \n                    i = i + 1;  \n            }  \n        }  \n        return -1;  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day9_String_part02/#459","title":"459.\u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32","text":"<p>459. \u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day9_String_part02/#_4","title":"\u601d\u8def","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u86ee\u529b\u6cd5\uff0c\u6ce8\u610f\u5206\u6790\u9898\u76ee\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u904d\u5386 \u65b9\u6cd5\u4e8c\uff1a(s+s).find(s,1)!=s.size,\u5176\u4e2ds\u4e3a\u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u6ce8\u610f\u7406\u89e3\u6761\u4ef6\u7684\u5145\u5206\u6027\u548c\u5fc5\u8981\u6027 \u65b9\u6cd5\u4e09\uff1a\u4f7f\u7528KMP\u7b97\u6cd5\uff0c\u4f46\u4e0d\u61c2\u5982\u4f55\u4f7f\u7528</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day9_String_part02/#_5","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u65b9\u6cd5\u4e00\uff1a\\(\\(O(n^2)\\)\\),S(1) \u65b9\u6cd5\u4e8c\uff1aO(n),S(n) \u65b9\u6cd5\u4e09\uff1aO(n),S(n)</p>"},{"location":"ALGORITHM/DaiMaSuiXiangLu/day9_String_part02/#_6","title":"\u6e90\u7801","text":"<pre><code>class Solution {  \npublic:  \n    bool repeatedSubstringPattern(string s) {  \n        return (s+s).find(s,1)!=s.size();  \n    }  \n};\n</code></pre>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/","title":"Hello \u7b97\u6cd5\u9605\u8bfb\u7b14\u8bb0","text":"<ul> <li>Hello \u7b97\u6cd5\u9605\u8bfb\u7b14\u8bb0<ul> <li>\u7b80\u4ecb</li> <li>\u7b2c\u4e8c\u7ae0 \u590d\u6742\u5ea6\u5206\u6790</li> <li>\u7b2c\u4e09\u7ae0 \u6570\u636e\u7ed3\u6784\u5206\u7c7b</li> <li>\u7b2c\u56db\u7ae0 \u6570\u7ec4\u4e0e\u94fe\u8868</li> <li>\u7b2c\u4e94\u7ae0 \u6808\u4e0e\u961f\u5217</li> <li>\u7b2c\u516d\u7ae0 \u54c8\u5e0c\u8868</li> <li>\u7b2c\u4e03\u7ae0 \u4e8c\u53c9\u6811</li> <li>\u7b2c\u516b\u7ae0 \u5806</li> <li>\u7b2c\u4e5d\u7ae0 \u56fe</li> <li>\u7b2c\u5341\u7ae0 \u641c\u7d22</li> <li>\u7b2c\u5341\u4e00\u7ae0 \u6392\u5e8f</li> <li>\u7b2c\u5341\u4e8c\u7ae0 \u5206\u6cbb</li> <li>\u7b2c\u5341\u4e09\u7ae0 \u56de\u6eaf</li> <li>\u7b2c\u5341\u56db\u7ae0 \u52a8\u6001\u89c4\u5212</li> <li>\u7b2c\u5341\u4e94\u7ae0 \u8d2a\u5fc3</li> </ul> </li> </ul>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_1","title":"\u7b80\u4ecb","text":"<p>\u672c\u7b97\u6cd5\u4e66\u6765\u81eagithub\u7684\u4e00\u4e2a\u4e07\u661f\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u5bf9\u4e8e\u6765\u8bf4\u521d\u5b66\u8005\u662f\u4e00\u672c\u7b97\u6cd5\u7684\u5165\u95e8\u4e66\u7c4d\uff0c\u5bf9\u4e8e\u7b97\u6cd5\u6709\u4e9b\u7ecf\u9a8c\u7684\u6765\u8bf4\u662f\u7b97\u6cd5\u7684\u590d\u4e60\u8d44\u6599\uff08github\u5730\u5740\uff09\u3002\u6211\u5f53\u65f6\u662f\u8fb9\u5237\u4ee3\u7801\u968f\u60f3\u5f55\u9898\u76ee\u8fb9\u590d\u4e60\u5de9\u56fa\u7b97\u6cd5\u77e5\u8bc6\u770b\u7684\uff0c\u5c31\u7c97\u7565\u5730\u4ece\u5934\u5230\u5c3e\u770b\u4e86\u4e00\u904d\uff0c\u4e0b\u9762\u662f\u6211\u770b\u8fd9\u672c\u7b97\u6cd5\u4e66\u7684\u9605\u8bfb\u7b14\u8bb0\uff0c\u4e3b\u8981\u5305\u62ec\u4e00\u4e9b\u6bd4\u8f83\u964c\u751f\u3001\u65b0\u9896\u7684\u7b97\u6cd5\u77e5\u8bc6\u70b9\u548c\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u7b97\u6cd5\u77e5\u8bc6\u3002</p>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_2","title":"\u7b2c\u4e8c\u7ae0 \u590d\u6742\u5ea6\u5206\u6790","text":"<ul> <li>\u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u5206\u7c7b\uff1a\u4e00\u822c\u53ea\u7edf\u8ba1\u6682\u5b58\u6570\u636e\u3001\u6808\u5e27\u7a7a\u95f4\u3001\u8f93\u51fa\u6570\u636e\u4e09\u90e8\u5206\uff08\u6709\u65f6\u5019\u8f93\u51fa\u6570\u636e\u4e5f\u4e0d\u7edf\u8ba1\uff09,\u901a\u5e38\u53ea\u5173\u6ce8\u6700\u5dee\u7a7a\u95f4\u590d\u6742\u5ea6\uff08\u6700\u5dee\u8f93\u5165\u6570\u636e\u4e3a\u51c6\uff0c\u7b97\u6cd5\u8fd0\u884c\u4e2d\u7684\u5cf0\u503c\u5185\u5b58\u548c\u78c1\u76d8\u5360\u7528\u5927\u5c0f\uff09\u3002</li> </ul>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_3","title":"\u7b2c\u4e09\u7ae0 \u6570\u636e\u7ed3\u6784\u5206\u7c7b","text":"<p>\u903b\u8f91\u7ed3\u6784</p> <ul> <li>\u7ebf\u6027\u7ed3\u6784\uff1a\u6570\u7ec4\u3001\u94fe\u8868\u3001\u961f\u5217\u3001\u6808\u3001\u54c8\u5e0c\u8868\uff0c\u5143\u7d20\u4e4b\u95f4\u662f\u4e00\u5bf9\u4e00\u7684\u987a\u5e8f\u5173\u7cfb</li> <li>\u6811\u5f62\u7ed3\u6784\uff08\u975e\u7ebf\u6027\uff09\uff1a\u6811\u3001\u5806\u3001\u54c8\u5e0c\u8868\uff0c\u5143\u7d20\u4e4b\u95f4\u662f\u4e00\u5bf9\u591a\u7684\u5173\u7cfb</li> <li>\u7f51\u72b6\u7ed3\u6784\uff08\u975e\u7ebf\u6027\uff09\uff1a\u56fe\uff0c\u5143\u7d20\u4e4b\u95f4\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb</li> </ul> <p>\u7269\u7406\u7ed3\u6784</p> <ul> <li>\u5206\u4e3a\u8fde\u7eed\u7a7a\u95f4\u50a8\u5b58\u548c\u5206\u6563\u7a7a\u95f4\u50a8\u5b58\uff0c\u5206\u522b\u5bf9\u5e94\u6570\u7ec4\u548c\u94fe\u8868</li> <li>\u57fa\u4e8e\u6570\u7ec4\u53ef\u4ee5\u5b9e\u73b0\uff1a\u6808\u3001\u961f\u5217\u3001\u54c8\u5e0c\u8868\u3001\u6811\u3001\u5806\u3001\u56fe\u3001\u77e9\u9635\u3001\u5f20\u91cf\uff08\u7ef4\u5ea6 \u2265 3 \u7684\u6570\u7ec4\uff09\u7b49</li> <li>\u57fa\u4e8e\u94fe\u8868\u53ef\u4ee5\u5b9e\u73b0\uff1a\u6808\u3001\u961f\u5217\u3001\u54c8\u5e0c\u8868\u3001\u6811\u3001\u5806\u3001\u56fe\u7b49</li> </ul> <p>\u57fa\u672c\u6570\u636e</p> <ul> <li>\u662f\u6307\u53ef\u4ee5\u76f4\u63a5\u88abCPU\u8fdb\u884c\u8fd0\u7b97\u7684\u7c7b\u578b</li> </ul> <p>\u5b57\u7b26\u7f16\u7801</p> <ul> <li>UTF-8\u662fUnicode\u7f16\u7801\u65b9\u6cd5\u7684\u4e00\u79cd\u5b9e\u73b0\uff0c\u5176\u4ed6\u7684\u5b9e\u73b0\u6709UTF-16,\u5176\u4e2dUTF\u20148\u662f\u4e00\u79cd\u53d8\u957f\u7f16\u7801\uff0cUTF\u201416\u662f\u4e00\u79cd\u5b9a\u957f\u7f16\u7801\uff0c\u8ba1\u7b97\u673a\u66f4\u597d\u53d6\u503c\uff0c\u53ef\u4ee5\u505a\u5230\u7acb\u5373\u53d6\u503c</li> <li>Java\u7684String\u7c7b\u578b\u91c7\u7528UTF-16\u7f16\u7801\uff0c\u8d85\u8fc716\u4f4d\u7684\u5b57\u7b26\u6709\u989d\u5916\u7684\u5904\u7406\u673a\u5236</li> <li>\u5728\u6587\u4ef6\u5b58\u50a8\u548c\u7f51\u7edc\u4f20\u8f93\u4e2d\u6211\u4eec\u4e00\u822c\u91c7\u7528UTF-8\u7f16\u7801</li> </ul>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_4","title":"\u7b2c\u56db\u7ae0 \u6570\u7ec4\u4e0e\u94fe\u8868","text":"<p>\u5217\u8868</p> <ul> <li>\u8868\u793a\u5143\u7d20\u7684\u6709\u5e8f\u96c6\u5408\uff0c\u652f\u6301\u5143\u7d20\u589e\u5220\u6539\u67e5\u529f\u80fd\uff0c\u800c\u4e0d\u9700\u8981\u8003\u8651\u5bb9\u91cf\u9650\u5236\u95ee\u9898\uff0c\u53ef\u4ee5\u57fa\u4e8e\u94fe\u8868\u6216\u6570\u7ec4\u5b9e\u73b0\u3002</li> <li>\u57fa\u4e8e\u6570\u7ec4\u7684\u5b9e\u73b0\u7684\u8bdd\uff0c\u9700\u8981\u8003\u8651\u6269\u5bb9\u7684\u95ee\u9898\uff0c\u4e00\u822c\u662f\u6269\u5bb9\u4e8c\u500d\u3002</li> </ul> <p>\u5185\u5b58\u4e0e\u7f13\u5b58</p> <ul> <li>\u76f8\u6bd4\u94fe\u8868\u6765\u8bf4\uff0c\u6570\u7ec4\u5177\u6709\u66f4\u597d\u7684\u7a7a\u95f4\u5c40\u90e8\u6027\uff0c\u6545\u7f13\u5b58\u547d\u4e2d\u7387\u4e00\u822c\u66f4\u9ad8\uff0c\u6545\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u7684\u7b97\u6cd5\u4e00\u822c\u66f4\u52a0\u53d7\u6b22\u8fce\u3002</li> <li>\u6570\u7ec4\u7279\u522b\u5728\u9700\u8981\u5927\u91cf\u8ba1\u7b97\u7684\u60c5\u51b5\u4e0b\u5f88\u53d7\u6b22\u8fce\uff0c\u4f8b\u5982\uff1aAI\u6a21\u578b\u7b49\u3002</li> </ul>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_5","title":"\u7b2c\u4e94\u7ae0 \u6808\u4e0e\u961f\u5217","text":"<p>\u6808</p> <ul> <li>\u6808\u53ef\u4ee5\u89c6\u4e3a\u4e00\u79cd\u53d7\u9650\u5236\u7684\u6570\u7ec4\u6216\u94fe\u8868\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u201c\u5c4f\u853d\u201d\u6570\u7ec4\u6216\u94fe\u8868\u7684\u90e8\u5206\u65e0\u5173 \u64cd\u4f5c\uff0c\u4f7f\u5176\u5bf9\u5916\u8868\u73b0\u7684\u903b\u8f91\u7b26\u5408\u6808\u7684\u7279\u6027\u3002</li> <li>\u5178\u578b\u5e94\u7528\uff1a\u7a0b\u5e8f\u5185\u5b58\u7ba1\u7406\uff08\u6808\u5e27\uff09\uff0c\u6d4f\u89c8\u5668\u4e2d\u7684\u540e\u9000\u4e0e\u524d\u8fdb\u3001\u8f6f\u4ef6\u4e2d\u7684\u64a4\u9500\u4e0e\u53cd\u64a4\u9500\u3002</li> </ul> <p>\u961f\u5217</p> <ul> <li>\u5faa\u73af\u961f\u5217\uff1a\u4e00\u822c\u662f\u57fa\u4e8e\u6570\u7ec4\u7684\u5faa\u73af\u961f\u5217\uff0c\u5229\u7528\u53d6\u4f59\u5b9e\u73b0\u5faa\u73af\u3002</li> <li>\u53cc\u5411\u961f\u5217\uff1a\u4e24\u7aef\u90fd\u53ef\u4ee5\u8fdb\u51fa\u5143\u7d20\uff0c\u53ef\u4ee5\u57fa\u4e8e\u94fe\u8868\uff08\u53cc\u5411\u94fe\u8868\uff09\u6216\u6570\u7ec4\uff08\u4e0e\u7528\u6570\u7ec4\u5b9e\u73b0\u5faa\u73af\u961f\u5217\u7c7b\u4f3c\uff09\u5b9e\u73b0\u3002\u5178\u578b\u5e94\u7528\u6709\uff1a\u8f6f\u4ef6\u7684\u64a4\u9500\u4e00\u822c\u7528\u6808\u6765\u5b9e\u73b0\uff0c\u4f46\u7531\u4e8e\u8d44\u6e90\u7684\u9650\u5236\u64a4\u9500\u7684\u6b65\u6570\u662f\u6709\u9650\u7684\uff0c\u8fd9\u65f6\u9700\u8981\u4f7f\u7528\u53cc\u5411\u961f\u5217\u3002</li> </ul>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_6","title":"\u7b2c\u516d\u7ae0 \u54c8\u5e0c\u8868","text":"<p>\u54c8\u5e0c\u51b2\u7a81\uff08\u54c8\u5e0c\u7684\u91cd\u70b9\u5c31\u662f\u51cf\u5c11\u54c8\u5e0c\u51b2\u7a81\uff09</p> <ul> <li>\u672c\u8d28\u539f\u56e0\uff1a\u54c8\u5e0c\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u6240\u6709 key \u6784\u6210\u7684\u8f93\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u6570\u7ec4\u6240\u6709\u7d22\u5f15\u6784\u6210\u7684\u8f93\u51fa\u7a7a\u95f4\uff0c\u800c\u8f93\u5165\u7a7a \u95f4\u5f80\u5f80\u8fdc\u5927\u4e8e\u8f93\u51fa\u7a7a\u95f4\u3002\u56e0\u6b64\uff0c\u7406\u8bba\u4e0a\u4e00\u5b9a\u5b58\u5728\u201c\u591a\u4e2a\u8f93\u5165\u5bf9\u5e94\u76f8\u540c\u8f93\u51fa\u201d\u7684\u60c5\u51b5\u3002</li> <li>\u8d1f\u8f7d\u56e0\u5b50\uff1a\u5b9a\u4e49\u4e3a\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u6570\u91cf\u9664\u4ee5\u6876\u6570\u91cf\uff0c\u7528\u4e8e\u8861\u91cf\u54c8\u5e0c\u51b2\u7a81\u7684\u4e25\u91cd\u7a0b\u5ea6\uff0c\u5e38\u7528\u4f5c\u54c8\u5e0c\u8868\u6269\u5bb9\u7684\u89e6\u53d1\u6761\u4ef6</li> <li>\u54c8\u5e0c\u7b97\u6cd5\u7684\u8861\u91cf\u6307\u6807\uff0c\u76ee\u6807\uff1a\u786e\u5b9a\u6027\uff08\u5fc5\u8981\u6761\u4ef6\uff09\u3001\u6548\u7387\u9ad8\u3001\u5747\u5300\u5206\u5e03\uff0c\u5173\u4e8e\u5b89\u5168\u65b9\u9762\u7684\u8861\u91cf\u6307\u6807\uff1a\u5355\u5411\u6027\u3001\u6297\u78b0\u649e\u6027\uff08\u6781\u96be\u627e\u5230\u4e24\u4e2a\u4e0d\u540c\u7684\u8f93\u5165\u4f7f\u5f97\u5176\u54c8\u5e0c\u503c\u76f8\u540c\uff09\u3001\u96ea\u5d29\u6548\u5e94\uff08\u8f93\u5165\u7684\u5fae\u7b11\u53d8\u5316\u5e94\u5f53\u5bfc\u81f4\u8f93\u51fa\u7684\u663e\u8457\u4e14\u4e0d\u53ef\u9884\u6d4b\u7684\u53d8\u5316\uff09</li> <li>\u7f16\u7a0b\u8bed\u8a00\u5173\u4e8ehash\u65b9\u9762\uff1a\u7f16\u7a0b\u8bed\u8a00\u901a\u5e38\u4f1a\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u63d0\u4f9b\u5185\u7f6e\u7684\u54c8\u5e0c\u7b97\u6cd5\u3002Java\u4e2d\u5f53\u78b0\u649e\u56e0\u5b50\u5927\u4e8e0.75\u5c31\u8fdb\u884c\u6269\u5bb9\u3002</li> </ul>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_7","title":"\u7b2c\u4e03\u7ae0 \u4e8c\u53c9\u6811","text":"<ul> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u3001\u5b8c\u7f8e\u4e8c\u53c9\u6811\u3001\u5b8c\u6ee1\u4e8c\u53c9\u6811\uff08\u9664\u53f6\u8282\u70b9\u4e4b\u5916\uff0c\u5176\u4f59\u6240\u6709\u7684\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff09\u3002</li> <li>\u5bf9\u4e8e\u524d\u5e8f\u3001\u4e2d\u5e8f\u3001\u540e\u5e8f\u904d\u5386\u7684\u7406\u89e3\uff0c\u90fd\u5c5e\u4e8edfs\u3002\u4e0b\u56fe\u63cf\u8ff0\u4e86\u5bf9\u4e8c\u53c9\u6811\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u7684\u5de5\u4f5c\u539f\u7406\u3002\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u5c31\u50cf\u662f\u7ed5\u7740\u6574\u68f5\u4e8c\u53c9\u6811\u7684\u5916\u56f4\u201c\u8d70\u201d\u4e00 \u5708\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u9047\u5230\u4e09\u4e2a\u4f4d\u7f6e\uff0c\u5206\u522b\u5bf9\u5e94\u524d\u5e8f\u904d\u5386\u3001\u4e2d\u5e8f\u904d\u5386\u548c\u540e\u5e8f\u904d\u5386\u3002</li> </ul> <p>\u200b                                                          </p> <ul> <li>\u4e8c\u53c9\u6811\u7684\u5b9e\u73b0\uff1a\u4e00\u822c\u662f\u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0\uff0c\u4f46\u9488\u5bf9\u5b8c\u5168\u4e8c\u53c9\u6811\u53ef\u4ee5\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\uff0c\u5bf9\u4e00\u4e9b\u4e0e\u5b8c\u5168\u4e8c\u53c9\u6811\u5dee\u522b\u4e0d\u5927\u7684\u4e5f\u53ef\u4ee5\u7528\u6570\u7ec4\u5b9e\u73b0\uff0c\u53ea\u9700\u8981\u5728\u7a7a\u7f3a\u7684\u5730\u65b9\u7528null\u586b\u8865\u5373\u53ef\u3002</li> </ul>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_8","title":"\u7b2c\u516b\u7ae0 \u5806","text":"<ul> <li>\u4ece\u4f7f\u7528\u89d2\u5ea6\u6765\u770b\uff0c\u4f18\u5148\u961f\u5217\u548c\u5806\u770b\u4f5c\u7b49\u4ef7\u7684\u6570\u636e\u7ed3\u6784\uff0cC++\u5c31\u63d0\u4f9b\u4e86\u4f18\u5148\u961f\u5217\u3002</li> <li>\u5806\u7684\u64cd\u4f5c\uff1a\u5143\u7d20\u5165\u5806\uff08\u4ece\u5e95\u81ea\u9876\u5806\u5316\uff09\u3001\u5806\u9876\u5143\u7d20\u51fa\u5806\uff08\u5148\u4e0e\u5806\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u518d\u4ece\u9876\u81f3\u5e95\u5806\u5316\uff09\u3001\u5efa\u5806\uff08\u53ef\u4ee5\u904d\u5386\u5806\u5316\uff08\u5012\u5e8f\u904d\u5386\u5806\uff08\u5c42\u5e8f\u904d\u5386\u7684\u5230\u5e8f\uff09\u8fdb\u884c\u5806\u5316\uff09\uff0c\u53ef\u4ee5\u5728O(n)\u5185\u5efa\u5806\uff09</li> <li>\u7ecf\u5178\u5e94\u7528\uff1aTop-k\uff08\u53ef\u4ee5\u8fbe\u5230nlogk)\uff0c\u4f18\u5148\u961f\u5217</li> </ul>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_9","title":"\u7b2c\u4e5d\u7ae0 \u56fe","text":"<ul> <li>\u90bb\u63a5\u8868\u7ed3\u6784\u4e0e\u54c8\u5e0c\u8868\u4e2d\u7684\u201c\u94fe\u5f0f\u5730\u5740\u201d\u975e\u5e38\u76f8\u4f3c\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u53ef\u4ee5\u91c7\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u6765\u4f18\u5316\u6548\u7387\u3002 \u6bd4\u5982\u5f53\u94fe\u8868\u8f83\u957f\u65f6\uff0c\u53ef\u4ee5\u5c06\u94fe\u8868\u8f6c\u5316\u4e3a AVL \u6811\u6216\u7ea2\u9ed1\u6811\uff0c\u4ece\u800c\u5c06\u65f6\u95f4\u6548\u7387\u4ece \ud835\udc42(\ud835\udc5b) \u4f18\u5316\u81f3 \ud835\udc42(log \ud835\udc5b) \uff1b\u8fd8\u53ef \u4ee5\u628a\u94fe\u8868\u8f6c\u6362\u4e3a\u54c8\u5e0c\u8868\uff0c\u4ece\u800c\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u81f3 \ud835\udc42(1) \u3002\u5b9e\u9645\u4e2d\u4e5f\u53ef\u4ee5\u8003\u8651\u7528\u54c8\u5e0c\u8868\u6765\u5b9e\u73b0\u90bb\u63a5\u8868\uff0c\u5728\u6b64\u4e0d\u592a\u63a8\u8350\u3002</li> </ul>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_10","title":"\u7b2c\u5341\u7ae0 \u641c\u7d22","text":"<ul> <li>\u66b4\u529b\u641c\u7d22\uff1a\u7ebf\u6027\u641c\u7d22\u3001DFS\u3001BFS\uff0c\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u7b80\u5355\u901a\u7528\uff0c\u65e0\u987b\u5bf9\u6570\u636e\u505a\u9884\u5904\u7406\u548c\u501f\u52a9\u989d\u5916\u7684\u6570\u636e\u7ed3\u6784\u3002</li> <li>\u81ea\u9002\u5e94\u641c\u7d22\uff1a\u4e8c\u5206\u67e5\u627e\u3001\u54c8\u5e0c\u67e5\u627e\u3001\u6811\u67e5\u627e\uff08\u5728\u7279\u5b9a\u7684\u6811\u7ed3\u6784\u4e2d\uff0c\u4f8b\u5982\u4e8c\u53c9\u641c\u7d22\u6811\uff09\u3002</li> </ul>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_11","title":"\u7b2c\u5341\u4e00\u7ae0 \u6392\u5e8f","text":"<p>\u516b\u5927\u6392\u5e8f\u7b97\u6cd5</p> <ul> <li>\u63d2\u5165\u3001\u9009\u62e9\u3001\u5192\u6ce1</li> <li>\u5feb\u6392\u3001\u5f52\u5e76\u3001\u5806\u6392</li> <li>\u8ba1\u6570\u6392\u5e8f\uff08\u5b9e\u8d28\u4e0a\u662f\u6876\u6392\u5e8f\u7684\u5728\u6574\u578b\u6570\u636e\u4e0b\u7684\u4e00\u4e2a\u7279\u4f8b\uff09\u3001\u57fa\u6570\u6392\u5e8f\uff08\u76f8\u6bd4\u8ba1\u7b97\u6392\u5e8f\uff0c\u9002\u7528\u6570\u636e\u91cf\u8f83\u5927\uff0c\u4f46\u6570\u636e\u8303\u56f4m\u8f83\u5c0f\u7684\u60c5\u51b5\uff09\u3001\u6876\u6392\u5e8f</li> </ul> <p>\u6392\u5e8f\u7b97\u6cd5\u7684\u8bc4\u4ef7\u6307\u6807</p> <ul> <li>\u8fd0\u884c\u6548\u7387\u3001\u5c31\u5730\u6027\u3001\u7a33\u5b9a\u6027\u3001\u662f\u5426\u57fa\u4e8e\u6bd4\u8f83</li> <li>\u81ea\u9002\u5e94\u6027\uff08\u81ea\u9002\u5e94\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u90fd\u4f1a\u53d7\u5230\u8f93\u5165\u6570\u636e\u7684\u5f71\u54cd\uff09</li> </ul> <p>\u63d2\u5165\u6392\u5e8f\u3001\u9009\u62e9\u6392\u5e8f\u3001\u5192\u6ce1\u6392\u5e8f\u7684\u6bd4\u8f83</p> <ul> <li> <p>\u5feb\u901f\u6392\u5e8f\u8fd9\u7c7b \ud835\udc42(\ud835\udc5b log \ud835\udc5b) \u7684\u7b97\u6cd5\u5c5e\u4e8e\u57fa\u4e8e\u5206\u6cbb\u7b56 \u7565\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5f80\u5f80\u5305\u542b\u66f4\u591a\u5355\u5143\u8ba1\u7b97\u64cd\u4f5c\u3002\u800c\u5728\u6570\u636e\u91cf\u8f83\u5c0f\u65f6\uff0c\ud835\udc5b2 \u548c \ud835\udc5b log \ud835\udc5b \u7684\u6570\u503c\u6bd4\u8f83\u63a5\u8fd1\uff0c\u590d\u6742\u5ea6\u4e0d \u5360\u4e3b\u5bfc\u5730\u4f4d\uff1b\u6bcf\u8f6e\u4e2d\u7684\u5355\u5143\u64cd\u4f5c\u6570\u91cf\u8d77\u5230\u51b3\u5b9a\u6027\u4f5c\u7528\u3002 </p> </li> <li> <p>\u5b9e\u9645\u4e0a\uff0c\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\uff08\u4f8b\u5982 Java\uff09\u7684\u5185\u7f6e\u6392\u5e8f\u51fd\u6570\u91c7\u7528\u4e86\u63d2\u5165\u6392\u5e8f\uff0c\u5927\u81f4\u601d\u8def\u4e3a\uff1a\u5bf9\u4e8e\u957f\u6570\u7ec4\uff0c\u91c7\u7528\u57fa\u4e8e \u5206\u6cbb\u7b56\u7565\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u4f8b\u5982\u5feb\u901f\u6392\u5e8f\uff1b\u5bf9\u4e8e\u77ed\u6570\u7ec4\uff0c\u76f4\u63a5\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\u3002 </p> </li> <li> <p>\u867d\u7136\u5192\u6ce1\u6392\u5e8f\u3001\u9009\u62e9\u6392\u5e8f\u548c\u63d2\u5165\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u4e3a \ud835\udc42(\ud835\udc5b2) \uff0c\u4f46\u5728\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c\u63d2\u5165\u6392\u5e8f\u7684\u4f7f\u7528\u9891\u7387\u663e \u8457\u9ad8\u4e8e\u5192\u6ce1\u6392\u5e8f\u548c\u9009\u62e9\u6392\u5e8f\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u539f\u56e0\uff1a                                                                                                                                                     \u5192\u6ce1\u6392\u5e8f\u57fa\u4e8e\u5143\u7d20\u4ea4\u6362\u5b9e\u73b0\uff0c\u9700\u8981\u501f\u52a9\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\uff0c\u5171\u6d89\u53ca 3 \u4e2a\u5355\u5143\u64cd\u4f5c\uff1b\u63d2\u5165\u6392\u5e8f\u57fa\u4e8e\u5143\u7d20\u8d4b\u503c\u5b9e \u73b0\uff0c\u4ec5\u9700 1 \u4e2a\u5355\u5143\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u5192\u6ce1\u6392\u5e8f\u7684\u8ba1\u7b97\u5f00\u9500\u901a\u5e38\u6bd4\u63d2\u5165\u6392\u5e8f\u66f4\u9ad8\uff1b\u9009\u62e9\u6392\u5e8f\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u4e3a \ud835\udc42(\ud835\udc5b2) \u3002\u5982\u679c\u7ed9\u5b9a\u4e00\u7ec4\u90e8\u5206\u6709\u5e8f\u7684\u6570\u636e\uff0c\u63d2\u5165\u6392\u5e8f\u901a\u5e38\u6bd4\u9009 \u62e9\u6392\u5e8f\u6548\u7387\u66f4\u9ad8\u3002 \u9009\u62e9\u6392\u5e8f\u4e0d\u7a33\u5b9a\uff0c\u65e0\u6cd5\u5e94\u7528\u4e8e\u591a\u7ea7\u6392\u5e8f\u3002</p> </li> </ul> <p>\u5feb\u901f\u6392\u5e8f</p> <ul> <li>\u5728\u6267\u884c\u54e8\u5175\u5212\u5206\u64cd\u4f5c\u65f6\uff0c\u7cfb\u7edf\u53ef\u5c06\u6574\u4e2a\u5b50\u6570\u7ec4\u52a0\u8f7d\u5230\u7f13\u5b58\uff0c\u56e0\u6b64\u8bbf\u95ee\u5143\u7d20\u7684\u6548\u7387\u8f83 \u9ad8\u3002\u800c\u50cf\u201c\u5806\u6392\u5e8f\u201d\u8fd9\u7c7b\u7b97\u6cd5\u9700\u8981\u8df3\u8dc3\u5f0f\u8bbf\u95ee\u5143\u7d20\uff0c\u4ece\u800c\u7f3a\u4e4f\u8fd9\u4e00\u7279\u6027\u3002</li> <li>\u53ef\u4ee5\u4f7f\u7528\u57fa\u51c6\u6570\u4f18\u5316\uff0c\u4f8b\u5982\u53d6\u4e09\u4e2a\u5019\u9009\u6570\u7684\u4e2d\u4f4d\u6570\u4f5c\u4e3a\u57fa\u51c6\u6570\u3002\u5229\u7528\u5c3e\u9012\u5f52\u4f18\u5316\u5feb\u6392\u7684\u6700\u574f\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u4f7f\u5f97\u6700\u574f\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(logn)\u3002</li> </ul> <p>\u6876\u6392\u5e8f</p> <ul> <li> <p>1.\u521d\u59cb\u5316 \ud835\udc58 \u4e2a\u6876\uff0c\u5c06 \ud835\udc5b \u4e2a\u5143\u7d20\u5206\u914d\u5230 \ud835\udc58 \u4e2a\u6876\u4e2d\u3002 2. \u5bf9\u6bcf\u4e2a\u6876\u5206\u522b\u6267\u884c\u6392\u5e8f\uff08\u8fd9\u91cc\u91c7\u7528\u7f16\u7a0b\u8bed\u8a00\u7684\u5185\u7f6e\u6392\u5e8f\u51fd\u6570\uff09\u3002 3. \u6309\u7167\u6876\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u5408\u5e76\u7ed3\u679c\u3002</p> </li> <li> <p>\u5173\u952e\u70b9\u5728\u4e8e\u5c06\u5143\u7d20\u5747\u5300\u5206\u914d\u5230\u5404\u4e2a\u6876\u4e2d\uff0c\u6709\u5177\u4f53\u7684\u7b56\u7565\u3002</p> </li> </ul> <p></p>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_12","title":"\u7b2c\u5341\u4e8c\u7ae0 \u5206\u6cbb","text":"<ul> <li>\u95ee\u9898\u53ef\u4ee5\u5206\u89e3\uff1b\u5b50\u95ee\u9898\u72ec\u7acb\uff1b\u5b50\u95ee\u9898\u7684\u89e3\u53ef\u4ee5\u5408\u5e76\u5f62\u6210\u7236\u95ee\u9898\u7684\u89e3</li> <li>\u6b65\u9aa4\uff1a1. \u5206\uff08\u5212\u5206\u9636\u6bb5\uff09\u3002\u9012\u5f52\u5730\u5c06\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u4e24\u4e2a\u6216\u591a\u4e2a\u5b50\u95ee\u9898\uff0c\u76f4\u81f3\u5230\u8fbe\u6700\u5c0f\u5b50\u95ee\u9898\u65f6\u7ec8; 2. \u6cbb\uff08\u5408\u5e76\u9636\u6bb5\uff09\u3002\u4ece\u5df2\u77e5\u89e3\u7684\u6700\u5c0f\u5b50\u95ee\u9898\u5f00\u59cb\uff0c\u4ece\u5e95\u81f3\u9876\u5730\u5c06\u5b50\u95ee\u9898\u7684\u89e3\u8fdb\u884c\u5408\u5e76\uff0c\u4ece\u800c\u6784\u5efa\u51fa\u539f\u95ee\u9898 \u7684\u89e3\u3002</li> <li>\u5e38\u89c1\u7684\u5e94\u7528\uff1a\u5927\u6574\u6570\u4e58\u6cd5\uff1b\u6c42\u89e3\u9006\u5e8f\u5bf9</li> <li>\u6548\u7387\u63d0\u9ad8\u7684\u539f\u56e0\uff1a\u64cd\u4f5c\u6570\u91cf\u7684\u51cf\u5c11;\u53ef\u4ee5\u5e76\u884c\u82b1\u8ba1\u7b97\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u95ee\u9898\u5e76\u884c\u8ba1\u7b97\u3002\u4f8b\u5982\u5f52\u5e76\u6392\u5e8f\u3002</li> </ul>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_13","title":"\u7b2c\u5341\u4e09\u7ae0 \u56de\u6eaf","text":"<ul> <li> <p>\u4e00\u79cd\u901a\u8fc7\u7a77\u4e3e\u6765\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f\u4ece\u4e00\u4e2a\u521d\u59cb\u72b6\u6001 \u51fa\u53d1\uff0c\u66b4\u529b\u641c\u7d22\u6240\u6709\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5f53\u9047\u5230\u6b63\u786e\u7684\u89e3\u5219\u5c06\u5176\u8bb0\u5f55\uff0c\u76f4\u5230\u627e\u5230\u89e3\u6216\u8005\u5c1d\u8bd5\u4e86\u6240\u6709\u53ef\u80fd\u7684\u9009\u62e9 \u90fd\u65e0\u6cd5\u627e\u5230\u89e3\u4e3a\u6b62\u3002 \u56de\u6eaf\u7b97\u6cd5\u901a\u5e38\u91c7\u7528\u201c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u201d\u6765\u904d\u5386\u89e3\u7a7a\u95f4\u3002</p> </li> <li> <p>\u56de\u6eaf\u7684\u6846\u67b6\uff0c\u8981\u7279\u522b\u6ce8\u610f\u526a\u679d\uff1a\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c1d\u8bd5\u5c06\u56de\u6eaf\u7684\u201c\u5c1d\u8bd5\u3001\u56de\u9000\u3001\u526a\u679d\u201d\u7684\u4e3b\u4f53\u6846\u67b6\u63d0\u70bc\u51fa\u6765\uff0c\u63d0\u5347\u4ee3\u7801\u7684\u901a\u7528\u6027\u3002 \u5728\u4ee5\u4e0b\u6846\u67b6\u4ee3\u7801\u4e2d\uff0cstate \u8868\u793a\u95ee\u9898\u7684\u5f53\u524d\u72b6\u6001\uff0cchoices \u8868\u793a\u5f53\u524d\u72b6\u6001\u4e0b\u53ef\u4ee5\u505a\u51fa\u7684\u9009\u62e9\u3002</p> </li> </ul> <pre><code>/* \u56de\u6eaf\u7b97\u6cd5\u6846\u67b6 */ \nvoid backtrack(State *state, vector&lt;Choice *&gt; &amp;choices, vector&lt;State *&gt; &amp;res) { \n  // \u5224\u65ad\u662f\u5426\u4e3a\u89e3 \n  if (isSolution(state)) { \n      // \u8bb0\u5f55\u89e3 recordSolution(state, res); \n      // \u4e0d\u518d\u7ee7\u7eed\u641c\u7d22 return; \n  } \n  // \u904d\u5386\u6240\u6709\u9009\u62e9 \n  for (Choice choice : choices) { \n      // \u526a\u679d\uff1a\u5224\u65ad\u9009\u62e9\u662f\u5426\u5408\u6cd5 \n      if (isValid(state, choice)) { \n          // \u5c1d\u8bd5\uff1a\u505a\u51fa\u9009\u62e9\uff0c\u66f4\u65b0\u72b6\u6001 \n          makeChoice(state, choice); \n          backtrack(state, choices, res); \n          // \u56de\u9000\uff1a\u64a4\u9500\u9009\u62e9\uff0c\u6062\u590d\u5230\u4e4b\u524d\u7684\u72b6\u6001 \n          undoChoice(state, choice); \n      } \n  } \n}\n</code></pre> <ul> <li>\u56de\u6eaf\u4e0e\u9012\u5f52\u7684\u5173\u7cfb\uff1a\u56de\u6eaf\u7b97\u6cd5\u901a\u5e38\u57fa\u4e8e\u9012\u5f52\u5b9e\u73b0\u3002\u7136\u800c\uff0c\u56de\u6eaf\u662f\u9012\u5f52\u7684\u5e94\u7528\u573a\u666f\u4e4b\u4e00\uff0c\u662f\u9012\u5f52\u5728\u641c\u7d22\u95ee\u9898\u4e2d\u7684\u5e94\u7528\uff1b\u9012\u5f52\u7684\u7ed3\u6784\u4f53\u73b0\u4e86\u201c\u5b50\u95ee\u9898\u5206\u89e3\u201d\u7684\u89e3\u9898\u8303\u5f0f\uff0c\u5e38\u7528\u4e8e\u89e3\u51b3\u5206\u6cbb\u3001\u56de\u6eaf\u3001\u52a8\u6001\u89c4\u5212\uff08\u8bb0\u5fc6\u5316\u9012\u5f52\uff09\u7b49\u95ee\u9898\u3002</li> </ul>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_14","title":"\u7b2c\u5341\u56db\u7ae0 \u52a8\u6001\u89c4\u5212","text":"<p>\u6838\u5fc3\u601d\u60f3</p> <p>\u5c06\u4e00\u4e2a\u95ee\u9898\u5206\u89e3\u4e3a\u4e00\u7cfb\u5217\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\uff0c\u5e76 \u901a\u8fc7\u5b58\u50a8\u5b50\u95ee\u9898\u7684\u89e3\u6765\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff0c\u4ece\u800c\u5927\u5e45\u63d0\u5347\u65f6\u95f4\u6548\u7387\u3002\u4f8b\u5982\u722c\u697c\u68af\u7684\u9012\u5f52\u89e3\u51b3\u548c\u52a8\u6001\u89c4\u5212\u89e3\u51b3\u7684\u5bf9\u6bd4\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8bb0\u5fc6\u5316\u641c\u7d22\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u4e0edp\u76f8\u540c\u3002</p> <p>\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6</p> <p>\u6700\u4f18\u5b50\u7ed3\u6784\uff1a\u5373\u539f\u95ee\u9898\u7684\u6700\u4f18\u89e3\u662f\u4ece\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u6784\u5efa\u5f97\u6765\u7684\u3002</p> <p>\u65e0\u540e\u6548\u6027\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u72b6\u6001\uff0c\u5b83\u7684\u672a\u6765\u53d1\u5c55\u53ea\u4e0e\u5f53\u524d\u72b6\u6001\u6709\u5173\uff0c\u800c\u4e0e\u8fc7\u53bb\u7ecf\u5386\u7684\u6240\u6709\u72b6\u6001\u65e0\u5173\u3002\u6709\u540e\u6548\u679c\u6027\u7684\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u6269\u5c55\u72b6\u6001\u5b9a\u4e49\u4f7f\u5f97\u95ee\u9898\u91cd\u65b0\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u3002\u5b9e\u9645\u4e0a\uff0c\u8bb8\u591a\u590d\u6742\u7684\u7ec4\u5408\u4f18\u5316\u95ee\u9898\uff08\u4f8b\u5982\u65c5\u884c\u5546\u95ee\u9898\uff09\u4e0d\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u3002\u5bf9\u4e8e\u8fd9\u7c7b\u95ee\u9898\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u9009\u62e9\u4f7f \u7528\u5176\u4ed6\u65b9\u6cd5\uff0c\u4f8b\u5982\u542f\u53d1\u5f0f\u641c\u7d22\u3001\u9057\u4f20\u7b97\u6cd5\u3001\u5f3a\u5316\u5b66\u4e60\u7b49\uff0c\u4ece\u800c\u5728\u6709\u9650\u65f6\u95f4\u5185\u5f97\u5230\u53ef\u7528\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u3002</p> <p>\u95ee\u9898\u5224\u65ad\u4e0e\u6c42\u89e3\u6b65\u9aa4</p> <ul> <li> <p>\u95ee\u9898\u5224\u65ad\uff1a\u5982\u679c\u4e00\u4e2a\u95ee\u9898\u5305\u542b\u91cd\u53e0\u5b50\u95ee\u9898\u3001\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\u5e76\u6ee1\u8db3\u65e0\u540e\u6548\u6027\uff0c\u90a3\u4e48\u5b83\u901a\u5e38\u9002\u5408\u7528\u52a8\u6001\u89c4\u5212\u6c42\u89e3\u3002dp\u548c\u8d2a\u5fc3\u95ee\u9898\u90fd\u53ef\u4ee5\u7528\u56de\u6eaf\u89e3\u51b3\uff0c\u4e14\u90fd\u5c5e\u4e8e\u51b3\u7b56\u6811\u6a21\u578b\u3002</p> </li> <li> <p>\u6c42\u89e3\u6b65\u9aa4\uff1a\u63cf\u8ff0\u51b3\u7b56\uff0c\u5b9a\u4e49\u72b6\u6001\uff0c\u5efa\u7acb \ud835\udc51\ud835\udc5d \u8868\uff0c\u63a8\u5bfc\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff08\u7531\u6700\u4f18\u5b50\u7ed3\u6784\u51b3\u5b9a\uff09\uff0c\u786e\u5b9a\u8fb9\u754c\u6761\u4ef6\u7b49\u3002\u4ece\u672c\u8d28\u4e0a\u8bf4dp\u8868\u662f\u72b6\u6001\u4e0e\u5b50\u95ee\u9898\u7684\u89e3\u4e4b\u95f4\u7684\u6620\u5c04\u3002</p> </li> <li> <p>\u8bbe\u8ba1dp\u8868\u65f6\u6839\u636e\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u53ef\u4ee5\u4f18\u5316\u7a7a\u95f4\u5927\u5c0f\u3002</p> </li> </ul> <p>\u5178\u578b\u5e94\u7528</p> <ul> <li>0-1\u80cc\u5305\u95ee\u9898\u7684dp\u8bbe\u8ba1\u601d\u8def</li> </ul> <p></p> <ul> <li>\u5b8c\u5168\u80cc\u5305\u4e0e\u96f6\u94b1\u5151\u6362\u95ee\u9898\u662f\u540c\u4e00\u7c7b\u95ee\u9898</li> <li>\u7f16\u8f91\u8ddd\u79bb\uff0c\u8861\u91cf\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u8ddd\u79bb\u6216\u76f8\u4f3c\u5ea6</li> </ul>"},{"location":"ALGORITHM/ReadingNote/hello-algo-readnote/#_15","title":"\u7b2c\u5341\u4e94\u7ae0 \u8d2a\u5fc3","text":"<p>\u6838\u5fc3\u601d\u60f3</p> <ul> <li>\u5728\u95ee\u9898\u7684\u6bcf\u4e2a\u51b3\u7b56\u9636\u6bb5\uff0c \u90fd\u9009\u62e9\u5f53\u524d\u770b\u8d77\u6765\u6700\u4f18\u7684\u9009\u62e9\uff0c\u5373\u8d2a\u5fc3\u5730\u505a\u51fa\u5c40\u90e8\u6700\u4f18\u7684\u51b3\u7b56\uff0c\u4ee5\u671f\u83b7\u5f97\u5168\u5c40\u6700\u4f18</li> </ul> <p>\u8d2a\u5fc3\u7b97\u6cd5\u7279\u6027\u4ee5\u53ca\u4e0e\u52a8\u6001\u89c4\u5212\u7684\u533a\u522b</p> <ul> <li>\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\uff1a\u53ea\u6709\u5f53\u5c40\u90e8\u6700\u4f18\u9009\u62e9\u59cb\u7ec8\u53ef\u4ee5\u5bfc\u81f4\u5168\u5c40\u6700\u4f18\u89e3\u65f6\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u624d\u80fd\u4fdd\u8bc1\u5f97\u5230\u6700\u4f18\u89e3\u3002</li> <li>\u6700\u4f18\u5b50\u7ed3\u6784\uff1a\u539f\u95ee\u9898\u7684\u6700\u4f18\u89e3\u5305\u542b\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002</li> <li>\u4e0e\u52a8\u6001\u89c4\u5212\u7684\u533a\u522b\uff1a \u52a8\u6001\u89c4\u5212\u4f1a\u6839\u636e\u4e4b\u524d\u9636\u6bb5\u7684\u6240\u6709\u51b3\u7b56\u6765\u8003\u8651\u5f53\u524d\u51b3\u7b56\uff0c\u5e76\u4f7f\u7528\u8fc7\u53bb\u5b50\u95ee\u9898\u7684\u89e3\u6765\u6784\u5efa\u5f53\u524d\u5b50\u95ee\u9898\u7684\u89e3\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u4e0d\u4f1a\u8003\u8651\u8fc7\u53bb\u7684\u51b3\u7b56\uff0c\u800c\u662f\u4e00\u8def\u5411\u524d\u5730\u8fdb\u884c\u8d2a\u5fc3\u9009\u62e9\uff0c\u4e0d\u65ad\u7f29\u5c0f\u95ee\u9898\u8303\u56f4\uff0c\u76f4\u81f3\u95ee\u9898\u88ab\u89e3\u51b3\u3002\u4f8b\u5982\uff1a\u722c\u697c\u68af\uff0c\u4e0e\u524d\u4e00\u4e2a\u548c\u524d\u524d\u4e00\u4e2a\u72b6\u6001\u6709\u5173\uff0c\u5f53\u524d\u95ee\u9898\u7684\u89e3\u7b54\u3002\u5177\u4f53\u8fd8\u7406\u89e3\u4e0d\u6e05\u695a\uff0c\u6682\u65f6\u5c31\u8fd9\u6837\u5427\u3002</li> </ul> <p>\u8d2a\u5fc3\u89e3\u9898\u6b65\u9aa4</p> <ol> <li>\u95ee\u9898\u5206\u6790\uff1a\u68b3\u7406\u4e0e\u7406\u89e3\u95ee\u9898\u7279\u6027\uff0c\u5305\u62ec\u72b6\u6001\u5b9a\u4e49\u3001\u4f18\u5316\u76ee\u6807\u548c\u7ea6\u675f\u6761\u4ef6\u7b49\u3002\u8fd9\u4e00\u6b65\u5728\u56de\u6eaf\u548c\u52a8\u6001\u89c4\u5212\u4e2d \u90fd\u6709\u6d89\u53ca\u3002 </li> <li>\u786e\u5b9a\u8d2a\u5fc3\u7b56\u7565\uff1a\u786e\u5b9a\u5982\u4f55\u5728\u6bcf\u4e00\u6b65\u4e2d\u505a\u51fa\u8d2a\u5fc3\u9009\u62e9\u3002\u8fd9\u4e2a\u7b56\u7565\u80fd\u591f\u5728\u6bcf\u4e00\u6b65\u51cf\u5c0f\u95ee\u9898\u7684\u89c4\u6a21\uff0c\u5e76\u6700\u7ec8\u89e3 \u51b3\u6574\u4e2a\u95ee\u9898\u3002 </li> <li>\u6b63\u786e\u6027\u8bc1\u660e\uff1a\u901a\u5e38\u9700\u8981\u8bc1\u660e\u95ee\u9898\u5177\u6709\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u548c\u6700\u4f18\u5b50\u7ed3\u6784\u3002\u8fd9\u4e2a\u6b65\u9aa4\u53ef\u80fd\u9700\u8981\u7528\u5230\u6570\u5b66\u8bc1\u660e\uff0c\u4f8b \u5982\u5f52\u7eb3\u6cd5\u6216\u53cd\u8bc1\u6cd5\u7b49\u3002</li> </ol> <p>\u5178\u578b\u5e94\u7528\u548c\u9002\u7528\u60c5\u51b5</p> <ul> <li>\u9002\u7528\u60c5\u51b5\uff1a\u53ef\u4ee5\u4fdd\u8bc1\u627e\u5230\u6700\u4f18\u89e3\uff0c\u8fd9\u65f6\u8d2a\u5fc3\u5f80\u5f80\u6bd4dp\u3001\u56de\u6eaf\u9ad8\u6548\uff0c\u56e0\u4e3a\u8d2a\u5fc3\u7684\u51b3\u7b56\u4e0d\u4f9d\u8d56\u4e8e\u8fc7\u53bb\u7684\u51b3\u7b56\uff0c\u56e0\u6b64\u4e00\u822c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u4f4e;\u53ef\u4ee5\u627e\u5230\u8fd1\u4f3c\u6700\u4f18\u89e3\uff0c\u5bf9\u4e8e\u5f88\u591a\u590d\u6742\u95ee\u9898\uff0c\u627e\u5230\u5168\u5c40\u6700\u4f18\u89e3\u975e\u5e38\u56f0\u96be\u3002</li> <li>\u5178\u578b\u5e94\u7528\uff1a\u6700\u5927\u5bb9\u91cf\u95ee\u9898\uff08\u51b3\u7b56\u8fc7\u7a0b\u7684\u8bbe\u8ba1-&gt;\u53cc\u6307\u9488\u6cd5\uff09\u3001\u6700\u5927\u5207\u5206\u4e58\u6570\u95ee\u9898</li> </ul>"},{"location":"ME/","title":"\u5173\u4e8e\u4e2a\u4eba\u53ef\u516c\u5f00\u7684\u4fe1\u606f\u8bb0\u5f55\uff0c\u76ee\u524d\u5c1a\u672a\u6574\u7406","text":""},{"location":"OTHER/","title":"\u7b80\u4ecb","text":"<ul> <li>\u5173\u4e8e\u4e00\u4e9b\u5c0f\u6280\u672f\u3001\u5c0f\u5de5\u5177\u7684\u4f7f\u7528\u7684\u8bb0\u5f55\uff0c\u5305\u62ec\u4e00\u4e9b\u7b80\u5355\u7684\u8bfe\u7a0b\u9879\u76ee</li> </ul>"},{"location":"OTHER/C%2B%2B_MutilThreadCS/","title":"C++ MutilThreadCS","text":""},{"location":"OTHER/C%2B%2B_MutilThreadCS/#_1","title":"\u7b80\u4ecb","text":"<p>\u5728windows\u5e73\u53f0\u4e0a\u57fa\u4e8eC++\u7684C/S\u6a21\u5f0f\u591a\u7ebf\u7a0b,\u4e3b\u8981\u5305\u62ec\u591a\u7ebf\u7a0b\u7684\u521b\u5efa\u4e0e\u4f7f\u7528\u3001\u57fa\u7840\u7684\u7f51\u7edc\u7f16\u7a0b\uff08SOCKET\uff09\uff0c\u63a8\u8350\u4f7f\u7528\u5df2\u6709\u7684\u5f00\u6e90\u5305\uff0c\u4f8b\u5982\uff1ahttps\u3001grpc\u7b49\uff0c\u9996\u63a8grpc\uff0c\u53ef\u4ee5\u8de8\u5e73\u53f0\u4e14\u4f7f\u7528\u7b80\u4fbf\uff0c\u5bb9\u9519\u6027\u9ad8\u3002</p>"},{"location":"OTHER/C%2B%2B_MutilThreadCS/#_2","title":"\u6e90\u7801","text":"<pre><code>// server.cpp : \u6b64\u6587\u4ef6\u5305\u542b \"main\" \u51fd\u6570\u3002\u7a0b\u5e8f\u6267\u884c\u5c06\u5728\u6b64\u5904\u5f00\u59cb\u5e76\u7ed3\u675f\u3002\n\n#define _WINSOCK_DEPRECATED_NO_WARNINGS\n#include &lt;iostream&gt;\n#include &lt;WinSock2.h&gt;\n#include &lt;string.h&gt;\n#include &lt;string&gt;\n#include &lt;Windows.h&gt;\n#include &lt;process.h&gt;\n#include &lt;fstream&gt;\nusing namespace std;\n\n#define MAXBUFFER 0xff\n#define MAXCLIENT 0xff\n//\u8fd4\u56de$\u4ee3\u8868\u767b\u5f55\u5931\u8d25\uff0c\u5176\u4ed6\u4ee3\u8868\u767b\u5f55\u6210\u529f\nstring logIn(const string&amp; id, const string&amp; passwd) {\n    ifstream inFile(\".\\\\idInfor.txt\");\n    string name, locId, locPasswd, mes;\n    while (inFile &gt;&gt; name &gt;&gt; locId &gt;&gt; locPasswd) {\n        if (id == locId &amp;&amp; passwd == locPasswd) {\n            mes = name;\n            return mes;\n        }\n    }\n    mes = \"$\";\n    return mes;\n}\ntypedef struct Param {\n    SOCKET sockCli;\n    sockaddr_in addrCli;\n}Param;\nParam clientPar[MAXCLIENT];\nvoid serverThread(void* Paramter)\n{\n    Param* par = (Param*)Paramter;\n    char ch[MAXBUFFER];\n    string id, passwd, mes;\n    int ret;\n    cout &lt;&lt; \"client address:\" &lt;&lt; par-&gt;addrCli.sin_port &lt;&lt; endl;\n    while (1) {\n        ret = recv(par-&gt;sockCli, ch, MAXBUFFER, 0);\n        id = ch;\n        if (ret &lt;= 0) {\n            cout &lt;&lt; \"fail to receiv data from client\" &lt;&lt; endl;\n            break;\n        }\n        ret = recv(par-&gt;sockCli, ch, MAXBUFFER, 0);\n        passwd = ch;\n        cout &lt;&lt; \"id:\" &lt;&lt; id &lt;&lt; \" passwd:\" &lt;&lt; passwd &lt;&lt; endl;\n        mes = logIn(id, passwd);\n        if (ret &lt;= 0) {\n            cout &lt;&lt; \"fail to receiv data from client\" &lt;&lt; endl;\n            break;\n        }\n        ret = send(par-&gt;sockCli, mes.data(), MAXBUFFER, 0);\n        if (ret == -1) {\n            cout &lt;&lt; \"fail to send message to client\";\n            break;\n        }\n    }\n    cout &lt;&lt; \" client has exited\" &lt;&lt; endl;\n    _endthread();\n}\nint main()\n{\n#pragma comment(lib,\"ws2_32.lib\")\n    WSADATA data;\n    WORD wdVesion = MAKEWORD(2, 2);\n    int ret = WSAStartup(wdVesion, &amp;data);\n    if (ret) {\n        cerr &lt;&lt; \"initial network error!\" &lt;&lt; endl;\n        return -1;\n    }\n    SOCKET sock = socket(AF_INET, SOCK_STREAM, 0);\n    if (sock == -1) {\n        cerr &lt;&lt; \"fail to create socket\" &lt;&lt; endl;\n        WSACleanup();\n        return -1;\n    }\n    sockaddr_in addr;\n    addr.sin_family = AF_INET;\n    addr.sin_port = htons(9999);\n    addr.sin_addr.S_un.S_addr = inet_addr(\"127.0.0.1\");\n    ret = bind(sock, (sockaddr*)&amp;addr, sizeof(addr));\n    if (ret == -1) {\n        cerr &lt;&lt; \"fail to bind address and port\";\n        WSACleanup();\n        return -1;\n    }\n    ret = listen(sock, 5);\n    if (ret == -1) {\n        cerr &lt;&lt; \"fail to listen socket\";\n        WSACleanup();\n        return -1;\n    }\n    int len = sizeof(clientPar[0].addrCli), i = 0;\n//\u63a5\u6536\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u521b\u5efa\u7ebf\u7a0b\n    while (1) {\n//TODO clientPar\u53c2\u6570\u672a\u5b9e\u73b0\u5faa\u73af\u5229\u7528\n        Param* par = &amp;clientPar[i];\n        par-&gt;sockCli = accept(sock, (sockaddr*)&amp;(par-&gt;addrCli), &amp;len);\n        if (par-&gt;sockCli == -1) {\n            cerr &lt;&lt; \"fail to connect to client\" &lt;&lt; endl;\n            WSACleanup();\n            return -1;\n        }\n        HANDLE hThread = (HANDLE)_beginthread(serverThread, 0, (void*)par);\n        if (hThread == 0) {\n            cerr &lt;&lt; \"fail to create pthread\";\n            WSACleanup();\n            return -1;\n        }\n        i++;\n        if (i &gt;= MAXCLIENT) {\n            cout &lt;&lt; \"the number of client is max\" &lt;&lt; endl;\n            WSACleanup();\n            return -1;\n        }\n    }\n    WSACleanup();\n    return 0;\n}\n</code></pre>"},{"location":"OTHER/MMCOL/","title":"\u7814\u4e00\u9ad8\u7ea7\u7b97\u6cd5\u8bfe\u7a0b\u4f5c\u4e1a","text":""},{"location":"OTHER/MMCOL/#_1","title":"\u7b80\u4ecb","text":"<ul> <li> <p>\u7814\u4e00\u4e0a\u7684\u9ad8\u7ea7\u7b97\u6cd5\u8bbe\u8ba1\u4e0e\u5206\u6790\u7684\u4f5c\u4e1a\uff0c\u91c7\u7528\u542f\u53d1\u5f0f\u7b97\u6cd5\u6765\u89e3\u51b3\u56fe\u7740\u8272\u95ee\u9898\uff0c\u56fe\u7740\u8272\u95ee\u9898\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u62c9\u4e01\u65b9\u95ee\u9898\uff0c\u5206\u4e3a\u7b97\u603b\u4f53\u4e0a\u5206\u4e3a\u7b97\u6cd5\u7684\u9884\u5904\u7406\u548c\u89e3\u7684\u67e5\u627e\u4e24\u90e8\u5206\u3002</p> </li> <li> <p>gitee\u4ed3\u5e93\u5730\u5740</p> </li> </ul>"},{"location":"OTHER/spider/","title":"\u591a\u7ebf\u7a0b\u5927\u91cf\u6570\u636e\u722c\u866b","text":""},{"location":"OTHER/spider/#_1","title":"\u7b80\u4ecb","text":"<p>\u722c\u53d6http://www.infobank.cn\u591a\u7ebf\u7a0b\u722c\u866b\uff0c\u6d89\u53ca\u7684\u6280\u672f\u6709\u8868\u683c\u64cd\u4f5c(openpyxl)\u3001\u7b80\u5355\u7684\u722c\u866b(requests,bs4)\u3001python\u591a\u7ebf\u7a0b\u3001\u7f51\u9875\u89e3\u6790\uff08bs4\uff09</p>"},{"location":"OTHER/spider/#_2","title":"\u91c7\u7528\u7684\u6280\u672f\u7b80\u4ecb","text":"<p>openpyxl\uff1a\u6d89\u53caexecel\u8868\u683c\u7684\u64cd\u4f5c\uff0c\u4ece\u8868\u683c\u4e2d\u8bfb\u53d6\u5b58\u50a8\u6240\u9700\u8981\u7684\u8bf7\u6c42\u80a1\u7968\u4ee3\u7801\u548c\u80a1\u7968\u5e74\u4efd\uff0c\u5c06\u722c\u53d6\u7684\u7ed3\u679c\u4ee5Excel\u8868\u683c\u5b58\u50a8\u4e0b\u6765</p> <p>bs4\uff1a\u89e3\u6790\u7f51\u9875\u6587\u4ef6html\u7684\u89e3\u6790\u5668\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u9897\u7f51\u9875\u6811\uff0c\u8282\u70b9\u662f\u5404\u7ea7\u6807\u7b7e</p> <p>\u591a\u7ebf\u7a0b\uff1a\u5f88\u7b80\u5355\uff0c\u4e0d\u8fc7python\u76ee\u524d\u7684\u591a\u7ebf\u7a0b\u53ea\u80fd\u5229\u7528\u5230\u5355\u6838\u7684\u6027\u80fd</p>"},{"location":"OTHER/spider/#_3","title":"\u6e90\u7801","text":"<pre><code>import requests\nfrom bs4 import BeautifulSoup\nimport re\nimport openpyxl\nfrom multiprocessing.dummy import Pool\nimport time\nimport os\n\n\n# \u4ece\u8f93\u5165\u8868\u683c\u83b7\u53d6\u6570\u636e\ndef read_excel(file, start):\n    wb = openpyxl.load_workbook(file)\n    # \u5b58\u50a8\u6240\u6709\u7684\u80a1\u7968\u4ee3\u7801\u53ca\u5176\u5bf9\u5e94\u7684\u5e74\u4efd\uff0c\u6bcf\u4e2a\u80a1\u7968\u4ee3\u7801\u81ea\u8eab\u6784\u6210\u4e00\u4e2a\u96c6\u5408,stock_ids=[[stock_id,year_start,year_end,index],[...],[stock_id,year_start,year_end,index]]\n    stock_ids = []\n    stock_id_years = []\n    prefer = \"-1\"\n    sheet = wb['Sheet2']\n    # \u722c\u53d6\u5f00\u59cb\u4f4d\u7f6e\uff1a(1:2),(2:1576)\n    end = sheet.max_row + 1\n    for i in range(start, end):\n        r = sheet[i]\n        if r[0].value == prefer:\n            stock_id_years[2] = r[1].value\n        else:\n            if len(stock_id_years) == 4:\n                stock_id_years[0].replace(' ', '')\n                stock_id_years[1].replace(' ', '')\n                stock_id_years[2].replace(' ', '')\n                stock_id_years[1] = int(stock_id_years[1])\n                stock_id_years[2] = int(stock_id_years[2])\n                stock_ids.append(stock_id_years)\n            prefer = r[0].value\n            stock_id_years = []\n            stock_id_years.append(r[0].value)\n            stock_id_years.append(r[1].value)\n            stock_id_years.append(r[1].value)\n            stock_id_years.append(i)\n    if len(stock_id_years) == 4:\n        stock_id_years[0].replace(' ', '')\n        stock_id_years[1].replace(' ', '')\n        stock_id_years[2].replace(' ', '')\n        stock_id_years[1] = int(stock_id_years[1])\n        stock_id_years[2] = int(stock_id_years[2])\n        stock_ids.append(stock_id_years)\n    return stock_ids\n\n\n# \u5b58\u50a8\u6570\u636e\ndef save_data(results, file_name):\n    # results\u662f\u4e00\u4e2a\u5b58\u50a8\u67d0\u4e2a\u80a1\u7968id\u7684\u722c\u53d6\u6570\u636e\u7ed3\u679c\uff0c\u5c06\u80a1\u7968id\u5b58\u5230excel\u4e2d\n    wb = openpyxl.load_workbook(file_name)\n    ws = wb.active\n    results_total_num = 0\n    for result in results:\n        for recoder in result:\n            recoder[1] = recoder[1][0:4] + '-' + recoder[1][4:6] + '-' + recoder[1][6:]\n            ws.append(recoder)\n        results_total_num += len(result)\n    wb.save(file_name)\n    return results_total_num\n\n\n# \u722c\u53d6\u6570\u636e\u5e76\u5b58\u50a8\ndef craw_stockId_allpages(stock_id_years):\n    print(stock_id_years)\n    # \u6839\u636e\u80a1\u7968id\u53ca\u5176\u5bf9\u5e94\u7684\u5e74\u4efd\u722c\u53d6\u6570\u636e\n    result = []\n    url = \"http://www.infobank.cn/IrisBin/Search.dll?Page\"\n    headers = {\n        \"Host\": \"www.infobank.cn\",\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36 Edg/110.0.1587.46\"\n    }\n    library_values = [['HK', '\u4e2d\u56fd\u7ecf\u6d4e\u65b0\u95fb\u5e93'], ['BG', '\u4e2d\u56fd\u5546\u4e1a\u62a5\u544a\u5e93'], ['FL', '\u4e2d\u56fd\u6cd5\u5f8b\u6cd5\u89c4\u5e93'],\n                      ['WK', 'English Publications'],\n                      ['TJ', '\u4e2d\u56fd\u7edf\u8ba1\u6570\u636e\u5e93'], ['SS', '\u4e2d\u56fd\u4e0a\u5e02\u516c\u53f8\u6587\u732e\u5e93'], ['JK', '\u4e2d\u56fd\u533b\u7597\u5065\u5eb7\u5e93'],\n                      ['RW', '\u4e2d\u56fd\u4eba\u7269\u5e93'],\n                      ['KX', 'INFOBANK\u73af\u7403\u5546\u8baf\u5e93'], ['OG', '\u4e2d\u56fd\u4e2d\u592e\u53ca\u5730\u65b9\u653f\u5e9c\u673a\u6784\u5e93'],\n                      ['PJ', '\u4e2d\u56fd\u62df\u5efa\u5728\u5efa\u9879\u76ee\u6570\u636e\u5e93'],\n                      ['QY', '\u4e2d\u56fd\u4f01\u4e1a\u4ea7\u54c1\u5e93'], ['HS', '\u9999\u6e2f\u4e0a\u5e02\u516c\u53f8\u8d44\u6599\u5e93(\u4e2d\u6587)'], ['MC', '\u540d\u8bcd\u89e3\u91ca\u5e93']]\n    # library_values=[['BG', '\u4e2d\u56fd\u5546\u4e1a\u62a5\u544a\u5e93']]\n    for library_value in library_values:\n        data = {\n            \"cmd\": library_value[0] + \":@@=\" + stock_id_years[0],\n            \"ns\": \"50\",\n            \"pn\": 0,\n        }\n        total_page_num = 0\n        page_num = 0\n        while True:\n            flag = True\n            data['pn'] = page_num\n            resp = requests.post(url, data=data, headers=headers)\n            if resp.status_code != 200:\n                continue\n            resp.encoding = \"gb2312\"\n            # \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f#,page_num.\u9700\u8981\u5339\u914d\u6362\u884c,re.S\n            title_pattern = r'&lt;td\\s*valign=\"top\"\\s*&gt;\\s*&lt;a.*\\/a&gt;&lt;\\/td&gt;'\n            date_pattern = r'&lt;td\\s*width=\"10&amp;#37\"\\s*valign=\"top\"\\s*&gt;.*&lt;\\/td&gt;'\n            # page_num_pattern=r'&lt;td\\s*width=\"35&amp;#37\".*?&gt;&lt;p.*?&lt;\\/td&gt;'\n            page_num_pattern = r'\u5171\\d+\u9875'\n\n            titles = re.findall(title_pattern, resp.text)\n            dates = re.findall(date_pattern, resp.text)\n            if total_page_num == 0:\n                total_page_num_str = re.findall(page_num_pattern, resp.text, re.S)\n                if len(total_page_num_str) == 0:\n                    break\n                total_page_num = int(re.findall(r'\\d+', total_page_num_str[0])[0])\n            if len(titles) != len(dates) or len(titles) == 0:\n                break\n            for i in range(0, len(titles)):\n                title_str = titles[i]\n                date_str = dates[i]\n                soup = BeautifulSoup(title_str, \"html.parser\")\n                title = soup.find('a').text\n                soup = BeautifulSoup(date_str, \"html.parser\")\n                date = soup.text\n                date.replace(' ', '')\n                date_year = int(date[0:4])\n                if date_year &gt;= stock_id_years[1] and date_year &lt;= stock_id_years[2]:\n                    result.append([stock_id_years[0], date, title, library_value[1]])\n                    flag = False\n            page_num += 1\n            if page_num + 1 &gt;= total_page_num or flag:\n                break\n    return result\n\n\n# \u521b\u5efa\u65b0\u7684\u6570\u636e\u8f93\u51fa\u6587\u4ef6\ndef create_file(file_name: str):\n    if os.path.exists(file_name):\n        print(file_name, 'already exists')\n        return\n    wb = openpyxl.Workbook(file_name)\n    ws = wb.active\n    ws.append(['\u8bc1\u5238\u4ee3\u7801', '\u65b0\u95fb\u53d1\u5e03\u65f6\u95f4', '\u65b0\u95fb\u6807\u9898', '\u65b0\u95fb\u6765\u6e90'])\n    wb.save(file_name)\n\n\n# \u7a0b\u5e8f\u5f02\u5e38\u65f6\u5b58\u50a8\u4fe1\u606f\uff0c\u5b58\u5230log.txt\ndef save_log(start, end, file_index):\n    log_file = \"log.txt\"\n    with open(log_file, 'w', encoding='utf-8') as file:\n        file.write(str(start) + '\\n' + str(end) + '\\n' + str(file_index) + '\\n')\n\n\n# \u8bfb\u53d6log.txt\u4fe1\u606f\uff0c\u4ece\u4e0a\u6b21\u8fd0\u884c\u5904\u63a5\u7740\u8fd0\u884c\n# log.info:start end sheet_index\ndef get_parameters(file_name_prefix):\n    start_info = []\n    log_file = r\".\\log.txt\"\n    with open(log_file, encoding='utf-8') as file:\n        file_lines = file.readlines()\n    for file_line in file_lines:\n        start_info.append(int(file_line))\n    file_name = file_name_prefix + str(start_info[2]) + r'.xlsx'\n    if os.path.exists(file_name):\n        wb = openpyxl.load_workbook(file_name)\n        ws = wb.active\n        start_info.append(ws.max_row)\n    else:\n        wb = openpyxl.Workbook()\n        ws = wb.active\n        ws.append(['\u8bc1\u5238\u4ee3\u7801', '\u65b0\u95fb\u53d1\u5e03\u65f6\u95f4', '\u65b0\u95fb\u6807\u9898', '\u65b0\u95fb\u6765\u6e90'])\n        start_info.append(0)\n        wb.save(file_name)\n    return start_info[1], start_info[2], start_info[3]\n\n\nif __name__ == \"__main__\":\n    input_file = r\"..\\CG_ManagerShareSalary.xlsx\"\n    file_name_prefix = r'..\\data'\n    read_start, file_index, total_data_nums = get_parameters(file_name_prefix=file_name_prefix)\n    # \u6bcf\u4e2aexcel\u8868\u683c\u6700\u591a\u5b58\u50a8100000\u591a\u6761\u6570\u636e\n    file_name = file_name_prefix + str(file_index) + '.xlsx'\n    sheet_max_datas = 100000\n\n    # \u8bfb\u53d6\u6570\u636e\n    print(\"\u8bfb\u53d6\u6570\u636e\u4e2d.....\")\n    stock_ids = read_excel(file=input_file, start=read_start)\n    print(len(stock_ids))\n    print(stock_ids)\n\n    # \u591a\u7ebf\u7a0b\u722c\u53d6\u6570\u636e\n    print(\"\u722c\u53d6\u6570\u636e\u4e2d.....\")\n    start = 0\n    num = 5\n    results = []\n    pool = Pool(num)\n    while True:\n        print('*' * 100)\n        print('start:', start + 1, 'end:', start + num)\n        try:\n            if start + num &gt; len(stock_ids):\n                results = pool.map(craw_stockId_allpages, stock_ids[start:len(stock_ids)])\n            else:\n                results = pool.map(craw_stockId_allpages, stock_ids[start:start + num])\n        except Exception:\n            # \u5904\u7406\u5f02\u5e38\n            save_log(start=stock_ids[0][3], end=stock_ids[start][3], file_index=file_index)\n            print(\"\u9047\u5230\u5f02\u5e38\uff0c\u7a0b\u5e8f\u8fd0\u884c\u72b6\u6001\u5df2\u4fdd\u5b58\u81f3log.txt\u4e2d\")\n        # \u5b58\u50a8\u6570\u636e\n        else:\n            print(\"saving data.....\")\n            total_data_nums += save_data(results, file_name)\n            if total_data_nums &gt;= sheet_max_datas:\n                total_data_nums = 0\n                file_index += 1\n                file_name = file_name_prefix + str(file_index) + '.xlsx'\n                create_file(file_name)\n            if start + num &gt;= len(stock_ids):\n                break\n            start += num\n            if start % 60 == 0:\n                print(\"sleeping 10s.....\")\n                time.sleep(10)\n    print(\"\u722c\u53d6\u4fe1\u606f\u5b8c\u6bd5\uff01\uff01\uff01\")\n</code></pre>"},{"location":"PROJECTS/","title":"\u7b80\u4ecb","text":"<ul> <li>\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u672c\u4eba\u6240\u4f5c\u7684\u9879\u76ee\u7684\u535a\u5ba2\u8bb0\u5f55\uff0c\u76ee\u524d\u5305\u542b\u672c\u4eba\u5bf9\u4e8eBustub\u9879\u76ee\u7684\u8bb0\u5f55\uff0c\u76ee\u524d\u5904\u4e8e\u66f4\u65b0\u4e2d</li> <li>\u8be6\u60c5\u53ef\u89c1\u4fa7\u8fb9\u680f</li> </ul>"},{"location":"PROJECTS/BUSTUB/DebugMutilThreads/","title":"\u591a\u7ebf\u7a0b\u8c03\u8bd5","text":""},{"location":"PROJECTS/BUSTUB/DebugMutilThreads/#_1","title":"\u7b80\u4ecb","text":"<p>C++\u7684\u591a\u7ebf\u7a0b\u8c03\u8bd5\uff0c\u76ee\u524d\u5728clion\u4e2d\u8c03\u8bd5\uff0c\u95ee\u9898\u6765\u6e90\u4e8eP1\u4e2d\u7684bpm_bench\u65e0\u6cd5\u901a\u8fc7\u7684\u95ee\u9898\uff0c</p> <p></p>"},{"location":"PROJECTS/BUSTUB/P0_C%2B%2BPrimer/","title":"p0 C++ primer","text":""},{"location":"PROJECTS/BUSTUB/P0_C%2B%2BPrimer/#_1","title":"\u9898\u76ee\u8981\u6c42\uff1a","text":"<p>\u5229\u7528\u667a\u80fd\u6307\u9488(unique_ptr,shared_ptr,weak_ptr)\u5b9e\u73b0\u4e00\u4e2a\u524d\u7f00\u6811,\u6ce8\u610f\u5199\u65f6\u590d\u5236\u7684\u601d\u60f3\uff0c\u5199\u65f6\u590d\u5236\u540c\u6837\u4e5f\u53ef\u4ee5\u89e3\u51b3\u5404\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u5f02\u6b65\u8bfb\u5199\u7684\u6570\u636e\u51b2\u7a81\u7684\u95ee\u9898\u3002</p>"},{"location":"PROJECTS/BUSTUB/P0_C%2B%2BPrimer/#_2","title":"\u6536\u83b7\uff1a","text":"<ul> <li>\u667a\u80fd\u6307\u9488\u7684\u4f7f\u7528</li> <li>\u524d\u7f00\u6811\u7684\u590d\u4e60</li> <li>\u5916\u6587\u4f5c\u4e1a\u7684\u505a\u6cd5\u548c\u5b66\u4e60</li> <li>\u8c37\u6b4c\u7684\u4ee3\u7801\u7f16\u5199\u89c4\u8303\uff0c\u4f7f\u7528format\u3001check-clang-tidy-p0(1,2,3,4)\u5b8c\u6210\u4ee3\u7801\u89c4\u8303\u7684\u7ea0\u6b63\u548c\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u5730\u65b9\u7684\u5c55\u793a\u3002</li> </ul>"},{"location":"PROJECTS/BUSTUB/P1_Buffer_Pool_Manager/","title":"p1 buffer pool manager","text":""},{"location":"PROJECTS/BUSTUB/P1_Buffer_Pool_Manager/#_1","title":"\u603b\u4f53\u8bbe\u8ba1\u76ee\u6807","text":"<p>\u5b8c\u6210\u6570\u636e\u5e93\u7684\u7f13\u5b58\u7ba1\u7406\u6a21\u5757</p>"},{"location":"PROJECTS/BUSTUB/P1_Buffer_Pool_Manager/#task-1-lru-k-replacement-policy","title":"Task #1 - LRU-K Replacement Policy","text":"<ul> <li>\u5b8c\u6210LRU-K\u7684\u5b9e\u73b0\u5e76\u4fdd\u8bc1\u5b9e\u73b0\u662f\u7ebf\u7a0b\u5b89\u5168\u7684</li> <li>LRU-K\u7684\u5b9a\u4e49\uff1a\u5f53\u591a\u4e2a\u5e27\u5177\u6709back_k_distance\u4e3ainf+\u65f6\uff0c\u9009\u62e9\u51fa\u73b0\u6700\u65e9\u7684\u4e00\u4e2a\u5e27\u9a71\u9010</li> <li>\u5751\uff1a\u4f46\u9a71\u9010\u591a\u4e2aback_k_distance\u65f6\uff0c\u8981\u9a71\u9010\u6700\u65e9\u51fa\u73b0\u7684\u4e00\u4e2a\u5e27\uff0c\u5e76\u4e0d\u662f\u6309\u7167\u4f20\u7edf\u7684LRU\u7b97\u6cd5</li> </ul>"},{"location":"PROJECTS/BUSTUB/P1_Buffer_Pool_Manager/#task2-disk-scheduler","title":"Task#2 - Disk Scheduler","text":"<ul> <li>Promise\u4e0efuture\u662fC++17\u7684\u65b0\u7279\u6027\uff0c\u53ef\u4ee5\u7528\u4e8e\u7ebf\u7a0b\u4e4b\u95f4\u7684PV\u64cd\u4f5c\u6216\u8005\u53d1\u9001\u4fe1\u606f</li> <li>\u5751\uff1a\u8fd9\u4e2aTask\u57fa\u672c\u6ca1\u6709\u5751</li> </ul>"},{"location":"PROJECTS/BUSTUB/P1_Buffer_Pool_Manager/#task3-buffer-pool-manager","title":"Task#3-Buffer Pool Manager","text":"<ul> <li>\u57fa\u4e8eTask#1\u548cTask#2\u6240\u5b9e\u73b0\u7684\u4e1c\u897f\uff0c\u5b9e\u73b0bufferPoolManager</li> <li>bpm_bench.cpp\u7528\u6765\u6d4b\u8bd5bpm\u7684\u8bfb\u53d6\u548c\u5199\u7684\u5e76\u53d1\u6027\u80fd\uff0c\u8c03\u8bd5\u591a\u7ebf\u7a0b\u662f\u4e00\u5927\u96be\u70b9</li> <li>\u5751\uff1a\u4e3b\u8981\u6765\u81ea\u4e8e\u5bf9\u4e8e\u5404\u4e2a\u51fd\u6570\u5b9e\u73b0\u7ec6\u8282\u548c\u8981\u5b8c\u6210\u529f\u80fd\u4e0d\u660e\u786e\u9020\u6210\u7684\uff0c\u8fd9\u4e2a\u8981\u901a\u8fc7\u5206\u6790\u6d4b\u4f8b\u548c\u4ed4\u7ec6\u7406\u89e3\u9898\u76ee\u610f\u601d\u6765\u89e3\u51b3</li> </ul>"},{"location":"PROJECTS/BUSTUB/P1_Buffer_Pool_Manager/#_2","title":"\u603b\u7ed3\u4e0e\u6536\u83b7","text":"<ul> <li>\u7406\u89e3\u9898\u76ee\u610f\u601d\uff0c\u505a\u8fd9\u79cd\u9898\u76ee\u8981\u8fde\u7eed\u505a\uff0c\u4e00\u6c14\u5475\u6210\uff0c\u65ad\u65ad\u7eed\u7eed\u505a\u5f88\u6d6a\u8d39\u65f6\u95f4</li> <li>Promise\u548cfuture\u7684\u4f7f\u7528</li> <li>\u4f53\u4f1a\u5230\u6d4b\u4f8b\u7684\u91cd\u8981\u6027\u548c\u591a\u7ebf\u7a0b\u8c03\u8bd5\u7684\u4e0d\u786e\u5b9a\u6027</li> </ul>"},{"location":"PROJECTS/BUSTUB/P2_EXTENDIBLE_HASH_INDEX/","title":"p2 extendible_hash_index","text":""},{"location":"PROJECTS/BUSTUB/P2_EXTENDIBLE_HASH_INDEX/#_1","title":"\u77e5\u8bc6\u50a8\u5907","text":"<ul> <li>extendible hashing</li> </ul>"}]}